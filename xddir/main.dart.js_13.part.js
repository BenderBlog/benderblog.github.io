// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, deferred-serialization, csp), the Dart to JavaScript compiler version: 2.18.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {
    _LinkedListIterator$(list) {
      return new A._LinkedListIterator(list, list._modificationCount, list._collection$_first);
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    Rect_lerp(a, b, t) {
      var k, t1, t2, t3, t4;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          return new C.Rect(a.left * k, a.top * k, a.right * k, a.bottom * k);
        }
      else {
        t1 = b.left;
        t2 = b.top;
        t3 = b.right;
        t4 = b.bottom;
        if (a == null)
          return new C.Rect(t1 * t, t2 * t, t3 * t, t4 * t);
        else
          return new C.Rect(D._lerpDouble(a.left, t1, t), D._lerpDouble(a.top, t2, t), D._lerpDouble(a.right, t3, t), D._lerpDouble(a.bottom, t4, t));
      }
    },
    Shadow_lerp(a, b, t) {
      var t2, t3,
        t1 = D.Color_lerp(a.color, b.color, t);
      t1.toString;
      t2 = D.Offset_lerp(a.offset, b.offset, t);
      t2.toString;
      t3 = D._lerpDouble(a.blurRadius, b.blurRadius, t);
      return new D.Shadow(t1, t2, t3);
    },
    Shadow_lerpList(a, b, t) {
      var result, commonLength, i,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = C._setArrayType([], type$.JSArray_Shadow);
      if (b == null)
        b = C._setArrayType([], type$.JSArray_Shadow);
      result = C._setArrayType([], type$.JSArray_Shadow);
      commonLength = Math.min(a.length, b.length);
      for (i = 0; i < commonLength; ++i) {
        t1 = A.Shadow_lerp(a[i], b[i], t);
        t1.toString;
        result.push(t1);
      }
      for (t1 = 1 - t, i = commonLength; i < a.length; ++i)
        result.push(J.scale$1$z(a[i], t1));
      for (i = commonLength; i < b.length; ++i)
        result.push(J.scale$1$z(b[i], t));
      return result;
    },
    PluginUtilities_getCallbackHandle(callback) {
      throw C.wrapException(C.UnimplementedError$(null));
    },
    PluginUtilities_getCallbackFromHandle(handle) {
      throw C.wrapException(C.UnimplementedError$(null));
    },
    CallbackHandle: function CallbackHandle(t0) {
      this._ui$_handle = t0;
    },
    AnimationMin$(first, next, $T) {
      return new A.AnimationMin(first, next, new D.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new D.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0, $T._eval$1("AnimationMin<0>"));
    },
    CompoundAnimation: function CompoundAnimation() {
    },
    AnimationMin: function AnimationMin(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.first = t0;
      _.next = t1;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t2;
      _.AnimationLocalListenersMixin__listeners = t3;
      _.AnimationLazyListenerMixin__listenerCounter = t4;
      _.$ti = t5;
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    ReverseTween: function ReverseTween(t0, t1, t2, t3) {
      var _ = this;
      _.parent = t0;
      _.begin = t1;
      _.end = t2;
      _.$ti = t3;
    },
    RectTween: function RectTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    CupertinoIconThemeData: function CupertinoIconThemeData(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _._opacity = t1;
      _.size = t2;
      _.shadows = t3;
    },
    _CupertinoIconThemeData_IconThemeData_Diagnosticable: function _CupertinoIconThemeData_IconThemeData_Diagnosticable() {
    },
    _CupertinoLocalizationsDelegate: function _CupertinoLocalizationsDelegate() {
    },
    DefaultCupertinoLocalizations: function DefaultCupertinoLocalizations() {
    },
    CupertinoTheme: function CupertinoTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedCupertinoTheme: function _InheritedCupertinoTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    DeviceGestureSettings: function DeviceGestureSettings(t0) {
      this.touchSlop = t0;
    },
    MaterialApp_createMaterialHeroController() {
      return new A.HeroController(new A.MaterialApp_createMaterialHeroController_closure(), C.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroFlight));
    },
    ThemeMode: function ThemeMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MaterialApp: function MaterialApp(t0, t1, t2, t3) {
      var _ = this;
      _.home = t0;
      _.title = t1;
      _.theme = t2;
      _.key = t3;
    },
    MaterialApp_createMaterialHeroController_closure: function MaterialApp_createMaterialHeroController_closure() {
    },
    MaterialScrollBehavior: function MaterialScrollBehavior() {
    },
    _MaterialAppState: function _MaterialAppState(t0) {
      var _ = this;
      _.___MaterialAppState__heroController_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _MaterialAppState__buildWidgetApp_closure: function _MaterialAppState__buildWidgetApp_closure() {
    },
    _MaterialAppState_build_closure: function _MaterialAppState_build_closure() {
    },
    AppBar$(actions, title) {
      return new A.AppBar(title, actions, new A._PreferredAppBarSize(null, null, 1 / 0, 56), null);
    },
    AppBar_preferredHeightFor(context, preferredSize) {
      var t1 = D.Theme_of(context).appBarTheme.toolbarHeight;
      if (t1 == null)
        t1 = 56;
      return t1 + 0;
    },
    _ToolbarContainerLayout: function _ToolbarContainerLayout(t0) {
      this.toolbarHeight = t0;
    },
    _PreferredAppBarSize: function _PreferredAppBarSize(t0, t1, t2, t3) {
      var _ = this;
      _.toolbarHeight = t0;
      _.bottomHeight = t1;
      _._dx = t2;
      _._dy = t3;
    },
    AppBar: function AppBar(t0, t1, t2, t3) {
      var _ = this;
      _.title = t0;
      _.actions = t1;
      _.preferredSize = t2;
      _.key = t3;
    },
    AppBar__getEffectiveCenterTitle_platformCenter: function AppBar__getEffectiveCenterTitle_platformCenter(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    _AppBarState: function _AppBarState(t0) {
      var _ = this;
      _._scrollNotificationObserver = null;
      _._scrolledUnder = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _AppBarState__handleScrollNotification_closure: function _AppBarState__handleScrollNotification_closure() {
    },
    _AppBarTitleBox: function _AppBarTitleBox(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderAppBarTitleBox: function _RenderAppBarTitleBox(t0, t1, t2, t3) {
      var _ = this;
      _._resolvedAlignment = null;
      _._alignment = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _AppBarDefaultsM2: function _AppBarDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.context = t0;
      _.___AppBarDefaultsM2__colors_FI = _.___AppBarDefaultsM2__theme_FI = $;
      _.brightness = t1;
      _.backgroundColor = t2;
      _.foregroundColor = t3;
      _.elevation = t4;
      _.scrolledUnderElevation = t5;
      _.shadowColor = t6;
      _.surfaceTintColor = t7;
      _.shape = t8;
      _.iconTheme = t9;
      _.actionsIconTheme = t10;
      _.textTheme = t11;
      _.centerTitle = t12;
      _.titleSpacing = t13;
      _.toolbarHeight = t14;
      _.toolbarTextStyle = t15;
      _.titleTextStyle = t16;
      _.systemOverlayStyle = t17;
      _.backwardsCompatibility = t18;
    },
    _maxBy(input, keyFunc) {
      var maxKey, _i, value, key,
        maxValue = C._Cell$named("maxValue");
      for (maxKey = null, _i = 0; _i < 4; ++_i) {
        value = input[_i];
        key = keyFunc.call$1(value);
        if (maxKey == null || key > maxKey) {
          maxValue.__late_helper$_value = value;
          maxKey = key;
        }
      }
      return maxValue._readLocal$0();
    },
    MaterialPointArcTween: function MaterialPointArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _._endAngle = _._beginAngle = _._arc$_radius = _._arc$_center = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialPointArcTween__initialize_sweepAngle: function MaterialPointArcTween__initialize_sweepAngle(t0, t1) {
      this.$this = t0;
      this.distanceFromAtoB = t1;
    },
    _CornerId: function _CornerId(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _Diagonal: function _Diagonal(t0, t1) {
      this.beginId = t0;
      this.endId = t1;
    },
    MaterialRectArcTween: function MaterialRectArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _.__MaterialRectArcTween__endArc_A = _.__MaterialRectArcTween__beginArc_A = $;
      _.begin = t0;
      _.end = t1;
    },
    MaterialRectArcTween__initialize_closure: function MaterialRectArcTween__initialize_closure(t0, t1) {
      this.$this = t0;
      this.centersVector = t1;
    },
    BackButtonIcon__getIconData(platform) {
      switch (platform.index) {
        case 0:
        case 1:
        case 3:
        case 5:
          return H.IconData_57490_true;
        case 2:
        case 4:
          return B.IconData_57491_true;
      }
    },
    BackButtonIcon: function BackButtonIcon(t0) {
      this.key = t0;
    },
    BackButton: function BackButton(t0) {
      this.key = t0;
    },
    BackButton_build_closure: function BackButton_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    RawMaterialButton: function RawMaterialButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.onPressed = t0;
      _.mouseCursor = t1;
      _.textStyle = t2;
      _.fillColor = t3;
      _.focusColor = t4;
      _.hoverColor = t5;
      _.splashColor = t6;
      _.elevation = t7;
      _.hoverElevation = t8;
      _.focusElevation = t9;
      _.highlightElevation = t10;
      _.disabledElevation = t11;
      _.constraints = t12;
      _.shape = t13;
      _.child = t14;
      _.materialTapTargetSize = t15;
      _.focusNode = t16;
      _.autofocus = t17;
      _.clipBehavior = t18;
      _.enableFeedback = t19;
      _.key = t20;
    },
    _RawMaterialButtonState: function _RawMaterialButtonState(t0, t1) {
      var _ = this;
      _.MaterialStateMixin_materialStates = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _InputPadding0: function _InputPadding0(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderInputPadding0: function _RenderInputPadding0(t0, t1, t2) {
      var _ = this;
      _._button$_minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderInputPadding_hitTest_closure0: function _RenderInputPadding_hitTest_closure0(t0, t1) {
      this.$this = t0;
      this.center = t1;
    },
    __RawMaterialButtonState_State_MaterialStateMixin: function __RawMaterialButtonState_State_MaterialStateMixin() {
    },
    ButtonStyle_lerp(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t4 = t3 ? _null : b.textStyle;
      t4 = A.ButtonStyle__lerpProperties(t2, t4, t, D.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t2 = t1 ? _null : a.backgroundColor;
      t5 = t3 ? _null : b.backgroundColor;
      t6 = type$.nullable_Color;
      t5 = A.ButtonStyle__lerpProperties(t2, t5, t, D.ui_Color_lerp$closure(), t6);
      t2 = t1 ? _null : a.foregroundColor;
      t2 = A.ButtonStyle__lerpProperties(t2, t3 ? _null : b.foregroundColor, t, D.ui_Color_lerp$closure(), t6);
      t7 = t1 ? _null : a.overlayColor;
      t7 = A.ButtonStyle__lerpProperties(t7, t3 ? _null : b.overlayColor, t, D.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.shadowColor;
      t8 = A.ButtonStyle__lerpProperties(t8, t3 ? _null : b.shadowColor, t, D.ui_Color_lerp$closure(), t6);
      t9 = t1 ? _null : a.surfaceTintColor;
      t6 = A.ButtonStyle__lerpProperties(t9, t3 ? _null : b.surfaceTintColor, t, D.ui_Color_lerp$closure(), t6);
      t9 = t1 ? _null : a.elevation;
      t10 = t3 ? _null : b.elevation;
      t10 = A.ButtonStyle__lerpProperties(t9, t10, t, D.ui__lerpDouble$closure(), type$.nullable_double);
      t9 = t1 ? _null : a.padding;
      t11 = t3 ? _null : b.padding;
      t11 = A.ButtonStyle__lerpProperties(t9, t11, t, F.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t9 = t1 ? _null : a.minimumSize;
      t12 = t3 ? _null : b.minimumSize;
      t13 = type$.nullable_Size;
      t12 = A.ButtonStyle__lerpProperties(t9, t12, t, F.ui_Size_lerp$closure(), t13);
      t9 = t1 ? _null : a.fixedSize;
      t9 = A.ButtonStyle__lerpProperties(t9, t3 ? _null : b.fixedSize, t, F.ui_Size_lerp$closure(), t13);
      t14 = t1 ? _null : a.maximumSize;
      t13 = A.ButtonStyle__lerpProperties(t14, t3 ? _null : b.maximumSize, t, F.ui_Size_lerp$closure(), t13);
      t14 = t1 ? _null : a.side;
      t14 = A.ButtonStyle__lerpSides(t14, t3 ? _null : b.side, t);
      t15 = t1 ? _null : a.shape;
      t16 = t3 ? _null : b.shape;
      t16 = A.MaterialStateProperty_lerp(t15, t16, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t15 = t < 0.5;
      if (t15)
        t17 = t1 ? _null : a.mouseCursor;
      else
        t17 = t3 ? _null : b.mouseCursor;
      if (t15)
        t18 = t1 ? _null : a.visualDensity;
      else
        t18 = t3 ? _null : b.visualDensity;
      if (t15)
        t19 = t1 ? _null : a.tapTargetSize;
      else
        t19 = t3 ? _null : b.tapTargetSize;
      if (t15)
        t20 = t1 ? _null : a.animationDuration;
      else
        t20 = t3 ? _null : b.animationDuration;
      if (t15)
        t21 = t1 ? _null : a.enableFeedback;
      else
        t21 = t3 ? _null : b.enableFeedback;
      t22 = t1 ? _null : a.alignment;
      t22 = A.AlignmentGeometry_lerp(t22, t3 ? _null : b.alignment, t);
      if (t15)
        t1 = t1 ? _null : a.splashFactory;
      else
        t1 = t3 ? _null : b.splashFactory;
      return F.ButtonStyle$(t22, t20, t5, t10, t21, t9, t2, t13, t12, t17, t7, t11, t8, t16, t14, t1, t6, t19, t4, t18);
    },
    ButtonStyle__lerpProperties(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new A._LerpProperties(a, b, t, lerpFunction, $T._eval$1("_LerpProperties<0>"));
    },
    ButtonStyle__lerpSides(a, b, t) {
      if (a == null && b == null)
        return null;
      return new A._LerpSides(a, b, t);
    },
    _LerpProperties: function _LerpProperties(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _LerpSides: function _LerpSides(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    VerticalDivider: function VerticalDivider(t0) {
      this.key = t0;
    },
    DrawerAlignment: function DrawerAlignment(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Drawer: function Drawer(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    DrawerController: function DrawerController(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.child = t0;
      _.alignment = t1;
      _.drawerCallback = t2;
      _.dragStartBehavior = t3;
      _.scrimColor = t4;
      _.enableOpenDragGesture = t5;
      _.edgeDragWidth = t6;
      _.isDrawerOpen = t7;
      _.key = t8;
    },
    DrawerControllerState: function DrawerControllerState(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._historyEntry = null;
      _._focusScopeNode = t0;
      _.__DrawerControllerState__controller_A = $;
      _._drawer$_drawerKey = t1;
      _._previouslyOpened = false;
      _.__DrawerControllerState__scrimColorTween_A = $;
      _._drawer$_gestureDetectorKey = t2;
      _.SingleTickerProviderStateMixin__ticker = t3;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t4;
      _._widget = null;
      _._debugLifecycleState = t5;
      _._framework$_element = null;
    },
    DrawerControllerState__animationChanged_closure: function DrawerControllerState__animationChanged_closure() {
    },
    _DrawerControllerState_State_SingleTickerProviderStateMixin: function _DrawerControllerState_State_SingleTickerProviderStateMixin() {
    },
    FlexibleSpaceBarSettings: function FlexibleSpaceBarSettings(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.toolbarOpacity = t0;
      _.minExtent = t1;
      _.maxExtent = t2;
      _.currentExtent = t3;
      _.isScrolledUnder = t4;
      _.child = t5;
      _.key = t6;
    },
    _DefaultHeroTag: function _DefaultHeroTag() {
    },
    _FloatingActionButtonType: function _FloatingActionButtonType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FloatingActionButton: function FloatingActionButton(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.onPressed = t1;
      _._floatingActionButtonType = t2;
      _.key = t3;
    },
    _ChildOverflowBox: function _ChildOverflowBox(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderChildOverflowBox: function _RenderChildOverflowBox(t0, t1, t2, t3) {
      var _ = this;
      _._resolvedAlignment = null;
      _._alignment = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _FABDefaultsM2: function _FABDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.type = t0;
      _.hasChild = t1;
      _._floating_action_button$_theme = t2;
      _._floating_action_button$_colors = t3;
      _.foregroundColor = t4;
      _.backgroundColor = t5;
      _.focusColor = t6;
      _.hoverColor = t7;
      _.splashColor = t8;
      _.elevation = t9;
      _.focusElevation = t10;
      _.hoverElevation = t11;
      _.disabledElevation = t12;
      _.highlightElevation = t13;
      _.shape = t14;
      _.enableFeedback = t15;
      _.iconSize = t16;
      _.sizeConstraints = t17;
      _.smallSizeConstraints = t18;
      _.largeSizeConstraints = t19;
      _.extendedSizeConstraints = t20;
      _.extendedIconLabelSpacing = t21;
      _.extendedPadding = t22;
      _.extendedTextStyle = t23;
    },
    _AnimationSwap$(first, next, $parent, swapThreshold, $T) {
      return new A._AnimationSwap($parent, swapThreshold, first, next, new D.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new D.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0, $T._eval$1("_AnimationSwap<0>"));
    },
    FloatingActionButtonLocation: function FloatingActionButtonLocation() {
    },
    StandardFabLocation: function StandardFabLocation() {
    },
    FabFloatOffsetY: function FabFloatOffsetY() {
    },
    FabEndOffsetX: function FabEndOffsetX() {
    },
    _EndFloatFabLocation: function _EndFloatFabLocation() {
    },
    FloatingActionButtonAnimator: function FloatingActionButtonAnimator() {
    },
    _ScalingFabMotionAnimator: function _ScalingFabMotionAnimator() {
    },
    _AnimationSwap: function _AnimationSwap(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.parent = t0;
      _.swapThreshold = t1;
      _.first = t2;
      _.next = t3;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t4;
      _.AnimationLocalListenersMixin__listeners = t5;
      _.AnimationLazyListenerMixin__listenerCounter = t6;
      _.$ti = t7;
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX() {
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY() {
    },
    Ink: function Ink(t0, t1, t2) {
      this.child = t0;
      this.decoration = t1;
      this.key = t2;
    },
    _InkState: function _InkState(t0, t1) {
      var _ = this;
      _._boxKey = t0;
      _._widget = _._ink = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    InkDecoration: function InkDecoration(t0, t1, t2, t3) {
      var _ = this;
      _._ink_decoration$_decoration = _._ink_decoration$_painter = null;
      _._ink_decoration$_configuration = t0;
      _._material$_controller = t1;
      _.referenceBox = t2;
      _.onRemoved = t3;
      _._material$_debugDisposed = false;
    },
    ListTile$(leading, onTap, title) {
      return new A.ListTile(leading, title, onTap, null);
    },
    _RenderListTile__layoutBox(box, constraints) {
      var t1;
      if (box == null)
        return E.Size_0_0;
      box.layout$2$parentUsesSize(constraints, true);
      t1 = box._size;
      t1.toString;
      return t1;
    },
    ListTileStyle: function ListTileStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ListTile: function ListTile(t0, t1, t2, t3) {
      var _ = this;
      _.leading = t0;
      _.title = t1;
      _.onTap = t2;
      _.key = t3;
    },
    _ListTileSlot: function _ListTileSlot(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _ListTile: function _ListTile(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.leading = t0;
      _.title = t1;
      _.subtitle = t2;
      _.trailing = t3;
      _.isThreeLine = t4;
      _.isDense = t5;
      _.visualDensity = t6;
      _.textDirection = t7;
      _.titleBaselineType = t8;
      _.subtitleBaselineType = t9;
      _.horizontalTitleGap = t10;
      _.minVerticalPadding = t11;
      _.minLeadingWidth = t12;
      _.key = t13;
    },
    _RenderListTile: function _RenderListTile(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._isDense = t0;
      _._visualDensity = t1;
      _._isThreeLine = t2;
      _._list_tile$_textDirection = t3;
      _._titleBaselineType = t4;
      _._subtitleBaselineType = t5;
      _._horizontalTitleGap = t6;
      _._minVerticalPadding = t7;
      _._minLeadingWidth = t8;
      _.SlottedContainerRenderObjectMixin__slotToChild = t9;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t10;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderListTile_paint_doPaint: function _RenderListTile_paint_doPaint(t0, t1) {
      this.context = t0;
      this.offset = t1;
    },
    _RenderListTile_hitTestChildren_closure: function _RenderListTile_hitTestChildren_closure(t0, t1, t2) {
      this.position = t0;
      this.parentData = t1;
      this.child = t2;
    },
    __ListTile_RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin: function __ListTile_RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin() {
    },
    __RenderListTile_RenderBox_SlottedContainerRenderObjectMixin: function __RenderListTile_RenderBox_SlottedContainerRenderObjectMixin() {
    },
    ListTileThemeData$(contentPadding, dense, enableFeedback, horizontalTitleGap, iconColor, minLeadingWidth, minVerticalPadding, mouseCursor, selectedColor, selectedTileColor, shape, style, textColor, tileColor, visualDensity) {
      return new D.ListTileThemeData(dense, shape, style, selectedColor, iconColor, textColor, contentPadding, tileColor, selectedTileColor, horizontalTitleGap, minVerticalPadding, minLeadingWidth, enableFeedback, mouseCursor, visualDensity);
    },
    ListTileThemeData_lerp(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15,
        t1 = t < 0.5;
      if (t1)
        t2 = a.dense;
      else
        t2 = b.dense;
      t3 = D.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t1)
        t4 = a.style;
      else
        t4 = b.style;
      t5 = D.Color_lerp(a.selectedColor, b.selectedColor, t);
      t6 = D.Color_lerp(a.iconColor, b.iconColor, t);
      t7 = D.Color_lerp(a.textColor, b.textColor, t);
      t8 = F.EdgeInsetsGeometry_lerp(a.contentPadding, b.contentPadding, t);
      t9 = D.Color_lerp(a.tileColor, b.tileColor, t);
      t10 = D.Color_lerp(a.selectedTileColor, b.selectedTileColor, t);
      t11 = D.lerpDouble(a.horizontalTitleGap, b.horizontalTitleGap, t);
      t12 = D.lerpDouble(a.minVerticalPadding, b.minVerticalPadding, t);
      t13 = D.lerpDouble(a.minLeadingWidth, b.minLeadingWidth, t);
      if (t1)
        t14 = a.enableFeedback;
      else
        t14 = b.enableFeedback;
      if (t1)
        t15 = a.mouseCursor;
      else
        t15 = b.mouseCursor;
      if (t1)
        t1 = a.visualDensity;
      else
        t1 = b.visualDensity;
      return A.ListTileThemeData$(t8, t2, t14, t11, t6, t13, t12, t15, t5, t10, t3, t4, t7, t9, t1);
    },
    ListTileTheme$(child, data, key) {
      return new A.ListTileTheme(data, child, key);
    },
    ListTileTheme_of(context) {
      var result = context.dependOnInheritedWidgetOfExactType$1$0(type$.ListTileTheme),
        t1 = result == null ? null : result.get$data(result);
      return t1 == null ? D.Theme_of(context).listTileTheme : t1;
    },
    ListTileTheme_merge(child, style) {
      var _null = null;
      return new F.Builder(new A.ListTileTheme_merge_closure(_null, _null, _null, style, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, child), _null);
    },
    ListTileTheme: function ListTileTheme(t0, t1, t2) {
      this._list_tile_theme$_data = t0;
      this.child = t1;
      this.key = t2;
    },
    ListTileTheme_merge_closure: function ListTileTheme_merge_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.key = t0;
      _.dense = t1;
      _.shape = t2;
      _.style = t3;
      _.selectedColor = t4;
      _.iconColor = t5;
      _.textColor = t6;
      _.contentPadding = t7;
      _.tileColor = t8;
      _.selectedTileColor = t9;
      _.enableFeedback = t10;
      _.horizontalTitleGap = t11;
      _.minVerticalPadding = t12;
      _.minLeadingWidth = t13;
      _.child = t14;
    },
    _MaterialLocalizationsDelegate: function _MaterialLocalizationsDelegate() {
    },
    DefaultMaterialLocalizations: function DefaultMaterialLocalizations() {
    },
    MaterialStateProperty_lerp(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new A._LerpProperties0(a, b, t, lerpFunction, $T._eval$1("_LerpProperties0<0>"));
    },
    _LerpProperties0: function _LerpProperties0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    MaterialStateMixin: function MaterialStateMixin() {
    },
    MaterialStateMixin_updateMaterialState_closure: function MaterialStateMixin_updateMaterialState_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.onChanged = t2;
    },
    MaterialStateMixin_addMaterialState_closure: function MaterialStateMixin_addMaterialState_closure() {
    },
    MaterialStateMixin_removeMaterialState_closure: function MaterialStateMixin_removeMaterialState_closure() {
    },
    MaterialPageRoute: function MaterialPageRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.builder = t0;
      _.fullscreenDialog = t1;
      _.filter = t2;
      _._offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t3;
      _._scopeKey = t4;
      _._subtreeKey = t5;
      _._storageBucket = t6;
      _.__ModalRoute__modalBarrier_A = $;
      _._modalScopeCache = null;
      _.__ModalRoute__modalScope_A = $;
      _.LocalHistoryRoute__localHistory = t7;
      _.LocalHistoryRoute__entriesImpliesAppBarDismissal = t8;
      _._transitionCompleter = t9;
      _._popFinalized = false;
      _._routes$_controller = _._routes$_animation = null;
      _._secondaryAnimation = t10;
      _._trainHoppingListenerRemover = _._result = null;
      _._overlayEntries = t11;
      _._navigator = null;
      _._settings = t12;
      _._restorationScopeId = t13;
      _._popCompleter = t14;
      _.$ti = t15;
    },
    MaterialRouteTransitionMixin: function MaterialRouteTransitionMixin() {
    },
    _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin: function _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin() {
    },
    Scaffold$(appBar, body, drawer) {
      return new A.Scaffold(appBar, body, drawer, null);
    },
    Scaffold_of(context) {
      var result = context.findAncestorStateOfType$1$0(type$.ScaffoldState);
      if (result != null)
        return result;
      throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$("Scaffold.of() called with a context that does not contain a Scaffold."), C.ErrorDescription$("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). This usually happens when the context provided is from the same StatefulWidget as that whose build function actually creates the Scaffold widget being sought."), C.ErrorHint$('There are several ways to avoid this problem. The simplest is to use a Builder to get a context that is "under" the Scaffold. For an example of this, please see the documentation for Scaffold.of():\n  https://api.flutter.dev/flutter/material/Scaffold/of.html'), C.ErrorHint$("A more efficient solution is to split your build function into several widgets. This introduces a new context from which you can obtain the Scaffold. In this solution, you would have an outer widget that creates the Scaffold populated by instances of your new inner widgets, and then in these inner widgets you would use Scaffold.of().\nA less elegant but more expedient solution is assign a GlobalKey to the Scaffold, then use the key.currentState property to obtain the ScaffoldState rather than using the Scaffold.of() function."), context.describeElement$1("The context used was")], type$.JSArray_DiagnosticsNode)));
    },
    _ScaffoldSlot: function _ScaffoldSlot(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ScaffoldMessenger: function ScaffoldMessenger(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScaffoldMessengerState: function ScaffoldMessengerState(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._scaffolds = t0;
      _._materialBanners = t1;
      _._snackBars = t2;
      _._accessibleNavigation = _._snackBarTimer = null;
      _.TickerProviderStateMixin__tickers = t3;
      _.TickerProviderStateMixin__tickerModeNotifier = t4;
      _._widget = null;
      _._debugLifecycleState = t5;
      _._framework$_element = null;
    },
    ScaffoldMessengerState_hideCurrentSnackBar_closure: function ScaffoldMessengerState_hideCurrentSnackBar_closure(t0, t1, t2) {
      this.$this = t0;
      this.completer = t1;
      this.reason = t2;
    },
    _ScaffoldMessengerScope: function _ScaffoldMessengerScope(t0, t1, t2) {
      this._scaffoldMessengerState = t0;
      this.child = t1;
      this.key = t2;
    },
    ScaffoldPrelayoutGeometry: function ScaffoldPrelayoutGeometry(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.floatingActionButtonSize = t0;
      _.bottomSheetSize = t1;
      _.contentBottom = t2;
      _.minInsets = t3;
      _.minViewPadding = t4;
      _.scaffoldSize = t5;
      _.snackBarSize = t6;
      _.textDirection = t7;
    },
    ScaffoldGeometry: function ScaffoldGeometry(t0, t1) {
      this.bottomNavigationBarTop = t0;
      this.floatingActionButtonArea = t1;
    },
    _ScaffoldGeometryNotifier: function _ScaffoldGeometryNotifier(t0, t1, t2) {
      var _ = this;
      _.context = t0;
      _.floatingActionButtonScale = null;
      _.geometry = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
    },
    _BodyBoxConstraints: function _BodyBoxConstraints(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.bottomWidgetsHeight = t0;
      _.appBarHeight = t1;
      _.materialBannerHeight = t2;
      _.minWidth = t3;
      _.maxWidth = t4;
      _.minHeight = t5;
      _.maxHeight = t6;
    },
    _BodyBuilder: function _BodyBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.body = t0;
      _.extendBody = t1;
      _.extendBodyBehindAppBar = t2;
      _.key = t3;
    },
    _ScaffoldLayout: function _ScaffoldLayout(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.extendBody = t0;
      _.extendBodyBehindAppBar = t1;
      _.minInsets = t2;
      _.minViewPadding = t3;
      _.textDirection = t4;
      _.geometryNotifier = t5;
      _.previousFloatingActionButtonLocation = t6;
      _.currentFloatingActionButtonLocation = t7;
      _.floatingActionButtonMoveAnimationProgress = t8;
      _.floatingActionButtonMotionAnimator = t9;
      _.isSnackBarFloating = t10;
      _.snackBarWidth = t11;
      _.extendBodyBehindMaterialBanner = t12;
      _._debugChildrenNeedingLayout = _._idToChild = null;
    },
    _FloatingActionButtonTransition: function _FloatingActionButtonTransition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.fabMoveAnimation = t1;
      _.fabMotionAnimator = t2;
      _.geometryNotifier = t3;
      _.currentController = t4;
      _.key = t5;
    },
    _FloatingActionButtonTransitionState: function _FloatingActionButtonTransitionState(t0, t1, t2) {
      var _ = this;
      _.___FloatingActionButtonTransitionState__currentRotationAnimation_A = _.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A = _.___FloatingActionButtonTransitionState__currentScaleAnimation_A = _.___FloatingActionButtonTransitionState__previousRotationAnimation_A = _.___FloatingActionButtonTransitionState__previousScaleAnimation_A = _.___FloatingActionButtonTransitionState__previousController_A = $;
      _._previousChild = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure: function _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(t0, t1) {
      this.$this = t0;
      this.status = t1;
    },
    Scaffold: function Scaffold(t0, t1, t2, t3) {
      var _ = this;
      _.appBar = t0;
      _.body = t1;
      _.drawer = t2;
      _.key = t3;
    },
    ScaffoldState: function ScaffoldState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._drawerKey = t0;
      _._endDrawerKey = t1;
      _._bodyKey = t2;
      _._appBarMaxHeight = null;
      _._drawerOpened = t3;
      _._endDrawerOpened = t4;
      _._messengerMaterialBanner = _._messengerSnackBar = _._scaffoldMessenger = null;
      _._dismissedBottomSheets = t5;
      _._currentBottomSheet = null;
      _._currentBottomSheetKey = t6;
      _.__ScaffoldState__floatingActionButtonAnimator_A = _.__ScaffoldState__floatingActionButtonMoveController_A = $;
      _._floatingActionButtonLocation = _._previousFloatingActionButtonLocation = null;
      _.__ScaffoldState__geometryNotifier_A = _.__ScaffoldState__floatingActionButtonVisibilityController_A = $;
      _._showBodyScrim = false;
      _._bodyScrimColor = t7;
      _.RestorationMixin__bucket = t8;
      _.RestorationMixin__properties = t9;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t10;
      _.RestorationMixin__firstRestorePending = t11;
      _.RestorationMixin__currentParent = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _.TickerProviderStateMixin__tickerModeNotifier = t14;
      _._widget = null;
      _._debugLifecycleState = t15;
      _._framework$_element = null;
    },
    ScaffoldState__drawerOpenedCallback_closure: function ScaffoldState__drawerOpenedCallback_closure(t0, t1) {
      this.$this = t0;
      this.isOpened = t1;
    },
    ScaffoldState__updateSnackBar_closure: function ScaffoldState__updateSnackBar_closure(t0, t1) {
      this.$this = t0;
      this.messengerSnackBar = t1;
    },
    ScaffoldState__updateMaterialBanner_closure: function ScaffoldState__updateMaterialBanner_closure(t0, t1) {
      this.$this = t0;
      this.messengerMaterialBanner = t1;
    },
    ScaffoldState_build_closure: function ScaffoldState_build_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.extendBody = t2;
      _.minInsets = t3;
      _.minViewPadding = t4;
      _.textDirection = t5;
      _.children = t6;
    },
    _DismissDrawerAction: function _DismissDrawerAction(t0, t1) {
      this.context = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    _ScaffoldScope: function _ScaffoldScope(t0, t1, t2) {
      this.hasDrawer = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _ScaffoldMessengerState_State_TickerProviderStateMixin: function _ScaffoldMessengerState_State_TickerProviderStateMixin() {
    },
    _ScaffoldState_State_TickerProviderStateMixin: function _ScaffoldState_State_TickerProviderStateMixin() {
    },
    _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin: function _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    __FloatingActionButtonTransitionState_State_TickerProviderStateMixin: function __FloatingActionButtonTransitionState_State_TickerProviderStateMixin() {
    },
    _TextSpanEditingController$(textSpan) {
      var t1 = textSpan.toPlainText$1$includeSemanticsLabels(false);
      return new A._TextSpanEditingController(textSpan, new C.TextEditingValue(t1, E.TextSelection_ke5, E.TextRange_m1_m1), $.$get$ChangeNotifier__emptyListeners());
    },
    _TextSpanEditingController: function _TextSpanEditingController(t0, t1, t2) {
      var _ = this;
      _._textSpan = t0;
      _._change_notifier$_value = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
    },
    _SelectableTextSelectionGestureDetectorBuilder: function _SelectableTextSelectionGestureDetectorBuilder(t0, t1) {
      var _ = this;
      _._selectable_text$_state = t0;
      _.delegate = t1;
      _._shouldShowSelectionToolbar = true;
      _._dragStartViewportOffset = 0;
      _._isShiftTapping = false;
      _._shiftTapDragSelection = null;
    },
    SelectableText: function SelectableText(t0) {
      this.key = t0;
    },
    _SelectableTextState: function _SelectableTextState(t0, t1) {
      var _ = this;
      _.___SelectableTextState__controller_A = $;
      _._focusNode = null;
      _._showSelectionHandles = false;
      _.___SelectableTextState_forcePressEnabled_A = _.___SelectableTextState__selectionGestureDetectorBuilder_A = $;
      _.editableTextKey = t0;
      _._widget = _._lastSeenTextSelection = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _SelectableTextState__onControllerChanged_closure: function _SelectableTextState__onControllerChanged_closure(t0, t1) {
      this.$this = t0;
      this.showSelectionHandles = t1;
    },
    _SelectableTextState__handleSelectionChanged_closure: function _SelectableTextState__handleSelectionChanged_closure(t0, t1) {
      this.$this = t0;
      this.willShowSelectionHandles = t1;
    },
    _SelectableTextState_build_closure: function _SelectableTextState_build_closure(t0) {
      this.$this = t0;
    },
    SnackBarClosedReason: function SnackBarClosedReason(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _LerpColors: function _LerpColors(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    Theme: function Theme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedTheme: function _InheritedTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    ThemeDataTween: function ThemeDataTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedTheme: function AnimatedTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.data = t0;
      _.child = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedThemeState: function _AnimatedThemeState(t0, t1, t2) {
      var _ = this;
      _._theme$_data = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _AnimatedThemeState_forEachTween_closure: function _AnimatedThemeState_forEachTween_closure() {
    },
    ThemeData__lerpThemeExtensions(a, b, t) {
      var t1 = a.extensions,
        newExtensions = t1.map$2$1(t1, new A.ThemeData__lerpThemeExtensions_closure(b, t), type$.Object, type$.ThemeExtension_dynamic);
      t1 = b.extensions;
      newExtensions.addEntries$1(newExtensions, t1.get$entries(t1).where$1(0, new A.ThemeData__lerpThemeExtensions_closure0(a)));
      return newExtensions;
    },
    MaterialBasedCupertinoThemeData$_(_materialTheme, _cupertinoOverrideTheme) {
      return new A.MaterialBasedCupertinoThemeData(_materialTheme, _cupertinoOverrideTheme, H._CupertinoThemeDefaults_iF8, _cupertinoOverrideTheme.brightness, _cupertinoOverrideTheme.primaryColor, _cupertinoOverrideTheme.primaryContrastingColor, _cupertinoOverrideTheme.textTheme, _cupertinoOverrideTheme.barBackgroundColor, _cupertinoOverrideTheme.scaffoldBackgroundColor);
    },
    ThemeData__lerpThemeExtensions_closure: function ThemeData__lerpThemeExtensions_closure(t0, t1) {
      this.b = t0;
      this.t = t1;
    },
    ThemeData__lerpThemeExtensions_closure0: function ThemeData__lerpThemeExtensions_closure0(t0) {
      this.a = t0;
    },
    MaterialBasedCupertinoThemeData: function MaterialBasedCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._materialTheme = t0;
      _._cupertinoOverrideTheme = t1;
      _._defaults = t2;
      _.brightness = t3;
      _.primaryColor = t4;
      _.primaryContrastingColor = t5;
      _.textTheme = t6;
      _.barBackgroundColor = t7;
      _.scaffoldBackgroundColor = t8;
    },
    ShapeDecoration_ShapeDecoration$fromBoxDecoration(source) {
      var t1, shape, t2;
      switch (source.shape.index) {
        case 1:
          t1 = source.border;
          shape = t1 != null ? new D.CircleBorder(t1.get$top(t1)) : G.CircleBorder_Fuf;
          break;
        case 0:
          t1 = source.borderRadius;
          shape = source.border;
          if (t1 != null) {
            t2 = shape == null ? null : shape.get$top(shape);
            shape = new D.RoundedRectangleBorder(t1, t2 == null ? G.BorderSide_aLd : t2);
          } else if (shape == null)
            shape = B.Border_yXb;
          break;
        default:
          shape = null;
      }
      return new A.ShapeDecoration(source.color, source.gradient, source.image, source.boxShadow, shape);
    },
    ShapeDecoration_lerp(a, b, t) {
      var t2, t3, t4, t5, t6, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      if (!t1 && b != null) {
        if (t === 0)
          return a;
        if (t === 1)
          return b;
      }
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t2 = D.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.gradient;
      t4 = D.Gradient_lerp(t4, t3 ? _null : b.gradient, t);
      t5 = t < 0.5 ? a.image : b.image;
      t6 = t1 ? _null : a.shadows;
      t6 = D.BoxShadow_lerpList(t6, t3 ? _null : b.shadows, t);
      t1 = t1 ? _null : a.shape;
      t1 = D.ShapeBorder_lerp(t1, t3 ? _null : b.shape, t);
      t1.toString;
      return new A.ShapeDecoration(t2, t4, t5, t6, t1);
    },
    ShapeDecoration: function ShapeDecoration(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.gradient = t1;
      _.image = t2;
      _.shadows = t3;
      _.shape = t4;
    },
    _ShapeDecorationPainter: function _ShapeDecorationPainter(t0, t1) {
      var _ = this;
      _._shape_decoration$_decoration = t0;
      _._lastTextDirection = _._lastRect = null;
      _.___ShapeDecorationPainter__outerPath_A = $;
      _._shadowCount = _._interiorPaint = _._innerPath = null;
      _.___ShapeDecorationPainter__shadowPaints_A = _.___ShapeDecorationPainter__shadowPaths_A = $;
      _._shape_decoration$_imagePainter = null;
      _.onChanged = t1;
    },
    _ShapeDecorationPainter__precache_closure: function _ShapeDecorationPainter__precache_closure() {
    },
    _ShapeDecorationPainter__precache_closure0: function _ShapeDecorationPainter__precache_closure0(t0, t1, t2) {
      this.$this = t0;
      this.rect = t1;
      this.textDirection = t2;
    },
    MultiChildLayoutParentData: function MultiChildLayoutParentData(t0, t1, t2) {
      var _ = this;
      _.id = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    MultiChildLayoutDelegate: function MultiChildLayoutDelegate() {
    },
    RenderCustomMultiChildLayoutBox: function RenderCustomMultiChildLayoutBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._custom_layout$_delegate = t0;
      _.ContainerRenderObjectMixin__childCount = t1;
      _.ContainerRenderObjectMixin__firstChild = t2;
      _.ContainerRenderObjectMixin__lastChild = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    AnnotationEntry: function AnnotationEntry(t0, t1, t2) {
      this.annotation = t0;
      this.localPosition = t1;
      this.$ti = t2;
    },
    PerformanceOverlayLayer: function PerformanceOverlayLayer(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._overlayRect = t0;
      _.optionsMask = t1;
      _.rasterizerThreshold = t2;
      _.checkerboardRasterCacheImages = t3;
      _.checkerboardOffscreenLayers = t4;
      _._callbacks = t5;
      _._compositionCallbackCount = 0;
      _._layer$_debugDisposed = false;
      _._parentHandle = t6;
      _._refCount = 0;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    AnnotatedRegionLayer: function AnnotatedRegionLayer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.size = t1;
      _.offset = t2;
      _._lastChild = _._firstChild = null;
      _._callbacks = t3;
      _._compositionCallbackCount = 0;
      _._layer$_debugDisposed = false;
      _._parentHandle = t4;
      _._refCount = 0;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
      _.$ti = t5;
    },
    RenderPerformanceOverlay: function RenderPerformanceOverlay(t0, t1, t2, t3, t4) {
      var _ = this;
      _._optionsMask = t0;
      _._rasterizerThreshold = t1;
      _._checkerboardRasterCacheImages = t2;
      _._checkerboardOffscreenLayers = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAbsorbPointer: function RenderAbsorbPointer(t0, t1, t2, t3) {
      var _ = this;
      _._absorbing = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderMergeSemantics: function RenderMergeSemantics(t0, t1) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t1;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAnnotatedRegion: function RenderAnnotatedRegion(t0, t1, t2, t3, t4) {
      var _ = this;
      _._proxy_box$_value = t0;
      _._sized = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
      _.$ti = t4;
    },
    SystemChrome_setApplicationSwitcherDescription(description) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemChrome_setApplicationSwitcherDescription = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return C._asyncAwait(E.OptionalMethodChannel_cWd.invokeMethod$1$2("SystemChrome.setApplicationSwitcherDescription", C.LinkedHashMap_LinkedHashMap$_literal(["label", description.label, "primaryColor", description.primaryColor], type$.String, type$.dynamic), type$.void), $async$SystemChrome_setApplicationSwitcherDescription);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$SystemChrome_setApplicationSwitcherDescription, $async$completer);
    },
    ApplicationSwitcherDescription: function ApplicationSwitcherDescription(t0, t1) {
      this.label = t0;
      this.primaryColor = t1;
    },
    VoidCallbackAction: function VoidCallbackAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    ActivateIntent: function ActivateIntent() {
    },
    ButtonActivateIntent: function ButtonActivateIntent() {
    },
    DismissIntent: function DismissIntent() {
    },
    PrioritizedIntents: function PrioritizedIntents() {
    },
    PrioritizedAction: function PrioritizedAction(t0) {
      var _ = this;
      _.__PrioritizedAction__selectedIntent_A = _.__PrioritizedAction__selectedAction_A = $;
      _._actions$_listeners = t0;
      _._currentCallingAction = null;
    },
    AnnotatedRegion: function AnnotatedRegion(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    basicLocaleListResolution(preferredLocales, supportedLocales) {
      var t1, t2, allSupportedLocales, languageAndCountryLocales, languageAndScriptLocales, languageLocales, countryLocales, _i, locale, t3, t4, matchesLanguageCode, matchesCountryCode, localeIndex, userLocale, match, resolvedLocale;
      if (preferredLocales == null || preferredLocales.length === 0)
        return E.JSArray_methods.get$first(supportedLocales);
      t1 = type$.String;
      t2 = type$.Locale;
      allSupportedLocales = C.HashMap_HashMap(t1, t2);
      languageAndCountryLocales = C.HashMap_HashMap(t1, t2);
      languageAndScriptLocales = C.HashMap_HashMap(t1, t2);
      languageLocales = C.HashMap_HashMap(t1, t2);
      countryLocales = C.HashMap_HashMap(type$.nullable_String, t2);
      for (_i = 0; _i < 1; ++_i) {
        locale = supportedLocales[_i];
        t1 = locale._languageCode;
        t2 = E.Map_YCOho.$index(0, t1);
        if (t2 == null)
          t2 = t1;
        t3 = locale._countryCode;
        t4 = E.Map_0Agg9.$index(0, t3);
        if (t4 == null)
          t4 = t3;
        t4 = t2 + "_null_" + C.S(t4);
        if (allSupportedLocales.$index(0, t4) == null)
          allSupportedLocales.$indexSet(0, t4, locale);
        t2 = E.Map_YCOho.$index(0, t1);
        t2 = (t2 == null ? t1 : t2) + "_null";
        if (languageAndScriptLocales.$index(0, t2) == null)
          languageAndScriptLocales.$indexSet(0, t2, locale);
        t2 = E.Map_YCOho.$index(0, t1);
        if (t2 == null)
          t2 = t1;
        t4 = E.Map_0Agg9.$index(0, t3);
        if (t4 == null)
          t4 = t3;
        t4 = t2 + "_" + C.S(t4);
        if (languageAndCountryLocales.$index(0, t4) == null)
          languageAndCountryLocales.$indexSet(0, t4, locale);
        t2 = E.Map_YCOho.$index(0, t1);
        t1 = t2 == null ? t1 : t2;
        if (languageLocales.$index(0, t1) == null)
          languageLocales.$indexSet(0, t1, locale);
        t1 = E.Map_0Agg9.$index(0, t3);
        if (t1 == null)
          t1 = t3;
        if (countryLocales.$index(0, t1) == null)
          countryLocales.$indexSet(0, t1, locale);
      }
      for (matchesLanguageCode = null, matchesCountryCode = null, localeIndex = 0; localeIndex < preferredLocales.length; ++localeIndex) {
        userLocale = preferredLocales[localeIndex];
        t1 = userLocale._languageCode;
        t2 = E.Map_YCOho.$index(0, t1);
        if (t2 == null)
          t2 = t1;
        t3 = userLocale._countryCode;
        t4 = E.Map_0Agg9.$index(0, t3);
        if (t4 == null)
          t4 = t3;
        if (allSupportedLocales.containsKey$1(0, t2 + "_null_" + C.S(t4)))
          return userLocale;
        t2 = E.Map_0Agg9.$index(0, t3);
        if ((t2 == null ? t3 : t2) != null) {
          t2 = E.Map_YCOho.$index(0, t1);
          if (t2 == null)
            t2 = t1;
          t4 = E.Map_0Agg9.$index(0, t3);
          if (t4 == null)
            t4 = t3;
          match = languageAndCountryLocales.$index(0, t2 + "_" + C.S(t4));
          if (match != null)
            return match;
        }
        if (matchesLanguageCode != null)
          return matchesLanguageCode;
        t2 = E.Map_YCOho.$index(0, t1);
        match = languageLocales.$index(0, t2 == null ? t1 : t2);
        if (match != null) {
          if (localeIndex === 0) {
            t2 = localeIndex + 1;
            if (t2 < preferredLocales.length) {
              t2 = preferredLocales[t2]._languageCode;
              t4 = E.Map_YCOho.$index(0, t2);
              t2 = t4 == null ? t2 : t4;
              t4 = E.Map_YCOho.$index(0, t1);
              t1 = t2 === (t4 == null ? t1 : t4);
            } else
              t1 = false;
            t1 = !t1;
          } else
            t1 = false;
          if (t1)
            return match;
          matchesLanguageCode = match;
        }
        if (matchesCountryCode == null) {
          t1 = E.Map_0Agg9.$index(0, t3);
          t1 = (t1 == null ? t3 : t1) != null;
        } else
          t1 = false;
        if (t1) {
          t1 = E.Map_0Agg9.$index(0, t3);
          match = countryLocales.$index(0, t1 == null ? t3 : t1);
          if (match != null)
            matchesCountryCode = match;
        }
      }
      resolvedLocale = matchesLanguageCode == null ? matchesCountryCode : matchesLanguageCode;
      return resolvedLocale == null ? E.JSArray_methods.get$first(supportedLocales) : resolvedLocale;
    },
    WidgetsApp_defaultShortcuts() {
      return B.Map_zPybB;
    },
    WidgetsApp: function WidgetsApp(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34) {
      var _ = this;
      _.navigatorKey = t0;
      _.onGenerateRoute = t1;
      _.onGenerateInitialRoutes = t2;
      _.pageRouteBuilder = t3;
      _.routeInformationParser = t4;
      _.routerDelegate = t5;
      _.backButtonDispatcher = t6;
      _.routeInformationProvider = t7;
      _.routerConfig = t8;
      _.home = t9;
      _.routes = t10;
      _.onUnknownRoute = t11;
      _.initialRoute = t12;
      _.navigatorObservers = t13;
      _.builder = t14;
      _.title = t15;
      _.onGenerateTitle = t16;
      _.textStyle = t17;
      _.color = t18;
      _.locale = t19;
      _.localizationsDelegates = t20;
      _.localeListResolutionCallback = t21;
      _.localeResolutionCallback = t22;
      _.supportedLocales = t23;
      _.showPerformanceOverlay = t24;
      _.checkerboardRasterCacheImages = t25;
      _.checkerboardOffscreenLayers = t26;
      _.showSemanticsDebugger = t27;
      _.inspectorSelectButtonBuilder = t28;
      _.debugShowCheckedModeBanner = t29;
      _.shortcuts = t30;
      _.actions = t31;
      _.restorationScopeId = t32;
      _.useInheritedMediaQuery = t33;
      _.key = t34;
    },
    _WidgetsAppState: function _WidgetsAppState(t0) {
      var _ = this;
      _._widget = _._app$_locale = _._app$_navigator = _._defaultBackButtonDispatcher = _._defaultRouteInformationProvider = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _WidgetsAppState__onGenerateRoute_closure: function _WidgetsAppState__onGenerateRoute_closure(t0) {
      this.$this = t0;
    },
    _WidgetsAppState_didChangeLocales_closure: function _WidgetsAppState_didChangeLocales_closure(t0, t1) {
      this.$this = t0;
      this.newLocale = t1;
    },
    _WidgetsAppState_build_closure: function _WidgetsAppState_build_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    __WidgetsAppState_State_WidgetsBindingObserver: function __WidgetsAppState_State_WidgetsBindingObserver() {
    },
    FutureBuilder$(builder, future, $T) {
      return new A.FutureBuilder(future, builder, null, $T._eval$1("FutureBuilder<0>"));
    },
    ConnectionState: function ConnectionState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AsyncSnapshot: function AsyncSnapshot(t0, t1, t2, t3, t4) {
      var _ = this;
      _.connectionState = t0;
      _.data = t1;
      _.error = t2;
      _.stackTrace = t3;
      _.$ti = t4;
    },
    FutureBuilder: function FutureBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.future = t0;
      _.builder = t1;
      _.key = t2;
      _.$ti = t3;
    },
    _FutureBuilderState: function _FutureBuilderState(t0, t1) {
      var _ = this;
      _._activeCallbackIdentity = null;
      _.___FutureBuilderState__snapshot_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
      _.$ti = t1;
    },
    _FutureBuilderState__subscribe_closure: function _FutureBuilderState__subscribe_closure(t0, t1) {
      this.$this = t0;
      this.callbackIdentity = t1;
    },
    _FutureBuilderState__subscribe__closure0: function _FutureBuilderState__subscribe__closure0(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _FutureBuilderState__subscribe_closure0: function _FutureBuilderState__subscribe_closure0(t0, t1) {
      this.$this = t0;
      this.callbackIdentity = t1;
    },
    _FutureBuilderState__subscribe__closure: function _FutureBuilderState__subscribe__closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    LayoutId$(child, id) {
      return new A.LayoutId(id, child, new D.ValueKey(id, type$.ValueKey_Object));
    },
    LayoutId: function LayoutId(t0, t1, t2) {
      this.id = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomMultiChildLayout: function CustomMultiChildLayout(t0, t1, t2) {
      this.delegate = t0;
      this.children = t1;
      this.key = t2;
    },
    AbsorbPointer: function AbsorbPointer(t0, t1, t2) {
      this.absorbing = t0;
      this.child = t1;
      this.key = t2;
    },
    MergeSemantics: function MergeSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    DefaultTextEditingShortcuts__shortcuts() {
      switch (C.defaultTargetPlatform().index) {
        case 0:
          return $.$get$DefaultTextEditingShortcuts__androidShortcuts();
        case 1:
          return $.$get$DefaultTextEditingShortcuts__fuchsiaShortcuts();
        case 2:
          return $.$get$DefaultTextEditingShortcuts__iOSShortcuts();
        case 3:
          return $.$get$DefaultTextEditingShortcuts__linuxShortcuts();
        case 4:
          return $.$get$DefaultTextEditingShortcuts__macShortcuts();
        case 5:
          return $.$get$DefaultTextEditingShortcuts__windowsShortcuts();
      }
    },
    DefaultTextEditingShortcuts: function DefaultTextEditingShortcuts(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _getAncestor(context, count) {
      var t1 = {};
      t1.count = count;
      t1.target = null;
      context.visitAncestorElements$1(new A._getAncestor_closure(t1));
      return t1.target;
    },
    _focusAndEnsureVisible(node, alignmentPolicy) {
      var t1;
      node.requestFocus$0();
      t1 = node._context;
      t1.toString;
      A.Scrollable_ensureVisible(t1, 1, alignmentPolicy);
    },
    _FocusTraversalGroupInfo$(marker, defaultPolicy, members) {
      var t1 = marker == null ? null : marker.policy;
      if (t1 == null)
        t1 = defaultPolicy;
      return new A._FocusTraversalGroupInfo(t1, members);
    },
    _ReadingOrderSortData_commonDirectionalityOf(list) {
      var t1, t2, common, t3, common0,
        allAncestors = new C.MappedListIterable(list, new A._ReadingOrderSortData_commonDirectionalityOf_closure(), C._arrayInstanceType(list)._eval$1("MappedListIterable<1,Set<Directionality>>"));
      for (t1 = new C.ListIterator(allAncestors, allAncestors.get$length(allAncestors)), t2 = C._instanceType(t1)._precomputed1, common = null; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        common0 = t3 == null ? t2._as(t3) : t3;
        common = (common == null ? common0 : common).intersection$1(0, common0);
      }
      if (common.get$isEmpty(common))
        return E.JSArray_methods.get$first(list).directionality;
      return E.JSArray_methods.firstWhere$1(E.JSArray_methods.get$first(list).get$directionalAncestors(), common.get$contains(common)).textDirection;
    },
    _ReadingOrderSortData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderSortData_sortWithDirectionality_closure(directionality), type$._ReadingOrderSortData);
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(directionality), type$._ReadingOrderDirectionalGroupData);
    },
    _getAncestor_closure: function _getAncestor_closure(t0) {
      this._box_0 = t0;
    },
    _FocusTraversalGroupInfo: function _FocusTraversalGroupInfo(t0, t1) {
      this.policy = t0;
      this.members = t1;
    },
    FocusTraversalPolicy: function FocusTraversalPolicy() {
    },
    FocusTraversalPolicy__sortAllDescendants_visitGroups: function FocusTraversalPolicy__sortAllDescendants_visitGroups(t0, t1) {
      this.groups = t0;
      this.sortedDescendants = t1;
    },
    FocusTraversalPolicy__sortAllDescendants_closure: function FocusTraversalPolicy__sortAllDescendants_closure() {
    },
    _DirectionalPolicyDataEntry: function _DirectionalPolicyDataEntry(t0, t1) {
      this.direction = t0;
      this.node = t1;
    },
    _DirectionalPolicyData: function _DirectionalPolicyData(t0) {
      this.history = t0;
    },
    DirectionalFocusTraversalPolicyMixin: function DirectionalFocusTraversalPolicyMixin() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(t0) {
      this.node = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(t0, t1) {
      this.vertical = t0;
      this.first = t1;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate: function DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(t0, t1, t2) {
      this.$this = t0;
      this.policyData = t1;
      this.nearestScope = t2;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure: function DirectionalFocusTraversalPolicyMixin_inDirection_closure(t0) {
      this.focusedScrollable = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure0: function DirectionalFocusTraversalPolicyMixin_inDirection_closure0(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure1: function DirectionalFocusTraversalPolicyMixin_inDirection_closure1(t0) {
      this.focusedChild = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure2: function DirectionalFocusTraversalPolicyMixin_inDirection_closure2(t0) {
      this.focusedScrollable = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure3: function DirectionalFocusTraversalPolicyMixin_inDirection_closure3(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure4: function DirectionalFocusTraversalPolicyMixin_inDirection_closure4(t0) {
      this.focusedChild = t0;
    },
    _ReadingOrderSortData: function _ReadingOrderSortData(t0, t1, t2) {
      var _ = this;
      _.directionality = t0;
      _.rect = t1;
      _.node = t2;
      _._directionalAncestors = null;
    },
    _ReadingOrderSortData_commonDirectionalityOf_closure: function _ReadingOrderSortData_commonDirectionalityOf_closure() {
    },
    _ReadingOrderSortData_sortWithDirectionality_closure: function _ReadingOrderSortData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors: function _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors() {
    },
    _ReadingOrderDirectionalGroupData: function _ReadingOrderDirectionalGroupData(t0) {
      this.members = t0;
      this._focus_traversal$_rect = null;
    },
    _ReadingOrderDirectionalGroupData_rect_closure: function _ReadingOrderDirectionalGroupData_rect_closure() {
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure: function _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    ReadingOrderTraversalPolicy: function ReadingOrderTraversalPolicy(t0) {
      this.DirectionalFocusTraversalPolicyMixin__policyData = t0;
    },
    ReadingOrderTraversalPolicy__pickNext_closure: function ReadingOrderTraversalPolicy__pickNext_closure() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand: function ReadingOrderTraversalPolicy__pickNext_inBand() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand_closure: function ReadingOrderTraversalPolicy__pickNext_inBand_closure(t0) {
      this.band = t0;
    },
    FocusTraversalGroup: function FocusTraversalGroup(t0, t1, t2) {
      this.policy = t0;
      this.child = t1;
      this.key = t2;
    },
    _FocusTraversalGroupState: function _FocusTraversalGroupState(t0) {
      var _ = this;
      _._widget = _.focusNode = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusTraversalGroupMarker: function _FocusTraversalGroupMarker(t0, t1, t2, t3) {
      var _ = this;
      _.policy = t0;
      _.focusNode = t1;
      _.child = t2;
      _.key = t3;
    },
    RequestFocusAction: function RequestFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    NextFocusIntent: function NextFocusIntent() {
    },
    NextFocusAction: function NextFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    PreviousFocusIntent: function PreviousFocusIntent() {
    },
    PreviousFocusAction: function PreviousFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    _FocusTraversalPolicy_Object_Diagnosticable: function _FocusTraversalPolicy_Object_Diagnosticable() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin() {
    },
    __ReadingOrderDirectionalGroupData_Object_Diagnosticable: function __ReadingOrderDirectionalGroupData_Object_Diagnosticable() {
    },
    __ReadingOrderSortData_Object_Diagnosticable: function __ReadingOrderSortData_Object_Diagnosticable() {
    },
    Hero__allHeroesFor(context, isUserGestureTransition, $navigator) {
      var result = C.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroState);
      context.visitChildren$1(new A.Hero__allHeroesFor_visitor($navigator, new A.Hero__allHeroesFor_inviteHero(result, isUserGestureTransition)));
      return result;
    },
    _HeroFlightManifest__boundingBoxFor(context, ancestorContext) {
      var t2,
        t1 = context.get$renderObject();
      t1.toString;
      type$.RenderBox._as(t1);
      t2 = t1.getTransformTo$1(0, ancestorContext == null ? null : ancestorContext.get$renderObject());
      t1 = t1._size;
      return C.MatrixUtils_transformRect(t2, new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
    },
    HeroFlightDirection: function HeroFlightDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Hero: function Hero(t0, t1, t2) {
      this.tag = t0;
      this.child = t1;
      this.key = t2;
    },
    Hero__allHeroesFor_inviteHero: function Hero__allHeroesFor_inviteHero(t0, t1) {
      this.result = t0;
      this.isUserGestureTransition = t1;
    },
    Hero__allHeroesFor_visitor: function Hero__allHeroesFor_visitor(t0, t1) {
      this.navigator = t0;
      this.inviteHero = t1;
    },
    _HeroState: function _HeroState(t0, t1) {
      var _ = this;
      _._heroes$_key = t0;
      _._placeholderSize = null;
      _._shouldIncludeChild = true;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _HeroState_startFlight_closure: function _HeroState_startFlight_closure(t0, t1) {
      this.$this = t0;
      this.box = t1;
    },
    _HeroState_endFlight_closure: function _HeroState_endFlight_closure() {
    },
    _HeroFlightManifest: function _HeroFlightManifest(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.type = t0;
      _.overlay = t1;
      _.navigatorSize = t2;
      _.fromRoute = t3;
      _.toRoute = t4;
      _.fromHero = t5;
      _.toHero = t6;
      _.createRectTween = t7;
      _.shuttleBuilder = t8;
      _.isUserGestureTransition = t9;
      _.isDiverted = t10;
      _.___HeroFlightManifest_isValid_FI = _.___HeroFlightManifest_toHeroLocation_FI = _.___HeroFlightManifest_fromHeroLocation_FI = $;
    },
    _HeroFlight: function _HeroFlight(t0, t1) {
      var _ = this;
      _.onFlightEnded = t0;
      _.___HeroFlight_heroRectTween_A = $;
      _.shuttle = null;
      _._heroOpacity = t1;
      _.___HeroFlight_manifest_A = _.___HeroFlight__proxyAnimation_A = $;
      _.overlayEntry = null;
      _._scheduledPerformAnimationUpdate = _._aborted = false;
    },
    _HeroFlight__buildOverlay_closure: function _HeroFlight__buildOverlay_closure(t0) {
      this.$this = t0;
    },
    _HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate: function _HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    HeroController: function HeroController(t0, t1) {
      this.createRectTween = t0;
      this._flights = t1;
      this._navigator = null;
    },
    HeroController_didStopUserGesture_isInvalidFlight: function HeroController_didStopUserGesture_isInvalidFlight() {
    },
    HeroController__maybeStartHeroTransition_closure: function HeroController__maybeStartHeroTransition_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.from = t1;
      _.to = t2;
      _.flightType = t3;
      _.isUserGestureTransition = t4;
    },
    HeroController__defaultHeroFlightShuttleBuilder_closure: function HeroController__defaultHeroFlightShuttleBuilder_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.toMediaQueryData = t0;
      _.flightDirection = t1;
      _.fromHeroPadding = t2;
      _.toHeroPadding = t3;
      _.animation = t4;
      _.toHero = t5;
    },
    EdgeInsetsTween: function EdgeInsetsTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    InheritedModel: function InheritedModel() {
    },
    InheritedModelElement: function InheritedModelElement(t0, t1, t2, t3) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._notificationTree = _._debugReassembleConfig = _._framework$_parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t3;
    },
    _loadAll(locale, allDelegates) {
      var types, delegates, _i, delegate, t3, t4, inputValue, futureValue, _box_1 = {},
        t1 = type$.Type,
        t2 = type$.dynamic,
        output = C.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      _box_1.pendingList = null;
      types = C.LinkedHashSet_LinkedHashSet$_empty(t1);
      delegates = C._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      for (t1 = allDelegates.length, _i = 0; _i < allDelegates.length; allDelegates.length === t1 || (0, C.throwConcurrentModificationError)(allDelegates), ++_i) {
        delegate = allDelegates[_i];
        t3 = C.instanceType(delegate)._eval$1("LocalizationsDelegate.T");
        if (!types.contains$1(0, C.createRuntimeType(t3)) && delegate.isSupported$1(locale)) {
          types.add$1(0, C.createRuntimeType(t3));
          delegates.push(delegate);
        }
      }
      for (t1 = delegates.length, t3 = type$.JSArray__Pending, _i = 0; _i < delegates.length; delegates.length === t1 || (0, C.throwConcurrentModificationError)(delegates), ++_i) {
        t4 = {};
        delegate = delegates[_i];
        inputValue = delegate.load$1(0, locale);
        t4.completedValue = null;
        futureValue = inputValue.then$1$1(new A._loadAll_closure(t4), t2);
        if (t4.completedValue != null)
          output.$indexSet(0, C.createRuntimeType(C._instanceType(delegate)._eval$1("LocalizationsDelegate.T")), t4.completedValue);
        else {
          t4 = _box_1.pendingList;
          if (t4 == null)
            t4 = _box_1.pendingList = C._setArrayType([], t3);
          t4.push(new A._Pending(delegate, futureValue));
        }
      }
      t1 = _box_1.pendingList;
      if (t1 == null)
        return new C.SynchronousFuture(output, type$.SynchronousFuture_Map_Type_dynamic);
      return C.Future_wait(new C.MappedListIterable(t1, new A._loadAll_closure0(), C._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Future<@>>")), t2).then$1$1(new A._loadAll_closure1(_box_1, output), type$.Map_Type_dynamic);
    },
    _Pending: function _Pending(t0, t1) {
      this.delegate = t0;
      this.futureValue = t1;
    },
    _loadAll_closure: function _loadAll_closure(t0) {
      this._box_0 = t0;
    },
    _loadAll_closure0: function _loadAll_closure0() {
    },
    _loadAll_closure1: function _loadAll_closure1(t0, t1) {
      this._box_1 = t0;
      this.output = t1;
    },
    LocalizationsDelegate: function LocalizationsDelegate() {
    },
    _WidgetsLocalizationsDelegate: function _WidgetsLocalizationsDelegate() {
    },
    DefaultWidgetsLocalizations: function DefaultWidgetsLocalizations() {
    },
    _LocalizationsScope: function _LocalizationsScope(t0, t1, t2, t3) {
      var _ = this;
      _.localizationsState = t0;
      _.typeToResources = t1;
      _.child = t2;
      _.key = t3;
    },
    Localizations: function Localizations(t0, t1, t2, t3) {
      var _ = this;
      _.locale = t0;
      _.delegates = t1;
      _.child = t2;
      _.key = t3;
    },
    _LocalizationsState: function _LocalizationsState(t0, t1, t2) {
      var _ = this;
      _._localizedResourcesScopeKey = t0;
      _._typeToResources = t1;
      _._widget = _._localizations$_locale = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _LocalizationsState_load_closure: function _LocalizationsState_load_closure(t0) {
      this._box_0 = t0;
    },
    _LocalizationsState_load_closure0: function _LocalizationsState_load_closure0(t0, t1) {
      this.$this = t0;
      this.locale = t1;
    },
    _LocalizationsState_load__closure: function _LocalizationsState_load__closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.locale = t2;
    },
    MediaQueryData: function MediaQueryData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.size = t0;
      _.devicePixelRatio = t1;
      _.textScaleFactor = t2;
      _.platformBrightness = t3;
      _.viewInsets = t4;
      _.padding = t5;
      _.viewPadding = t6;
      _.systemGestureInsets = t7;
      _.alwaysUse24HourFormat = t8;
      _.accessibleNavigation = t9;
      _.invertColors = t10;
      _.highContrast = t11;
      _.disableAnimations = t12;
      _.boldText = t13;
      _.navigationMode = t14;
      _.gestureSettings = t15;
      _.displayFeatures = t16;
    },
    MediaQueryData_removeDisplayFeatures_closure: function MediaQueryData_removeDisplayFeatures_closure(t0) {
      this.subScreen = t0;
    },
    _MediaQueryFromWindow: function _MediaQueryFromWindow(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _MediaQueryFromWindowState: function _MediaQueryFromWindowState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _MediaQueryFromWindowState_didChangeMetrics_closure: function _MediaQueryFromWindowState_didChangeMetrics_closure() {
    },
    _MediaQueryFromWindowState_didChangeTextScaleFactor_closure: function _MediaQueryFromWindowState_didChangeTextScaleFactor_closure() {
    },
    _MediaQueryFromWindowState_didChangePlatformBrightness_closure: function _MediaQueryFromWindowState_didChangePlatformBrightness_closure() {
    },
    __MediaQueryFromWindowState_State_WidgetsBindingObserver: function __MediaQueryFromWindowState_State_WidgetsBindingObserver() {
    },
    NavigationToolbar: function NavigationToolbar(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.leading = t0;
      _.middle = t1;
      _.trailing = t2;
      _.centerMiddle = t3;
      _.middleSpacing = t4;
      _.key = t5;
    },
    _ToolbarSlot: function _ToolbarSlot(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _ToolbarLayout: function _ToolbarLayout(t0, t1, t2) {
      var _ = this;
      _.centerMiddle = t0;
      _.middleSpacing = t1;
      _.textDirection = t2;
      _._debugChildrenNeedingLayout = _._idToChild = null;
    },
    Navigator_defaultGenerateInitialRoutes($navigator, initialRouteName) {
      var t1, routeParts, t2, _i, t3, routeName, _null = null,
        result = C._setArrayType([], type$.JSArray_nullable_Route_dynamic);
      if (E.JSString_methods.startsWith$1(initialRouteName, "/") && initialRouteName.length > 1) {
        initialRouteName = E.JSString_methods.substring$1(initialRouteName, 1);
        t1 = type$.dynamic;
        result.push($navigator._routeNamed$1$3$allowNull$arguments("/", true, _null, t1));
        routeParts = initialRouteName.split("/");
        if (initialRouteName.length !== 0)
          for (t2 = routeParts.length, _i = 0, t3 = ""; _i < t2; ++_i, t3 = routeName) {
            routeName = t3 + ("/" + C.S(routeParts[_i]));
            result.push($navigator._routeNamed$1$3$allowNull$arguments(routeName, true, _null, t1));
          }
        if (E.JSArray_methods.get$last(result) == null)
          E.JSArray_methods.clear$0(result);
      } else if (initialRouteName !== "/")
        result.push($navigator._routeNamed$1$3$allowNull$arguments(initialRouteName, true, _null, type$.dynamic));
      if (!!result.fixed$length)
        C.throwExpression(C.UnsupportedError$("removeWhere"));
      E.JSArray_methods._removeWhere$2(result, new A.Navigator_defaultGenerateInitialRoutes_closure(), true);
      if (result.length === 0)
        result.push($navigator._routeNamed$1$2$arguments("/", _null, type$.dynamic));
      return new C.CastList(result, type$.CastList_of_nullable_Route_dynamic_and_Route_dynamic);
    },
    _RouteEntry$(route, initialState, restorationInformation) {
      var t1 = $.$get$_RouteEntry_notAnnounced();
      return new A._RouteEntry(route, restorationInformation, initialState, t1, t1, t1);
    },
    _RouteEntry_suitableForTransitionAnimationPredicate(entry) {
      var t1 = entry.currentState.index;
      return t1 <= 10 && t1 >= 3;
    },
    _RouteEntry_willBePresentPredicate(entry) {
      return entry.get$willBePresent();
    },
    _RestorationInformation__RestorationInformation$fromSerializableData(data) {
      var t1, t2, t3;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$asx(data);
      t2 = t1.$index(data, 0);
      t2.toString;
      switch (B.List_MYz[C._asInt(t2)].index) {
        case 0:
          t1 = t1.sublist$1(data, 1);
          t2 = t1[0];
          t2.toString;
          C._asInt(t2);
          t3 = t1[1];
          t3.toString;
          C._asString(t3);
          return new A._NamedRestorationInformation(t2, t3, t1.length > 2 ? t1[2] : null, B._RouteRestorationType_0);
        case 1:
          t1 = t1.sublist$1(data, 1)[1];
          t1.toString;
          type$.Route_dynamic_Function_2_BuildContext_and_nullable_Object._as(A.PluginUtilities_getCallbackFromHandle(new A.CallbackHandle(C._asInt(t1))));
          return null;
      }
    },
    NavigatorObserver: function NavigatorObserver() {
    },
    HeroControllerScope: function HeroControllerScope(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    RouteTransitionRecord: function RouteTransitionRecord() {
    },
    TransitionDelegate: function TransitionDelegate() {
    },
    DefaultTransitionDelegate: function DefaultTransitionDelegate() {
    },
    Navigator: function Navigator(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.initialRoute = t0;
      _.onGenerateRoute = t1;
      _.onUnknownRoute = t2;
      _.observers = t3;
      _.restorationScopeId = t4;
      _.onGenerateInitialRoutes = t5;
      _.reportsRouteUpdateToEngine = t6;
      _.key = t7;
    },
    Navigator_defaultGenerateInitialRoutes_closure: function Navigator_defaultGenerateInitialRoutes_closure() {
    },
    _RouteLifecycle: function _RouteLifecycle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _NotAnnounced: function _NotAnnounced(t0, t1, t2) {
      var _ = this;
      _._navigator = null;
      _._settings = t0;
      _._restorationScopeId = t1;
      _._popCompleter = t2;
    },
    _RouteEntry: function _RouteEntry(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.route = t0;
      _.restorationInformation = t1;
      _.currentState = t2;
      _.lastAnnouncedPreviousRoute = t3;
      _.lastAnnouncedPoppedNextRoute = t4;
      _.lastAnnouncedNextRoute = t5;
      _.pendingResult = null;
      _._reportRemovalToObserver = true;
      _._isWaitingForExitingDecision = false;
    },
    _RouteEntry_handlePush_closure: function _RouteEntry_handlePush_closure(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    _RouteEntry_dispose_closure: function _RouteEntry_dispose_closure() {
    },
    _RouteEntry_dispose_closure0: function _RouteEntry_dispose_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.entry = t2;
      _.listener = t3;
    },
    _NavigatorObservation: function _NavigatorObservation() {
    },
    _NavigatorPushObservation: function _NavigatorPushObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorPopObservation: function _NavigatorPopObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorRemoveObservation: function _NavigatorRemoveObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorReplaceObservation: function _NavigatorReplaceObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    NavigatorState: function NavigatorState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.__NavigatorState__overlayKey_A = $;
      _._history = t0;
      _._serializableHistory = t1;
      _._observedRouteAdditions = t2;
      _._observedRouteDeletions = t3;
      _.focusScopeNode = t4;
      _._debugLocked = false;
      _._heroControllerFromScope = null;
      _.__NavigatorState__effectiveObservers_A = $;
      _._rawNextPagelessRestorationScopeId = t5;
      _._lastAnnouncedRouteName = null;
      _._flushingHistory = _._debugUpdatingPage = false;
      _._userGesturesInProgressCount = 0;
      _.userGestureInProgressNotifier = t6;
      _._activePointers = t7;
      _.RestorationMixin__bucket = t8;
      _.RestorationMixin__properties = t9;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t10;
      _.RestorationMixin__firstRestorePending = t11;
      _.RestorationMixin__currentParent = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _.TickerProviderStateMixin__tickerModeNotifier = t14;
      _._widget = null;
      _._debugLifecycleState = t15;
      _._framework$_element = null;
    },
    NavigatorState_restoreState_closure: function NavigatorState_restoreState_closure(t0) {
      this.$this = t0;
    },
    NavigatorState__flushHistoryUpdates_closure: function NavigatorState__flushHistoryUpdates_closure() {
    },
    NavigatorState__flushHistoryUpdates_closure0: function NavigatorState__flushHistoryUpdates_closure0() {
    },
    NavigatorState__afterNavigation_closure: function NavigatorState__afterNavigation_closure() {
    },
    NavigatorState_maybePop_closure: function NavigatorState_maybePop_closure() {
    },
    NavigatorState_maybePop_closure0: function NavigatorState_maybePop_closure0() {
    },
    NavigatorState_maybePop_closure1: function NavigatorState_maybePop_closure1() {
    },
    NavigatorState_maybePop_closure2: function NavigatorState_maybePop_closure2() {
    },
    NavigatorState_removeRoute_closure: function NavigatorState_removeRoute_closure() {
    },
    NavigatorState_removeRoute_closure0: function NavigatorState_removeRoute_closure0() {
    },
    NavigatorState__cancelActivePointers_closure: function NavigatorState__cancelActivePointers_closure(t0) {
      this.absorber = t0;
    },
    _RouteRestorationType: function _RouteRestorationType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _RestorationInformation: function _RestorationInformation() {
    },
    _NamedRestorationInformation: function _NamedRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.name = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _AnonymousRestorationInformation: function _AnonymousRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.routeBuilder = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _HistoryProperty: function _HistoryProperty(t0) {
      var _ = this;
      _._pageToPagelessRoutes = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
    },
    _HistoryProperty_fromPrimitives_closure: function _HistoryProperty_fromPrimitives_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin: function _NavigatorState_State_TickerProviderStateMixin() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    _OverlayEntryWidget: function _OverlayEntryWidget(t0, t1, t2) {
      this.entry = t0;
      this.tickerEnabled = t1;
      this.key = t2;
    },
    _OverlayEntryWidgetState: function _OverlayEntryWidgetState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _OverlayEntryWidgetState__markNeedsBuild_closure: function _OverlayEntryWidgetState__markNeedsBuild_closure() {
    },
    Overlay: function Overlay(t0, t1) {
      this.initialEntries = t0;
      this.key = t1;
    },
    OverlayState: function OverlayState(t0, t1, t2, t3) {
      var _ = this;
      _._overlay$_entries = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._widget = null;
      _._debugLifecycleState = t3;
      _._framework$_element = null;
    },
    OverlayState_insert_closure: function OverlayState_insert_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entry = t3;
    },
    OverlayState_insertAll_closure: function OverlayState_insertAll_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entries = t3;
    },
    OverlayState_rearrange_closure: function OverlayState_rearrange_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.newEntriesList = t1;
      _.old = t2;
      _.below = t3;
      _.above = t4;
    },
    OverlayState__markDirty_closure: function OverlayState__markDirty_closure() {
    },
    OverlayState__didChangeEntryOpacity_closure: function OverlayState__didChangeEntryOpacity_closure() {
    },
    _Theatre: function _Theatre(t0, t1, t2, t3) {
      var _ = this;
      _.skipCount = t0;
      _.clipBehavior = t1;
      _.children = t2;
      _.key = t3;
    },
    _TheatreElement: function _TheatreElement(t0, t1, t2) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children_A = $;
      _._forgottenChildren = t0;
      _._slot = _._notificationTree = _._debugReassembleConfig = _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    _RenderTheatre: function _RenderTheatre(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._overlay$_hasVisualOverflow = false;
      _._overlay$_resolvedAlignment = null;
      _._overlay$_textDirection = t0;
      _._overlay$_skipCount = t1;
      _._overlay$_clipBehavior = t2;
      _._overlay$_clipRectLayer = t3;
      _.ContainerRenderObjectMixin__childCount = t4;
      _.ContainerRenderObjectMixin__firstChild = t5;
      _.ContainerRenderObjectMixin__lastChild = t6;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderTheatre_computeMinIntrinsicWidth_closure: function _RenderTheatre_computeMinIntrinsicWidth_closure(t0) {
      this.height = t0;
    },
    _RenderTheatre_computeMaxIntrinsicWidth_closure: function _RenderTheatre_computeMaxIntrinsicWidth_closure(t0) {
      this.height = t0;
    },
    _RenderTheatre_computeMinIntrinsicHeight_closure: function _RenderTheatre_computeMinIntrinsicHeight_closure(t0) {
      this.width = t0;
    },
    _RenderTheatre_computeMaxIntrinsicHeight_closure: function _RenderTheatre_computeMaxIntrinsicHeight_closure(t0) {
      this.width = t0;
    },
    _RenderTheatre_hitTestChildren_closure: function _RenderTheatre_hitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    _OverlayState_State_TickerProviderStateMixin: function _OverlayState_State_TickerProviderStateMixin() {
    },
    __RenderTheatre_RenderBox_ContainerRenderObjectMixin: function __RenderTheatre_RenderBox_ContainerRenderObjectMixin() {
    },
    PageRoute: function PageRoute() {
    },
    PerformanceOverlay: function PerformanceOverlay(t0, t1, t2, t3) {
      var _ = this;
      _.optionsMask = t0;
      _.checkerboardRasterCacheImages = t1;
      _.checkerboardOffscreenLayers = t2;
      _.key = t3;
    },
    RootRestorationScope: function RootRestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RootRestorationScopeState: function _RootRestorationScopeState(t0) {
      var _ = this;
      _._okToRenderBlankContainer = null;
      _._rootBucketValid = false;
      _._ancestorBucket = _._restoration0$_rootBucket = null;
      _._isLoadingRootBucket = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary_closure: function _RootRestorationScopeState__loadRootBucketIfNecessary_closure(t0) {
      this.$this = t0;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary__closure: function _RootRestorationScopeState__loadRootBucketIfNecessary__closure(t0, t1) {
      this.$this = t0;
      this.bucket = t1;
    },
    RestorableNum: function RestorableNum(t0, t1, t2) {
      var _ = this;
      _._defaultValue = t0;
      _._restoration_properties$_value = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
      _.$ti = t2;
    },
    __RouterState_State_RestorationMixin_dispose_closure: function __RouterState_State_RestorationMixin_dispose_closure() {
    },
    Router: function Router(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.routeInformationProvider = t0;
      _.routeInformationParser = t1;
      _.routerDelegate = t2;
      _.backButtonDispatcher = t3;
      _.restorationScopeId = t4;
      _.key = t5;
      _.$ti = t6;
    },
    RouteInformationReportingType: function RouteInformationReportingType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _RouterState: function _RouterState(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._currentIntentionToReport = _._currentRouterTransaction = null;
      _._routeInformation = t0;
      _.___RouterState__routeParsePending_A = $;
      _._routeInformationReportingTaskScheduled = false;
      _.RestorationMixin__bucket = t1;
      _.RestorationMixin__properties = t2;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t3;
      _.RestorationMixin__firstRestorePending = t4;
      _.RestorationMixin__currentParent = t5;
      _._widget = null;
      _._debugLifecycleState = t6;
      _._framework$_element = null;
      _.$ti = t7;
    },
    _RouterState_restoreState_closure: function _RouterState_restoreState_closure(t0) {
      this.$this = t0;
    },
    _RouterState_restoreState_closure0: function _RouterState_restoreState_closure0(t0) {
      this.$this = t0;
    },
    _RouterState_didChangeDependencies_closure: function _RouterState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    _RouterState__processParsedRouteInformation_closure: function _RouterState__processParsedRouteInformation_closure(t0, t1, t2) {
      this.$this = t0;
      this.transaction = t1;
      this.delegateRouteSetter = t2;
    },
    _RouterState__handleRouteInformationProviderNotification_closure: function _RouterState__handleRouteInformationProviderNotification_closure(t0) {
      this.$this = t0;
    },
    _RouterState__handleRoutePopped_closure: function _RouterState__handleRoutePopped_closure(t0, t1) {
      this.$this = t0;
      this.transaction = t1;
    },
    _RouterState__rebuild_closure: function _RouterState__rebuild_closure() {
    },
    _RouterState__handleRouterDelegateNotification_closure: function _RouterState__handleRouterDelegateNotification_closure() {
    },
    _RouterScope: function _RouterScope(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.routeInformationProvider = t0;
      _.backButtonDispatcher = t1;
      _.routeInformationParser = t2;
      _.routerDelegate = t3;
      _.routerState = t4;
      _.child = t5;
      _.key = t6;
    },
    _RestorableRouteInformation: function _RestorableRouteInformation(t0) {
      var _ = this;
      _._restoration_properties$_value = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
    },
    __RouterState_State_RestorationMixin: function __RouterState_State_RestorationMixin() {
    },
    LocalHistoryEntry: function LocalHistoryEntry(t0, t1) {
      this.onRemove = t0;
      this._routes$_owner = null;
      this.impliesAppBarDismissal = t1;
    },
    _ScrollNotificationObserverScope: function _ScrollNotificationObserverScope(t0, t1, t2) {
      this._scrollNotificationObserverState = t0;
      this.child = t1;
      this.key = t2;
    },
    _ListenerEntry: function _ListenerEntry(t0) {
      var _ = this;
      _.listener = t0;
      _._collection$_previous = _._collection$_next = _._collection$_list = null;
    },
    ScrollNotificationObserver: function ScrollNotificationObserver(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScrollNotificationObserverState: function ScrollNotificationObserverState(t0, t1) {
      var _ = this;
      _._scroll_notification_observer$_listeners = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    ScrollNotificationObserverState__notifyListeners_closure: function ScrollNotificationObserverState__notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ScrollNotificationObserverState_build_closure: function ScrollNotificationObserverState_build_closure(t0) {
      this.$this = t0;
    },
    ScrollNotificationObserverState_build_closure0: function ScrollNotificationObserverState_build_closure0(t0) {
      this.$this = t0;
    },
    _ConvertedScrollMetricsNotification: function _ConvertedScrollMetricsNotification(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dragDetails = t0;
      _.scrollDelta = t1;
      _.metrics = t2;
      _.context = t3;
      _.ViewportNotificationMixin__depth = t4;
    },
    Scrollable_ensureVisible(context, alignment, alignmentPolicy) {
      var t1, targetRenderObject, t2, t3, widget,
        futures = C._setArrayType([], type$.JSArray_Future_void),
        scrollable = D.Scrollable_of(context);
      for (t1 = type$._ScrollableScope, targetRenderObject = null; scrollable != null;) {
        t2 = scrollable._scrollable$_position;
        t2.toString;
        t3 = context.get$renderObject();
        t3.toString;
        futures.push(t2.ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(t3, alignment, alignmentPolicy, E.Cubic_JUR, E.Duration_0, targetRenderObject));
        if (targetRenderObject == null)
          targetRenderObject = context.get$renderObject();
        context = scrollable._framework$_element;
        widget = context.dependOnInheritedWidgetOfExactType$1$0(t1);
        scrollable = widget == null ? null : widget.scrollable;
      }
      t1 = futures.length;
      if (t1 !== 0)
        t2 = 0 === E.Duration_0._duration;
      else
        t2 = true;
      if (t2)
        return C.Future_Future$value(null, type$.void);
      if (t1 === 1)
        return E.JSArray_methods.get$single(futures);
      t1 = type$.void;
      return C.Future_wait(futures, t1).then$1$1(new A.Scrollable_ensureVisible_closure(), t1);
    },
    Scrollable_ensureVisible_closure: function Scrollable_ensureVisible_closure() {
    },
    ScrollIntent: function ScrollIntent(t0, t1) {
      this.direction = t0;
      this.type = t1;
    },
    ScrollAction: function ScrollAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    SharedAppData: function SharedAppData(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _SharedAppDataState: function _SharedAppDataState(t0) {
      var _ = this;
      _.___SharedAppDataState_data_AI = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _SharedAppModel: function _SharedAppModel(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    SingleActivator$(trigger, alt, control, meta, shift) {
      return new F.SingleActivator(trigger, control, shift, alt, meta);
    },
    ShortcutRegistry: function ShortcutRegistry(t0, t1) {
      var _ = this;
      _._tokenShortcuts = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
    },
    ShortcutRegistrar: function ShortcutRegistrar(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _ShortcutRegistrarState: function _ShortcutRegistrarState(t0, t1, t2) {
      var _ = this;
      _.registry = t0;
      _.manager = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _ShortcutRegistrarMarker: function _ShortcutRegistrarMarker(t0, t1, t2) {
      this.registry = t0;
      this.child = t1;
      this.key = t2;
    },
    _ShortcutRegistry_Object_ChangeNotifier: function _ShortcutRegistry_Object_ChangeNotifier() {
    },
    DoNothingAndStopPropagationTextIntent: function DoNothingAndStopPropagationTextIntent() {
    },
    DirectionalTextEditingIntent: function DirectionalTextEditingIntent() {
    },
    DeleteCharacterIntent: function DeleteCharacterIntent(t0) {
      this.forward = t0;
    },
    DeleteToNextWordBoundaryIntent: function DeleteToNextWordBoundaryIntent(t0) {
      this.forward = t0;
    },
    DeleteToLineBreakIntent: function DeleteToLineBreakIntent(t0) {
      this.forward = t0;
    },
    DirectionalCaretMovementIntent: function DirectionalCaretMovementIntent() {
    },
    ExtendSelectionByCharacterIntent: function ExtendSelectionByCharacterIntent(t0, t1, t2, t3) {
      var _ = this;
      _.collapseSelection = t0;
      _.collapseAtReversal = t1;
      _.continuesAtWrap = t2;
      _.forward = t3;
    },
    ExtendSelectionToNextWordBoundaryIntent: function ExtendSelectionToNextWordBoundaryIntent(t0, t1, t2, t3) {
      var _ = this;
      _.collapseSelection = t0;
      _.collapseAtReversal = t1;
      _.continuesAtWrap = t2;
      _.forward = t3;
    },
    ExtendSelectionToNextWordBoundaryOrCaretLocationIntent: function ExtendSelectionToNextWordBoundaryOrCaretLocationIntent(t0) {
      this.forward = t0;
    },
    ExpandSelectionToDocumentBoundaryIntent: function ExpandSelectionToDocumentBoundaryIntent(t0) {
      this.forward = t0;
    },
    ExpandSelectionToLineBreakIntent: function ExpandSelectionToLineBreakIntent(t0) {
      this.forward = t0;
    },
    ExtendSelectionToLineBreakIntent: function ExtendSelectionToLineBreakIntent(t0, t1, t2, t3) {
      var _ = this;
      _.collapseSelection = t0;
      _.collapseAtReversal = t1;
      _.continuesAtWrap = t2;
      _.forward = t3;
    },
    ExtendSelectionVerticallyToAdjacentLineIntent: function ExtendSelectionVerticallyToAdjacentLineIntent(t0, t1, t2, t3) {
      var _ = this;
      _.collapseSelection = t0;
      _.collapseAtReversal = t1;
      _.continuesAtWrap = t2;
      _.forward = t3;
    },
    ExtendSelectionToDocumentBoundaryIntent: function ExtendSelectionToDocumentBoundaryIntent(t0, t1, t2, t3) {
      var _ = this;
      _.collapseSelection = t0;
      _.collapseAtReversal = t1;
      _.continuesAtWrap = t2;
      _.forward = t3;
    },
    ScrollToDocumentBoundaryIntent: function ScrollToDocumentBoundaryIntent(t0) {
      this.forward = t0;
    },
    SelectAllTextIntent: function SelectAllTextIntent() {
    },
    CopySelectionTextIntent: function CopySelectionTextIntent(t0) {
      this.collapseSelection = t0;
    },
    PasteTextIntent: function PasteTextIntent() {
    },
    RedoTextIntent: function RedoTextIntent() {
    },
    UndoTextIntent: function UndoTextIntent() {
    },
    TransposeCharactersIntent: function TransposeCharactersIntent() {
    },
    TickerMode: function TickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    _TickerModeState: function _TickerModeState(t0, t1) {
      var _ = this;
      _._ancestorTicketMode = true;
      _._effectiveMode = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _EffectiveTickerMode: function _EffectiveTickerMode(t0, t1, t2, t3) {
      var _ = this;
      _.enabled = t0;
      _.notifier = t1;
      _.child = t2;
      _.key = t3;
    },
    Title: function Title(t0, t1, t2, t3) {
      var _ = this;
      _.title = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    RotationTransition$(child, turns) {
      return new A.RotationTransition(child, turns, null);
    },
    RotationTransition: function RotationTransition(t0, t1, t2) {
      this.child = t0;
      this.listenable = t1;
      this.key = t2;
    },
    LaunchMode: function LaunchMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    WebViewConfiguration: function WebViewConfiguration() {
    },
    _XidianDirState$() {
      var _null = null,
        t1 = type$.void;
      return new A._XidianDirState(A.FutureBuilder$(new A._XidianDirState__com_win_closure(), C.loadDeferredLibrary("com"), t1), A.FutureBuilder$(new A._XidianDirState__din_win_closure(), C.loadDeferredLibrary("din"), t1), A.FutureBuilder$(new A._XidianDirState__tel_win_closure(), C.loadDeferredLibrary("tel"), t1), C._setArrayType([F.IconButton$(_null, B.Icon_IconData_58136_false_null, _null, new A._XidianDirState_buttons_closure(), _null), F.IconButton$(_null, B.Icon_IconData_57718_false_null, _null, new A._XidianDirState_buttons_closure0(), _null), F.IconButton$(_null, H.Icon_IconData_58172_false_null, _null, new A._XidianDirState_buttons_closure1(), _null)], type$.JSArray_IconButton), G._StateLifecycle_0);
    },
    XidianDir: function XidianDir(t0) {
      this.key = t0;
    },
    _XidianDirState: function _XidianDirState(t0, t1, t2, t3, t4) {
      var _ = this;
      _._com_win = t0;
      _._din_win = t1;
      _._tel_win = t2;
      _.___XidianDirState__toShow_A = $;
      _._home$_current = "\u7efc\u5408\u697c";
      _.buttons = t3;
      _._widget = null;
      _._debugLifecycleState = t4;
      _._framework$_element = null;
    },
    _XidianDirState__com_win_closure: function _XidianDirState__com_win_closure() {
    },
    _XidianDirState__din_win_closure: function _XidianDirState__din_win_closure() {
    },
    _XidianDirState__tel_win_closure: function _XidianDirState__tel_win_closure() {
    },
    _XidianDirState_changePage_closure: function _XidianDirState_changePage_closure(t0, t1) {
      this.$this = t0;
      this.current = t1;
    },
    _XidianDirState_buttons_closure: function _XidianDirState_buttons_closure() {
    },
    _XidianDirState_buttons_closure0: function _XidianDirState_buttons_closure0() {
    },
    _XidianDirState_buttons_closure1: function _XidianDirState_buttons_closure1() {
    },
    ListDrawer: function ListDrawer(t0, t1) {
      this.mainPageCallback = t0;
      this.key = t1;
    },
    ListDrawer_build_closure: function ListDrawer_build_closure(t0) {
      this.$this = t0;
    },
    ListDrawer_build_closure0: function ListDrawer_build_closure0(t0) {
      this.$this = t0;
    },
    ListDrawer_build_closure1: function ListDrawer_build_closure1(t0) {
      this.$this = t0;
    },
    DrawerThemeData_lerp(a, b, t) {
      var t1 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = D.Color_lerp(a.scrimColor, b.scrimColor, t),
        t3 = D.lerpDouble(a.elevation, b.elevation, t),
        t4 = D.ShapeBorder_lerp(a.shape, b.shape, t);
      return new D.DrawerThemeData(t1, t2, t3, t4, D.lerpDouble(a.width, b.width, t));
    },
    DrawerTheme_of(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DrawerTheme);
      t1 = D.Theme_of(context);
      return t1.drawerTheme;
    },
    mergeSort(list, compare, $T) {
      var middle, secondLength, scratchSpace, firstTarget,
        end = list.length,
        $length = end - 0;
      if ($length < 2)
        return;
      if ($length < 32) {
        A._insertionSort(list, compare, end, 0, $T);
        return;
      }
      middle = E.JSInt_methods._shrOtherPositive$1($length, 1);
      secondLength = end - middle;
      scratchSpace = C.List_List$filled(secondLength, list[0], false, $T);
      A._mergeSort(list, compare, middle, end, scratchSpace, 0);
      firstTarget = end - (middle - 0);
      A._mergeSort(list, compare, 0, middle, list, firstTarget);
      A._merge(compare, list, firstTarget, end, scratchSpace, 0, secondLength, list, 0);
    },
    _insertionSort(list, compare, end, start, $T) {
      var pos, element, max, min, mid;
      for (pos = start + 1; pos < end;) {
        element = list[pos];
        for (max = pos, min = start; min < max;) {
          mid = min + E.JSInt_methods._shrOtherPositive$1(max - min, 1);
          if (compare.call$2(element, list[mid]) < 0)
            max = mid;
          else
            min = mid + 1;
        }
        ++pos;
        E.JSArray_methods.setRange$4(list, min + 1, pos, list, min);
        list[min] = element;
      }
    },
    _movingInsertionSort(list, compare, start, end, target, targetOffset) {
      var i, element, max, max0, min, mid,
        $length = end - start;
      if ($length === 0)
        return;
      target[targetOffset] = list[start];
      for (i = 1; i < $length; ++i) {
        element = list[start + i];
        max = targetOffset + i;
        for (max0 = max, min = targetOffset; min < max0;) {
          mid = min + E.JSInt_methods._shrOtherPositive$1(max0 - min, 1);
          if (compare.call$2(element, target[mid]) < 0)
            max0 = mid;
          else
            min = mid + 1;
        }
        E.JSArray_methods.setRange$4(target, min + 1, max + 1, target, min);
        target[min] = element;
      }
    },
    _mergeSort(list, compare, start, end, target, targetOffset) {
      var middle, firstLength, targetMiddle,
        $length = end - start;
      if ($length < 32) {
        A._movingInsertionSort(list, compare, start, end, target, targetOffset);
        return;
      }
      middle = start + E.JSInt_methods._shrOtherPositive$1($length, 1);
      firstLength = middle - start;
      targetMiddle = targetOffset + firstLength;
      A._mergeSort(list, compare, middle, end, target, targetMiddle);
      A._mergeSort(list, compare, start, middle, list, middle);
      A._merge(compare, list, middle, middle + firstLength, target, targetMiddle, targetMiddle + (end - middle), target, targetOffset);
    },
    _merge(compare, firstList, firstStart, firstEnd, secondList, secondStart, secondEnd, target, targetOffset) {
      var targetOffset0, cursor10, cursor20,
        cursor1 = firstStart + 1,
        firstElement = firstList[firstStart],
        cursor2 = secondStart + 1,
        secondElement = secondList[secondStart];
      for (; true; targetOffset = targetOffset0) {
        targetOffset0 = targetOffset + 1;
        if (compare.call$2(firstElement, secondElement) <= 0) {
          target[targetOffset] = firstElement;
          if (cursor1 === firstEnd) {
            targetOffset = targetOffset0;
            break;
          }
          cursor10 = cursor1 + 1;
          firstElement = firstList[cursor1];
        } else {
          target[targetOffset] = secondElement;
          if (cursor2 !== secondEnd) {
            cursor20 = cursor2 + 1;
            secondElement = secondList[cursor2];
            cursor2 = cursor20;
            continue;
          }
          targetOffset = targetOffset0 + 1;
          target[targetOffset0] = firstElement;
          E.JSArray_methods.setRange$4(target, targetOffset, targetOffset + (firstEnd - cursor1), firstList, cursor1);
          return;
        }
        cursor1 = cursor10;
      }
      targetOffset0 = targetOffset + 1;
      target[targetOffset] = secondElement;
      E.JSArray_methods.setRange$4(target, targetOffset0, targetOffset0 + (secondEnd - cursor2), secondList, cursor2);
    },
    AppBarTheme$(actionsIconTheme, backgroundColor, backwardsCompatibility, brightness, centerTitle, elevation, foregroundColor, iconTheme, scrolledUnderElevation, shadowColor, shape, surfaceTintColor, systemOverlayStyle, textTheme, titleSpacing, titleTextStyle, toolbarHeight, toolbarTextStyle) {
      return new D.AppBarTheme(brightness, backgroundColor == null ? null : backgroundColor, foregroundColor, elevation, scrolledUnderElevation, shadowColor, surfaceTintColor, shape, iconTheme, actionsIconTheme, textTheme, centerTitle, titleSpacing, toolbarHeight, toolbarTextStyle, titleTextStyle, systemOverlayStyle, backwardsCompatibility);
    },
    BottomSheetThemeData_lerp(a, b, t) {
      var t6,
        t1 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = D.lerpDouble(a.elevation, b.elevation, t),
        t3 = D.Color_lerp(a.modalBackgroundColor, b.modalBackgroundColor, t),
        t4 = D.lerpDouble(a.modalElevation, b.modalElevation, t),
        t5 = D.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t < 0.5)
        t6 = a.clipBehavior;
      else
        t6 = b.clipBehavior;
      return new D.BottomSheetThemeData(t1, t2, t3, t4, t5, t6, A.BoxConstraints_lerp(a.constraints, b.constraints, t));
    },
    ButtonBarThemeData_lerp(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9,
        t1 = t < 0.5;
      if (t1)
        t2 = a.alignment;
      else
        t2 = b.alignment;
      if (t1)
        t3 = a.mainAxisSize;
      else
        t3 = b.mainAxisSize;
      if (t1)
        t4 = a.buttonTextTheme;
      else
        t4 = b.buttonTextTheme;
      t5 = D.lerpDouble(a.buttonMinWidth, b.buttonMinWidth, t);
      t6 = D.lerpDouble(a.buttonHeight, b.buttonHeight, t);
      t7 = F.EdgeInsetsGeometry_lerp(a.buttonPadding, b.buttonPadding, t);
      if (t1)
        t8 = a.buttonAlignedDropdown;
      else
        t8 = b.buttonAlignedDropdown;
      if (t1)
        t9 = a.layoutBehavior;
      else
        t9 = b.layoutBehavior;
      if (t1)
        t1 = a.overflowDirection;
      else
        t1 = b.overflowDirection;
      return new D.ButtonBarThemeData(t2, t3, t4, t5, t6, t7, t8, t9, t1);
    },
    CheckboxThemeData__lerpSides(a, b, t) {
      if (a == null && b == null)
        return null;
      a.toString;
      b.toString;
      return D.BorderSide_lerp(a, b, t);
    },
    ChipThemeData_lerp(a, b, t) {
      var t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,
        t1 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = D.Color_lerp(a.deleteIconColor, b.deleteIconColor, t),
        t3 = D.Color_lerp(a.disabledColor, b.disabledColor, t),
        t4 = D.Color_lerp(a.selectedColor, b.selectedColor, t),
        t5 = D.Color_lerp(a.secondarySelectedColor, b.secondarySelectedColor, t),
        t6 = D.Color_lerp(a.shadowColor, b.shadowColor, t),
        t7 = D.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t),
        t8 = D.Color_lerp(a.selectedShadowColor, b.selectedShadowColor, t),
        t9 = t < 0.5;
      if (t9)
        t10 = a.showCheckmark !== false;
      else
        t10 = b.showCheckmark !== false;
      t11 = D.Color_lerp(a.checkmarkColor, b.checkmarkColor, t);
      t12 = F.EdgeInsetsGeometry_lerp(a.labelPadding, b.labelPadding, t);
      t13 = F.EdgeInsetsGeometry_lerp(a.padding, b.padding, t);
      t14 = A.ChipThemeData__lerpSides(a.side, b.side, t);
      t15 = A.ChipThemeData__lerpShapes(a.shape, b.shape, t);
      t16 = D.TextStyle_lerp(a.labelStyle, b.labelStyle, t);
      t17 = D.TextStyle_lerp(a.secondaryLabelStyle, b.secondaryLabelStyle, t);
      if (t9) {
        t9 = a.brightness;
        if (t9 == null)
          t9 = E.Brightness_1;
      } else {
        t9 = b.brightness;
        if (t9 == null)
          t9 = E.Brightness_1;
      }
      t18 = D.lerpDouble(a.elevation, b.elevation, t);
      t19 = D.lerpDouble(a.pressElevation, b.pressElevation, t);
      return new D.ChipThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t10, t11, t12, t13, t14, t15, t16, t17, t9, t18, t19, A.IconThemeData_lerp(a.iconTheme, b.iconTheme, t));
    },
    ChipThemeData__lerpSides(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1) {
        t1 = b.color;
        return D.BorderSide_lerp(new D.BorderSide(C.Color$fromARGB(0, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255), 0, G.BorderStyle_1, G.StrokeAlign_0), b, t);
      }
      if (b == null) {
        t1 = a.color;
        return D.BorderSide_lerp(new D.BorderSide(C.Color$fromARGB(0, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255), 0, G.BorderStyle_1, G.StrokeAlign_0), a, t);
      }
      return D.BorderSide_lerp(a, b, t);
    },
    ChipThemeData__lerpShapes(a, b, t) {
      if (a == null && b == null)
        return null;
      return type$.nullable_OutlinedBorder._as(D.ShapeBorder_lerp(a, b, t));
    },
    ElevatedButtonThemeData_lerp(a, b, t) {
      return new D.ElevatedButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    ExpansionTileThemeData_lerp(a, b, t) {
      var t1 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = D.Color_lerp(a.collapsedBackgroundColor, b.collapsedBackgroundColor, t),
        t3 = F.EdgeInsetsGeometry_lerp(a.tilePadding, b.tilePadding, t),
        t4 = A.AlignmentGeometry_lerp(a.expandedAlignment, b.expandedAlignment, t),
        t5 = F.EdgeInsetsGeometry_lerp(a.childrenPadding, b.childrenPadding, t),
        t6 = D.Color_lerp(a.iconColor, b.iconColor, t),
        t7 = D.Color_lerp(a.collapsedIconColor, b.collapsedIconColor, t),
        t8 = D.Color_lerp(a.textColor, b.textColor, t);
      return new D.ExpansionTileThemeData(t1, t2, t3, t4, t5, t6, t7, t8, D.Color_lerp(a.collapsedTextColor, b.collapsedTextColor, t));
    },
    FloatingActionButtonThemeData$(backgroundColor, disabledElevation, elevation, enableFeedback, extendedIconLabelSpacing, extendedPadding, extendedSizeConstraints, extendedTextStyle, focusColor, focusElevation, foregroundColor, highlightElevation, hoverColor, hoverElevation, iconSize, largeSizeConstraints, shape, sizeConstraints, smallSizeConstraints, splashColor) {
      return new D.FloatingActionButtonThemeData(foregroundColor, backgroundColor, focusColor, hoverColor, splashColor, elevation, focusElevation, hoverElevation, disabledElevation, highlightElevation, shape, enableFeedback, iconSize, sizeConstraints, smallSizeConstraints, largeSizeConstraints, extendedSizeConstraints, extendedIconLabelSpacing, extendedPadding, extendedTextStyle);
    },
    FloatingActionButtonThemeData_lerp(a, b, t) {
      var t12, t13, t14, t15, t16, t17, t18, t19,
        t1 = D.Color_lerp(a.foregroundColor, b.foregroundColor, t),
        t2 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t3 = D.Color_lerp(a.focusColor, b.focusColor, t),
        t4 = D.Color_lerp(a.hoverColor, b.hoverColor, t),
        t5 = D.Color_lerp(a.splashColor, b.splashColor, t),
        t6 = D.lerpDouble(a.elevation, b.elevation, t),
        t7 = D.lerpDouble(a.focusElevation, b.focusElevation, t),
        t8 = D.lerpDouble(a.hoverElevation, b.hoverElevation, t),
        t9 = D.lerpDouble(a.disabledElevation, b.disabledElevation, t),
        t10 = D.lerpDouble(a.highlightElevation, b.highlightElevation, t),
        t11 = D.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t < 0.5)
        t12 = a.enableFeedback;
      else
        t12 = b.enableFeedback;
      t13 = D.lerpDouble(a.iconSize, b.iconSize, t);
      t14 = A.BoxConstraints_lerp(a.sizeConstraints, b.sizeConstraints, t);
      t15 = A.BoxConstraints_lerp(a.smallSizeConstraints, b.smallSizeConstraints, t);
      t16 = A.BoxConstraints_lerp(a.largeSizeConstraints, b.largeSizeConstraints, t);
      t17 = A.BoxConstraints_lerp(a.extendedSizeConstraints, b.extendedSizeConstraints, t);
      t18 = D.lerpDouble(a.extendedIconLabelSpacing, b.extendedIconLabelSpacing, t);
      t19 = F.EdgeInsetsGeometry_lerp(a.extendedPadding, b.extendedPadding, t);
      return A.FloatingActionButtonThemeData$(t2, t9, t6, t12, t18, t19, t17, D.TextStyle_lerp(a.extendedTextStyle, b.extendedTextStyle, t), t3, t7, t1, t10, t4, t8, t13, t16, t11, t14, t15, t5);
    },
    NavigationBarThemeData_lerp(a, b, t) {
      var t9,
        t1 = D.lerpDouble(a.height, b.height, t),
        t2 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t3 = D.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t),
        t4 = D.lerpDouble(a.elevation, b.elevation, t),
        t5 = D.Color_lerp(a.indicatorColor, b.indicatorColor, t),
        t6 = D.ShapeBorder_lerp(a.indicatorShape, b.indicatorShape, t),
        t7 = A.MaterialStateProperty_lerp(a.labelTextStyle, b.labelTextStyle, t, D.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle),
        t8 = A.MaterialStateProperty_lerp(a.iconTheme, b.iconTheme, t, A.icon_theme_data_IconThemeData_lerp$closure(), type$.nullable_IconThemeData);
      if (t < 0.5)
        t9 = a.labelBehavior;
      else
        t9 = b.labelBehavior;
      return new D.NavigationBarThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9);
    },
    NavigationRailThemeData_lerp(a, b, t) {
      var t9, t10, t11,
        t1 = D.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = D.lerpDouble(a.elevation, b.elevation, t),
        t3 = D.TextStyle_lerp(a.unselectedLabelTextStyle, b.unselectedLabelTextStyle, t),
        t4 = D.TextStyle_lerp(a.selectedLabelTextStyle, b.selectedLabelTextStyle, t),
        t5 = A.IconThemeData_lerp(a.unselectedIconTheme, b.unselectedIconTheme, t),
        t6 = A.IconThemeData_lerp(a.selectedIconTheme, b.selectedIconTheme, t),
        t7 = D.lerpDouble(a.groupAlignment, b.groupAlignment, t),
        t8 = t < 0.5;
      if (t8)
        t9 = a.labelType;
      else
        t9 = b.labelType;
      if (t8)
        t8 = a.useIndicator;
      else
        t8 = b.useIndicator;
      t10 = D.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t11 = D.lerpDouble(a.minWidth, b.minWidth, t);
      return new D.NavigationRailThemeData(t1, t2, t3, t4, t5, t6, t7, t9, t8, t10, t11, D.lerpDouble(a.minExtendedWidth, b.minExtendedWidth, t));
    },
    OutlinedButtonThemeData_lerp(a, b, t) {
      return new D.OutlinedButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    PopupMenuThemeData_lerp(a, b, t) {
      var t6,
        t1 = D.Color_lerp(a.color, b.color, t),
        t2 = D.ShapeBorder_lerp(a.shape, b.shape, t),
        t3 = D.lerpDouble(a.elevation, b.elevation, t),
        t4 = D.TextStyle_lerp(a.textStyle, b.textStyle, t),
        t5 = t < 0.5;
      if (t5)
        t6 = a.enableFeedback;
      else
        t6 = b.enableFeedback;
      if (t5)
        t5 = a.mouseCursor;
      else
        t5 = b.mouseCursor;
      return new D.PopupMenuThemeData(t1, t2, t3, t4, t6, t5);
    },
    ProgressIndicatorThemeData_lerp(a, b, t) {
      var t1 = D.Color_lerp(a.color, b.color, t),
        t2 = D.Color_lerp(a.linearTrackColor, b.linearTrackColor, t),
        t3 = D.lerpDouble(a.linearMinHeight, b.linearMinHeight, t),
        t4 = D.Color_lerp(a.circularTrackColor, b.circularTrackColor, t);
      return new D.ProgressIndicatorThemeData(t1, t2, t3, t4, D.Color_lerp(a.refreshBackgroundColor, b.refreshBackgroundColor, t));
    },
    _lerpBool(a, b, t) {
      return t < 0.5 ? a : b;
    },
    TextButtonThemeData_lerp(a, b, t) {
      return new D.TextButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    TextSelectionThemeData_lerp(a, b, t) {
      var t1 = D.Color_lerp(a.cursorColor, b.cursorColor, t),
        t2 = D.Color_lerp(a.selectionColor, b.selectionColor, t);
      return new D.TextSelectionThemeData(t1, t2, D.Color_lerp(a.selectionHandleColor, b.selectionHandleColor, t));
    },
    TextTheme_lerp(a, b, t) {
      var t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.displayLarge,
        t3 = b == null;
      t2 = D.TextStyle_lerp(t2, t3 ? _null : b.displayLarge, t);
      t4 = t1 ? _null : a.displayMedium;
      t4 = D.TextStyle_lerp(t4, t3 ? _null : b.displayMedium, t);
      t5 = t1 ? _null : a.displaySmall;
      t5 = D.TextStyle_lerp(t5, t3 ? _null : b.displaySmall, t);
      t6 = t1 ? _null : a.headlineLarge;
      t6 = D.TextStyle_lerp(t6, t3 ? _null : b.headlineLarge, t);
      t7 = t1 ? _null : a.headlineMedium;
      t7 = D.TextStyle_lerp(t7, t3 ? _null : b.headlineMedium, t);
      t8 = t1 ? _null : a.headlineSmall;
      t8 = D.TextStyle_lerp(t8, t3 ? _null : b.headlineSmall, t);
      t9 = t1 ? _null : a.titleLarge;
      t9 = D.TextStyle_lerp(t9, t3 ? _null : b.titleLarge, t);
      t10 = t1 ? _null : a.titleMedium;
      t10 = D.TextStyle_lerp(t10, t3 ? _null : b.titleMedium, t);
      t11 = t1 ? _null : a.titleSmall;
      t11 = D.TextStyle_lerp(t11, t3 ? _null : b.titleSmall, t);
      t12 = t1 ? _null : a.bodyLarge;
      t12 = D.TextStyle_lerp(t12, t3 ? _null : b.bodyLarge, t);
      t13 = t1 ? _null : a.bodyMedium;
      t13 = D.TextStyle_lerp(t13, t3 ? _null : b.bodyMedium, t);
      t14 = t1 ? _null : a.bodySmall;
      t14 = D.TextStyle_lerp(t14, t3 ? _null : b.bodySmall, t);
      t15 = t1 ? _null : a.labelLarge;
      t15 = D.TextStyle_lerp(t15, t3 ? _null : b.labelLarge, t);
      t16 = t1 ? _null : a.labelMedium;
      t16 = D.TextStyle_lerp(t16, t3 ? _null : b.labelMedium, t);
      t1 = t1 ? _null : a.labelSmall;
      return D.TextTheme$(t12, t13, t14, t2, t4, t5, t6, t7, t8, t15, t16, D.TextStyle_lerp(t1, t3 ? _null : b.labelSmall, t), t9, t10, t11);
    },
    ToggleButtonsThemeData_lerp(a, b, t) {
      var t1 = D.TextStyle_lerp(a.textStyle, b.textStyle, t),
        t2 = A.BoxConstraints_lerp(a.constraints, b.constraints, t),
        t3 = D.Color_lerp(a.color, b.color, t),
        t4 = D.Color_lerp(a.selectedColor, b.selectedColor, t),
        t5 = D.Color_lerp(a.disabledColor, b.disabledColor, t),
        t6 = D.Color_lerp(a.fillColor, b.fillColor, t),
        t7 = D.Color_lerp(a.focusColor, b.focusColor, t),
        t8 = D.Color_lerp(a.highlightColor, b.highlightColor, t),
        t9 = D.Color_lerp(a.hoverColor, b.hoverColor, t),
        t10 = D.Color_lerp(a.splashColor, b.splashColor, t),
        t11 = D.Color_lerp(a.borderColor, b.borderColor, t),
        t12 = D.Color_lerp(a.selectedBorderColor, b.selectedBorderColor, t),
        t13 = D.Color_lerp(a.disabledBorderColor, b.disabledBorderColor, t),
        t14 = D.BorderRadius_lerp(a.borderRadius, b.borderRadius, t);
      return new D.ToggleButtonsThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t10, t9, t11, t12, t13, D.lerpDouble(a.borderWidth, b.borderWidth, t), t14);
    },
    Tooltip_dismissAllToolTips() {
      var openedTooltips, t1, _i;
      if ($.Tooltip__openedTooltips.length !== 0) {
        openedTooltips = C._setArrayType($.Tooltip__openedTooltips.slice(0), C._arrayInstanceType($.Tooltip__openedTooltips));
        for (t1 = openedTooltips.length, _i = 0; _i < openedTooltips.length; openedTooltips.length === t1 || (0, C.throwConcurrentModificationError)(openedTooltips), ++_i)
          openedTooltips[_i]._dismissTooltip$1$immediately(true);
        return true;
      }
      return false;
    },
    TooltipThemeData_lerp(a, b, t) {
      var t6, t7, t8, t9,
        t1 = D.lerpDouble(a.height, b.height, t),
        t2 = F.EdgeInsetsGeometry_lerp(a.padding, b.padding, t),
        t3 = F.EdgeInsetsGeometry_lerp(a.margin, b.margin, t),
        t4 = D.lerpDouble(a.verticalOffset, b.verticalOffset, t),
        t5 = t < 0.5;
      if (t5)
        t6 = a.preferBelow;
      else
        t6 = b.preferBelow;
      if (t5)
        t7 = a.excludeFromSemantics;
      else
        t7 = b.excludeFromSemantics;
      t8 = D.Decoration_lerp(a.decoration, b.decoration, t);
      t9 = D.TextStyle_lerp(a.textStyle, b.textStyle, t);
      if (t5)
        t5 = a.textAlign;
      else
        t5 = b.textAlign;
      return new D.TooltipThemeData(t1, t2, t3, t4, t6, t7, t8, t9, t5);
    },
    AlignmentGeometry_lerp(a, b, t) {
      var t2, t3,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof D.Alignment && b instanceof D.Alignment)
        return A.Alignment_lerp(a, b, t);
      if (a instanceof D.AlignmentDirectional && b instanceof D.AlignmentDirectional)
        return A.AlignmentDirectional_lerp(a, b, t);
      t1 = D.lerpDouble(a.get$_x(), b.get$_x(), t);
      t1.toString;
      t2 = D.lerpDouble(a.get$_alignment$_start(a), b.get$_alignment$_start(b), t);
      t2.toString;
      t3 = D.lerpDouble(a.get$_y(), b.get$_y(), t);
      t3.toString;
      return new D._MixedAlignment(t1, t2, t3);
    },
    Alignment_lerp(a, b, t) {
      var t2,
        t1 = D.lerpDouble(a.x, b.x, t);
      t1.toString;
      t2 = D.lerpDouble(a.y, b.y, t);
      t2.toString;
      return new D.Alignment(t1, t2);
    },
    AlignmentDirectional_lerp(a, b, t) {
      var t2,
        t1 = D.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = D.lerpDouble(a.y, b.y, t);
      t2.toString;
      return new D.AlignmentDirectional(t1, t2);
    },
    OutlinedBorder_lerp(a, b, t) {
      var t1,
        result = b != null ? b.lerpFrom$2(a, t) : null;
      if (result == null && a != null)
        result = a.lerpTo$2(b, t);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    EdgeInsets$fromWindowPadding(padding, devicePixelRatio) {
      return new C.EdgeInsets(padding.left / devicePixelRatio, padding.top / devicePixelRatio, padding.right / devicePixelRatio, padding.bottom / devicePixelRatio);
    },
    BoxConstraints_lerp(a, b, t) {
      var t2, t3, t4,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = a.minWidth;
      if (isFinite(t1)) {
        t1 = D.lerpDouble(t1, b.minWidth, t);
        t1.toString;
      } else
        t1 = 1 / 0;
      t2 = a.maxWidth;
      if (isFinite(t2)) {
        t2 = D.lerpDouble(t2, b.maxWidth, t);
        t2.toString;
      } else
        t2 = 1 / 0;
      t3 = a.minHeight;
      if (isFinite(t3)) {
        t3 = D.lerpDouble(t3, b.minHeight, t);
        t3.toString;
      } else
        t3 = 1 / 0;
      t4 = a.maxHeight;
      if (isFinite(t4)) {
        t4 = D.lerpDouble(t4, b.maxHeight, t);
        t4.toString;
      } else
        t4 = 1 / 0;
      return new C.BoxConstraints(t1, t2, t3, t4);
    },
    SystemNavigator_routeInformationUpdated($location, replace, state) {
      return E.OptionalMethodChannel_urv.invokeMethod$1$2("routeInformationUpdated", C.LinkedHashMap_LinkedHashMap$_literal(["location", $location, "state", state, "replace", replace], type$.String, type$.dynamic), type$.void);
    },
    IconThemeData_lerp(a, b, t) {
      var t4, t5, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.color,
        t3 = b == null;
      t2 = D.Color_lerp(t2, t3 ? _null : b.color, t);
      if (t1)
        t4 = _null;
      else {
        t4 = a._opacity;
        t4 = t4 == null ? _null : C.clampDouble(t4, 0, 1);
      }
      if (t3)
        t5 = _null;
      else {
        t5 = b._opacity;
        t5 = t5 == null ? _null : C.clampDouble(t5, 0, 1);
      }
      t5 = D.lerpDouble(t4, t5, t);
      t4 = t1 ? _null : a.size;
      t4 = D.lerpDouble(t4, t3 ? _null : b.size, t);
      t1 = t1 ? _null : a.shadows;
      return new D.IconThemeData(t2, t5, t4, A.Shadow_lerpList(t1, t3 ? _null : b.shadows, t));
    },
    convertLaunchMode(mode) {
      switch (mode.index) {
        case 0:
          return E.PreferredLaunchMode_0;
        case 1:
          return E.PreferredLaunchMode_1;
        case 2:
          return B.PreferredLaunchMode_2;
        case 3:
          return E.PreferredLaunchMode_3;
      }
    },
    launchUrl(url) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, useWebView, t1, t2, t3, isWebURL;
      var $async$launchUrl = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$UrlLauncherPlatform__instance();
              t2 = url.toString$0(0);
              t3 = A.convertLaunchMode(B.LaunchMode_0);
              isWebURL = E.JSString_methods.startsWith$1(t2, "http:") || E.JSString_methods.startsWith$1(t2, "https:");
              if (t3 !== E.PreferredLaunchMode_1)
                useWebView = isWebURL && t3 === E.PreferredLaunchMode_0;
              else
                useWebView = true;
              $async$returnValue = t1.launch$8$enableDomStorage$enableJavaScript$headers$universalLinksOnly$useSafariVC$useWebView$webOnlyWindowName(t2, true, true, E.Map_empty4, t3 === E.PreferredLaunchMode_3, useWebView, useWebView, null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$launchUrl, $async$completer);
    }
  },
  C, G, J, F, B, E, D, H, I, K, L, M, N, O, P, Q;
  A = hunkHelpers.updateHolder(holdersList[5], A);
  C = holdersList[0];
  G = holdersList[12];
  J = holdersList[1];
  F = holdersList[10];
  B = holdersList[22];
  E = holdersList[2];
  D = holdersList[11];
  H = holdersList[15];
  I = holdersList[8];
  K = holdersList[18];
  L = holdersList[14];
  M = holdersList[23];
  N = holdersList[3];
  O = holdersList[4];
  P = holdersList[6];
  Q = holdersList[21];
  A.LinkedList.prototype = {
    contains$1(_, entry) {
      return entry instanceof A.LinkedListEntry && this === entry._collection$_list;
    },
    get$iterator(_) {
      return new A._LinkedListIterator(this, this._modificationCount, this._collection$_first);
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$first(_) {
      var t1;
      if (this._collection$_length === 0)
        throw C.wrapException(C.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$last(_) {
      var t1;
      if (this._collection$_length === 0)
        throw C.wrapException(C.StateError$("No such element"));
      t1 = this._collection$_first._collection$_previous;
      t1.toString;
      return t1;
    },
    forEach$1(_, action) {
      var t1, current, _this = this,
        modificationCount = _this._modificationCount;
      if (_this._collection$_length === 0)
        return;
      t1 = _this._collection$_first;
      t1.toString;
      current = t1;
      do {
        action.call$1(current);
        if (modificationCount !== _this._modificationCount)
          throw C.wrapException(C.ConcurrentModificationError$(_this));
        t1 = current._collection$_next;
        t1.toString;
        if (t1 !== _this._collection$_first) {
          current = t1;
          continue;
        } else
          break;
      } while (true);
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst(entry, newEntry, updateFirst) {
      var t1, t2, _this = this;
      if (newEntry._collection$_list != null)
        throw C.wrapException(C.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry._collection$_list = _this;
      t1 = _this._collection$_length;
      if (t1 === 0) {
        newEntry._collection$_next = newEntry;
        _this._collection$_first = newEntry._collection$_previous = newEntry;
        _this._collection$_length = t1 + 1;
        return;
      }
      t2 = entry._collection$_previous;
      t2.toString;
      newEntry._collection$_previous = t2;
      newEntry._collection$_next = entry;
      entry._collection$_previous = t2._collection$_next = newEntry;
      _this._collection$_length = t1 + 1;
    }
  };
  A._LinkedListIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? C._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._collection$_list;
      if (_this._modificationCount !== t1._modificationCount)
        throw C.wrapException(C.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(t1);
      else
        t1 = true;
      if (t1) {
        _this._collection$_current = null;
        return false;
      }
      _this._visitedFirst = true;
      t1 = _this._collection$_next;
      _this._collection$_current = t1;
      _this._collection$_next = t1._collection$_next;
      return true;
    }
  };
  A.LinkedListEntry.prototype = {};
  A.CallbackHandle.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode(_) {
      return C.Object.prototype.get$hashCode.call(this, this);
    }
  };
  A.CompoundAnimation.prototype = {
    didStartListening$0() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.addListener$1(0, t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.addStatusListener$1(t3);
      t1 = _this.next;
      t1.addListener$1(0, t2);
      t1.addStatusListener$1(t3);
    },
    didStopListening$0() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.removeListener$1(0, t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.removeStatusListener$1(t3);
      t1 = _this.next;
      t1.removeListener$1(0, t2);
      t1.removeStatusListener$1(t3);
    },
    get$status(_) {
      var t1 = this.next;
      if (t1.get$status(t1) === G.AnimationStatus_1 || t1.get$status(t1) === G.AnimationStatus_2)
        return t1.get$status(t1);
      t1 = this.first;
      return t1.get$status(t1);
    },
    toString$0(_) {
      return "CompoundAnimation(" + this.first.toString$0(0) + ", " + this.next.toString$0(0) + ")";
    },
    _maybeNotifyStatusListeners$1(_) {
      var _this = this;
      if (_this.get$status(_this) != _this._lastStatus) {
        _this._lastStatus = _this.get$status(_this);
        _this.notifyStatusListeners$1(_this.get$status(_this));
      }
    },
    _maybeNotifyListeners$0() {
      var _this = this;
      if (!J.$eq$(_this.get$value(_this), _this._lastValue)) {
        _this._lastValue = _this.get$value(_this);
        _this.notifyListeners$0();
      }
    }
  };
  A.AnimationMin.prototype = {
    get$value(_) {
      var t2,
        t1 = this.first;
      t1 = t1.get$value(t1);
      t2 = this.next;
      t2 = t2.get$value(t2);
      return Math.min(C.checkNum(t1), C.checkNum(t2));
    }
  };
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A.ReverseTween.prototype = {
    lerp$1(t) {
      return this.parent.lerp$1(1 - t);
    }
  };
  A.RectTween.prototype = {
    lerp$1(t) {
      return A.Rect_lerp(this.begin, this.end, t);
    }
  };
  A.CupertinoIconThemeData.prototype = {
    resolve$1(context) {
      var t1 = this.color,
        resolvedColor = F.CupertinoDynamicColor_maybeResolve(t1, context);
      return J.$eq$(resolvedColor, t1) ? this : this.copyWith$1$color(resolvedColor);
    },
    copyWith$4$color$opacity$shadows$size(color, opacity, shadows, size) {
      var t2, t3, _this = this,
        t1 = color == null ? _this.color : color;
      if (opacity == null) {
        t2 = _this._opacity;
        t2 = t2 == null ? null : C.clampDouble(t2, 0, 1);
      } else
        t2 = opacity;
      t3 = size == null ? _this.size : size;
      return new A.CupertinoIconThemeData(t1, t2, t3, shadows == null ? _this.shadows : shadows);
    },
    copyWith$1$color(color) {
      return this.copyWith$4$color$opacity$shadows$size(color, null, null, null);
    }
  };
  A._CupertinoIconThemeData_IconThemeData_Diagnosticable.prototype = {};
  A._CupertinoLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return locale.get$languageCode(locale) === "en";
    },
    load$1(_, locale) {
      return new C.SynchronousFuture(B.C_DefaultCupertinoLocalizations, type$.SynchronousFuture_CupertinoLocalizations);
    },
    shouldReload$1(old) {
      return false;
    },
    toString$0(_) {
      return "DefaultCupertinoLocalizations.delegate(en_US)";
    }
  };
  A.DefaultCupertinoLocalizations.prototype = {$isCupertinoLocalizations: 1};
  A.CupertinoTheme.prototype = {
    build$1(context) {
      var _null = null;
      return new A._InheritedCupertinoTheme(this, F.IconTheme$(this.child, new A.CupertinoIconThemeData(this.data.get$primaryColor(), _null, _null, _null), _null), _null);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A._InheritedCupertinoTheme.prototype = {
    updateShouldNotify$1(old) {
      return this.theme.data !== old.theme.data;
    }
  };
  A.DeviceGestureSettings.prototype = {
    get$panSlop() {
      var t1 = this.touchSlop;
      return t1 != null ? t1 * 2 : null;
    },
    get$hashCode(_) {
      return C.Object_hash(this.touchSlop, 23, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeType(this))
        return false;
      return other instanceof A.DeviceGestureSettings && other.touchSlop == this.touchSlop;
    },
    toString$0(_) {
      return "DeviceGestureSettings(touchSlop: " + C.S(this.touchSlop) + ")";
    }
  };
  A.ThemeMode.prototype = {
    toString$0(_) {
      return "ThemeMode." + this._core$_name;
    }
  };
  A.MaterialApp.prototype = {
    createState$0() {
      return new A._MaterialAppState(G._StateLifecycle_0);
    }
  };
  A.MaterialScrollBehavior.prototype = {
    getPlatform$1(context) {
      return D.Theme_of(context).platform;
    },
    buildScrollbar$3(context, child, details) {
      switch (D.axisDirectionToAxis(details.direction)) {
        case E.Axis_0:
          return child;
        case E.Axis_1:
          switch (D.Theme_of(context).platform.index) {
            case 3:
            case 4:
            case 5:
              return F.Scrollbar$(child, details.controller, null);
            case 0:
            case 1:
            case 2:
              return child;
          }
          break;
      }
    },
    buildOverscrollIndicator$3(context, child, details) {
      var target, t1, t2, _null = null,
        indicator = C._Cell$named("indicator");
      D.Theme_of(context);
      D.Theme_of(context);
      indicator.set$finalLocalValue(G.AndroidOverscrollIndicator_1);
      switch (D.Theme_of(context).platform.index) {
        case 2:
        case 3:
        case 4:
        case 5:
          target = 1;
          break;
        case 0:
          target = 2;
          break;
        case 1:
          target = 3;
          break;
        default:
          target = _null;
          break;
      }
      if (target)
        c$0:
          for (t1 = indicator.__late_helper$_name; true;)
            switch (target) {
              case 1:
                return child;
              case 2:
                t2 = indicator.__late_helper$_value;
                if (t2 === indicator)
                  C.throwExpression(C.LateError$localNI(t1));
                switch (t2) {
                  case G.AndroidOverscrollIndicator_0:
                    target = 1;
                    break;
                  case G.AndroidOverscrollIndicator_1:
                    target = 2;
                    break;
                  default:
                    target = _null;
                    break;
                }
                if (target)
                  c$1:
                    for (; true;)
                      switch (target) {
                        case 1:
                          return new D.StretchingOverscrollIndicator(details.direction, details.clipBehavior, child, _null);
                        case 2:
                          target = 3;
                          continue c$0;
                      }
                break c$0;
              case 3:
                return new D.GlowingOverscrollIndicator(details.direction, D.Theme_of(context).colorScheme.secondary, child, _null);
            }
    }
  };
  A._MaterialAppState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.___MaterialAppState__heroController_A = A.MaterialApp_createMaterialHeroController();
    },
    get$_localizationsDelegates() {
      var t1 = C._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      this._widget.toString;
      t1.push(B.C__MaterialLocalizationsDelegate);
      t1.push(B.C__CupertinoLocalizationsDelegate);
      return t1;
    },
    _inspectorSelectButtonBuilder$2(context, onPressed) {
      return new A.FloatingActionButton(H.Icon_IconData_58727_false_null, onPressed, B._FloatingActionButtonType_1, null);
    },
    _materialBuilder$2(context, child) {
      var t1, platformBrightness, useDarkTheme, highContrast, theme, effectiveSelectionColor, t2, effectiveCursorColor, _this = this, _null = null;
      _this._widget.toString;
      t1 = D.MediaQuery_maybeOf(context);
      platformBrightness = t1 == null ? _null : t1.platformBrightness;
      if (platformBrightness == null)
        platformBrightness = E.Brightness_1;
      useDarkTheme = platformBrightness === E.Brightness_0;
      t1 = D.MediaQuery_maybeOf(context);
      t1 = t1 == null ? _null : t1.highContrast;
      highContrast = t1 === true;
      if (useDarkTheme)
        if (highContrast)
          _this._widget.toString;
      if (useDarkTheme)
        _this._widget.toString;
      if (highContrast)
        _this._widget.toString;
      theme = _this._widget.theme;
      t1 = theme.textSelectionTheme;
      effectiveSelectionColor = t1.selectionColor;
      if (effectiveSelectionColor == null) {
        t2 = theme.colorScheme.primary;
        effectiveSelectionColor = C.Color$fromARGB(102, t2.get$value(t2) >>> 16 & 255, t2.get$value(t2) >>> 8 & 255, t2.get$value(t2) & 255);
      }
      effectiveCursorColor = t1.cursorColor;
      if (effectiveCursorColor == null)
        effectiveCursorColor = theme.colorScheme.primary;
      _this._widget.toString;
      t1 = child == null ? G.SizedBox_0_0_null_null : child;
      return new A.ScaffoldMessenger(D.DefaultSelectionStyle$(new A.AnimatedTheme(theme, t1, G.C__Linear, E.Duration_200000, _null, _null), effectiveCursorColor, effectiveSelectionColor), _null);
    },
    _buildWidgetApp$1(context) {
      var materialColor, t3, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.theme;
      t2 = t2.primaryColor;
      materialColor = t2;
      if (materialColor == null)
        materialColor = G.MaterialColor_Map_JNwaj_4280391411;
      t2 = t1.home;
      t1 = t1.title;
      t3 = _this.get$_localizationsDelegates();
      _this._widget.toString;
      return new A.WidgetsApp(_null, _null, _null, new A._MaterialAppState__buildWidgetApp_closure(), _null, _null, _null, _null, _null, t2, B.Map_empty7, _null, _null, B.List_empty14, _this.get$_materialBuilder(), t1, _null, B.TextStyle_86y, materialColor, _null, t3, _null, _null, E.List_Locale_en_US, false, false, false, false, _this.get$_inspectorSelectButtonBuilder(), true, _null, _null, _null, false, new C.GlobalObjectKey(_this, type$.GlobalObjectKey_State_StatefulWidget));
    },
    build$1(context) {
      var t1, _null = null,
        result = F.Focus$(false, false, this._buildWidgetApp$1(context), _null, _null, _null, _null, true, _null, _null, new A._MaterialAppState_build_closure(), _null, _null);
      this._widget.toString;
      t1 = this.___MaterialAppState__heroController_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      return F.ScrollConfiguration$(B.C_MaterialScrollBehavior, new A.HeroControllerScope(t1, result, _null));
    }
  };
  A._ToolbarContainerLayout.prototype = {
    getConstraintsForChild$1(constraints) {
      return constraints.tighten$1$height(this.toolbarHeight);
    },
    getSize$1(constraints) {
      return new C.Size(constraints.maxWidth, this.toolbarHeight);
    },
    getPositionForChild$2(size, childSize) {
      return new C.Offset(0, size._dy - childSize._dy);
    },
    shouldRelayout$1(oldDelegate) {
      return this.toolbarHeight !== oldDelegate.toolbarHeight;
    }
  };
  A._PreferredAppBarSize.prototype = {};
  A.AppBar.prototype = {
    _getEffectiveCenterTitle$1(theme) {
      var t1 = new A.AppBar__getEffectiveCenterTitle_platformCenter(this, theme).call$0();
      return t1;
    },
    createState$0() {
      return new A._AppBarState(G._StateLifecycle_0);
    },
    notificationPredicate$1(arg0) {
      return D.scroll_notification__defaultScrollNotificationPredicate$closure().call$1(arg0);
    }
  };
  A._AppBarState.prototype = {
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._scrollNotificationObserver;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_app_bar$_handleScrollNotification());
      t1 = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$._ScrollNotificationObserverScope);
      t1 = t1 == null ? null : t1._scrollNotificationObserverState;
      _this._scrollNotificationObserver = t1;
      if (t1 != null) {
        t1 = t1._scroll_notification_observer$_listeners;
        t1._insertBefore$3$updateFirst(t1._collection$_first, new A._ListenerEntry(_this.get$_app_bar$_handleScrollNotification()), false);
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._scrollNotificationObserver;
      if (t1 != null) {
        t1.removeListener$1(0, _this.get$_app_bar$_handleScrollNotification());
        _this._scrollNotificationObserver = null;
      }
      _this.super$State$dispose();
    },
    _handleDrawerButton$0() {
      var t2, t3, t4,
        t1 = this._framework$_element;
      t1.toString;
      t1 = A.Scaffold_of(t1);
      t2 = t1._endDrawerKey;
      if (t2.get$currentState() != null) {
        t3 = t1._endDrawerOpened;
        t4 = t3._restoration_properties$_value;
        t3 = t4 == null ? C._instanceType(t3)._eval$1("RestorableValue.T")._as(t4) : t4;
      } else
        t3 = false;
      if (t3)
        t2.get$currentState().close$0(0);
      t1 = t1._drawerKey.get$currentState();
      if (t1 != null)
        t1.open$0(0);
    },
    _app_bar$_handleScrollNotification$1(notification) {
      var oldScrolledUnder, metrics, t1, _this = this;
      if (notification instanceof D.ScrollUpdateNotification && _this._widget.notificationPredicate$1(notification)) {
        oldScrolledUnder = _this._scrolledUnder;
        metrics = notification.metrics;
        switch (metrics.axisDirection.index) {
          case 0:
            t1 = _this._scrolledUnder = Math.max(metrics.get$maxScrollExtent() - metrics.get$pixels(), 0) > 0;
            break;
          case 2:
            t1 = _this._scrolledUnder = Math.max(metrics.get$pixels() - metrics.get$minScrollExtent(), 0) > 0;
            break;
          case 1:
          case 3:
            t1 = _this._scrolledUnder = false;
            break;
          default:
            t1 = oldScrolledUnder;
        }
        if (t1 !== oldScrolledUnder)
          _this.setState$1(new A._AppBarState__handleScrollNotification_closure());
      }
    },
    build$1(context) {
      var t2, t3, t4, hasEndDrawer, canPop, toolbarHeight, t5, t6, backgroundColor, foregroundColor, elevation, effectiveElevation, overallIconTheme, actionsIconTheme, toolbarTextStyle, titleTextStyle, leading, title, namesRoute, mediaQueryData, actions, appBar, overlayStyle, _this = this, _null = null,
        theme = D.Theme_of(context),
        appBarTheme = D.Theme_of(context).appBarTheme,
        defaults = new A._AppBarDefaultsM2(context, _null, _null, _null, 4, _null, E.Color_4278190080, _null, _null, _null, _null, _null, _null, 16, 56, _null, _null, _null, _null),
        t1 = context.findAncestorStateOfType$1$0(type$.ScaffoldState),
        parentRoute = F.ModalRoute_of(context, type$.nullable_Object);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.FlexibleSpaceBarSettings);
      t2 = C.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      t3 = _this._scrolledUnder;
      if (t3)
        t2.add$1(0, B.MaterialState_5);
      t3 = t1 == null;
      t4 = t3 ? _null : t1._widget.drawer != null;
      if (t3)
        t1 = _null;
      else {
        t1._widget.toString;
        t1 = false;
      }
      hasEndDrawer = t1 === true;
      t1 = parentRoute == null;
      if (t1)
        t3 = _null;
      else if (!parentRoute.get$hasActiveRouteBelow()) {
        t3 = parentRoute.LocalHistoryRoute__localHistory;
        t3 = t3 != null && t3.length !== 0;
      } else
        t3 = true;
      canPop = t3 === true;
      _this._widget.toString;
      toolbarHeight = appBarTheme.toolbarHeight;
      if (toolbarHeight == null)
        toolbarHeight = 56;
      t3 = defaults.get$backgroundColor(defaults);
      t5 = type$.nullable_Color;
      t6 = F.MaterialStateProperty_resolveAs(_null, t2, t5);
      t5 = t6 == null ? F.MaterialStateProperty_resolveAs(appBarTheme.backgroundColor, t2, t5) : t6;
      backgroundColor = t5 == null ? F.MaterialStateProperty_resolveAs(t3, t2, type$.Color) : t5;
      _this._widget.toString;
      foregroundColor = appBarTheme.foregroundColor;
      if (foregroundColor == null)
        foregroundColor = defaults.get$foregroundColor();
      _this._widget.toString;
      elevation = appBarTheme.elevation;
      if (elevation == null) {
        t3 = defaults.elevation;
        t3.toString;
        elevation = t3;
      }
      if (t2.contains$1(0, B.MaterialState_5)) {
        _this._widget.toString;
        t2 = appBarTheme.scrolledUnderElevation;
        if (t2 == null)
          t2 = defaults.scrolledUnderElevation;
        effectiveElevation = t2 == null ? elevation : t2;
      } else
        effectiveElevation = elevation;
      _this._widget.toString;
      t2 = appBarTheme.iconTheme;
      overallIconTheme = t2 == null ? defaults.get$iconTheme().copyWith$1$color(foregroundColor) : t2;
      _this._widget.toString;
      t3 = appBarTheme.actionsIconTheme;
      if (t3 == null)
        t3 = _null;
      t2 = t3 == null ? t2 : t3;
      if (t2 == null) {
        t2 = defaults.actionsIconTheme;
        t2 = t2 == null ? _null : t2.copyWith$1$color(foregroundColor);
        actionsIconTheme = t2;
      } else
        actionsIconTheme = t2;
      if (actionsIconTheme == null)
        actionsIconTheme = overallIconTheme;
      _this._widget.toString;
      t2 = appBarTheme.toolbarTextStyle;
      if (t2 == null) {
        t2 = defaults.get$toolbarTextStyle();
        t2 = t2 == null ? _null : t2.copyWith$1$color(foregroundColor);
        toolbarTextStyle = t2;
      } else
        toolbarTextStyle = t2;
      _this._widget.toString;
      t2 = appBarTheme.titleTextStyle;
      if (t2 == null) {
        t2 = defaults.get$titleTextStyle();
        t2 = t2 == null ? _null : t2.copyWith$1$color(foregroundColor);
        titleTextStyle = t2;
      } else
        titleTextStyle = t2;
      _this._widget.toString;
      if (t4 === true) {
        t1 = overallIconTheme.size;
        if (t1 == null)
          t1 = 24;
        D.Localizations_of(context, G.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
        leading = F.IconButton$(_null, B.Icon_IconData_58332_false_null, t1, _this.get$_handleDrawerButton(), "Open navigation menu");
      } else {
        if (!(!hasEndDrawer && canPop)) {
          if (t1)
            t1 = _null;
          else
            t1 = parentRoute.get$hasActiveRouteBelow() || parentRoute.LocalHistoryRoute__entriesImpliesAppBarDismissal > 0;
          t1 = t1 === true;
        } else
          t1 = true;
        if (t1)
          leading = B.BackButton_null;
        else
          leading = _null;
      }
      if (leading != null) {
        _this._widget.toString;
        leading = new D.ConstrainedBox(D.BoxConstraints$tightFor(_null, 56), leading, _null);
      }
      title = _this._widget.title;
      switch (theme.platform.index) {
        case 0:
        case 1:
        case 3:
        case 5:
          namesRoute = true;
          break;
        case 2:
        case 4:
          namesRoute = _null;
          break;
        default:
          namesRoute = _null;
      }
      title = D.Semantics$(_null, new A._AppBarTitleBox(title, _null), false, _null, _null, false, false, _null, _null, true, _null, _null, _null, namesRoute, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      titleTextStyle.toString;
      title = D.DefaultTextStyle$(title, _null, _null, G.TextOverflow_2, false, titleTextStyle, _null, _null, G.TextWidthBasis_0);
      mediaQueryData = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data;
      title = new D.MediaQuery(mediaQueryData.copyWith$1$textScaleFactor(Math.min(mediaQueryData.textScaleFactor, 1.34)), title, _null);
      t1 = _this._widget;
      actions = D.Row$(t1.actions, G.CrossAxisAlignment_3, G.MainAxisAlignment_0, H.MainAxisSize_0);
      actions = F.IconTheme_merge(actions, actionsIconTheme);
      t1 = t1._getEffectiveCenterTitle$1(theme);
      _this._widget.toString;
      t2 = appBarTheme.titleSpacing;
      if (t2 == null)
        t2 = 16;
      toolbarTextStyle.toString;
      appBar = D.ClipRect$(new F.CustomSingleChildLayout(new A._ToolbarContainerLayout(toolbarHeight), F.IconTheme_merge(D.DefaultTextStyle$(new A.NavigationToolbar(leading, title, actions, t1, t2, _null), _null, _null, G.TextOverflow_0, true, toolbarTextStyle, _null, _null, G.TextWidthBasis_0), overallIconTheme), _null), E.Clip_1);
      appBar = I.SafeArea$(false, appBar, G.EdgeInsets_0_0_0_0, true);
      t1 = D.ThemeData_estimateBrightnessForColor(backgroundColor);
      t2 = (t1 === E.Brightness_0 ? B.SystemUiOverlayStyle_6UD : B.SystemUiOverlayStyle_qsc).copyWith$1$statusBarColor(_null);
      overlayStyle = t2;
      _this._widget.toString;
      t1 = appBarTheme.shadowColor;
      if (t1 == null)
        t1 = defaults.shadowColor;
      t2 = appBarTheme.surfaceTintColor;
      if (t2 == null)
        t2 = defaults.surfaceTintColor;
      t3 = appBarTheme.shape;
      if (t3 == null)
        t3 = defaults.shape;
      return D.Semantics$(_null, new A.AnnotatedRegion(overlayStyle, D.Material$(E.Duration_200000, true, _null, D.Semantics$(_null, new D.Align(H.Alignment_0_m1, _null, _null, appBar, _null), false, _null, _null, false, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), E.Clip_0, backgroundColor, effectiveElevation, _null, t1, t3, t2, _null, G.MaterialType_0), _null, type$.AnnotatedRegion_SystemUiOverlayStyle), true, _null, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._AppBarTitleBox.prototype = {
    createRenderObject$1(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      t1 = new A._RenderAppBarTitleBox(G.Alignment_0_0, t1.textDirection, null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      renderObject.set$textDirection(t1.textDirection);
    }
  };
  A._RenderAppBarTitleBox.prototype = {
    computeDryLayout$1(constraints) {
      var innerConstraints = constraints.copyWith$1$maxHeight(1 / 0);
      return constraints.constrain$1(this.RenderObjectWithChildMixin__child.getDryLayout$1(innerConstraints));
    },
    performLayout$0() {
      var t2, _this = this,
        t1 = type$.BoxConstraints,
        innerConstraints = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).copyWith$1$maxHeight(1 / 0);
      _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(innerConstraints, true);
      t1 = t1._as(C.RenderObject.prototype.get$constraints.call(_this));
      t2 = _this.RenderObjectWithChildMixin__child._size;
      t2.toString;
      _this._size = t1.constrain$1(t2);
      _this.alignChild$0();
    }
  };
  A._AppBarDefaultsM2.prototype = {
    get$_theme() {
      var result, _this = this,
        value = _this.___AppBarDefaultsM2__theme_FI;
      if (value === $) {
        result = D.Theme_of(_this.context);
        _this.___AppBarDefaultsM2__theme_FI !== $ && C.throwUnnamedLateFieldADI();
        _this.___AppBarDefaultsM2__theme_FI = result;
        value = result;
      }
      return value;
    },
    get$_colors() {
      var t1, _this = this,
        value = _this.___AppBarDefaultsM2__colors_FI;
      if (value === $) {
        t1 = _this.get$_theme();
        _this.___AppBarDefaultsM2__colors_FI !== $ && C.throwUnnamedLateFieldADI();
        value = _this.___AppBarDefaultsM2__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$backgroundColor(_) {
      return this.get$_colors().brightness === E.Brightness_0 ? this.get$_colors().surface : this.get$_colors().primary;
    },
    get$foregroundColor() {
      return this.get$_colors().brightness === E.Brightness_0 ? this.get$_colors().onSurface : this.get$_colors().onPrimary;
    },
    get$iconTheme() {
      return this.get$_theme().iconTheme;
    },
    get$toolbarTextStyle() {
      return this.get$_theme().textTheme.bodyMedium;
    },
    get$titleTextStyle() {
      return this.get$_theme().textTheme.titleLarge;
    }
  };
  A.MaterialPointArcTween.prototype = {
    _initialize$0() {
      var t2, delta, deltaX, deltaY, distanceFromAtoB, t3, t4, c, t5, t6, t7, t8, _this = this,
        t1 = _this.begin;
      t1.toString;
      t2 = _this.end;
      t2.toString;
      delta = t2.$sub(0, t1);
      deltaX = Math.abs(delta._dx);
      deltaY = Math.abs(delta._dy);
      distanceFromAtoB = delta.get$distance();
      t3 = t2._dx;
      t4 = t1._dy;
      c = new C.Offset(t3, t4);
      t5 = new A.MaterialPointArcTween__initialize_sweepAngle(_this, distanceFromAtoB);
      if (deltaX > 2 && deltaY > 2) {
        t6 = distanceFromAtoB * distanceFromAtoB;
        t7 = t1._dx;
        t8 = t2._dy;
        if (deltaX < deltaY) {
          t1 = t6 / c.$sub(0, t1).get$distance() / 2;
          _this._arc$_radius = t1;
          _this._arc$_center = new C.Offset(t3 + t1 * J.get$sign$in(t7 - t3), t8);
          if (t7 < t3) {
            _this._beginAngle = t5.call$0() * J.get$sign$in(t4 - t8);
            _this._endAngle = 0;
          } else {
            _this._beginAngle = 3.141592653589793 + t5.call$0() * J.get$sign$in(t8 - t4);
            _this._endAngle = 3.141592653589793;
          }
        } else {
          _this._arc$_radius = t6 / c.$sub(0, t2).get$distance() / 2;
          t1 = J.get$sign$in(t8 - t4);
          t2 = _this._arc$_radius;
          t2.toString;
          _this._arc$_center = new C.Offset(t7, t4 + t1 * t2);
          if (t4 < t8) {
            _this._beginAngle = -1.5707963267948966;
            _this._endAngle = -1.5707963267948966 + t5.call$0() * J.get$sign$in(t3 - t7);
          } else {
            _this._beginAngle = 1.5707963267948966;
            _this._endAngle = 1.5707963267948966 + t5.call$0() * J.get$sign$in(t7 - t3);
          }
        }
      } else
        _this._endAngle = _this._beginAngle = null;
      _this._arc$_dirty = false;
    },
    get$center() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._arc$_center;
    },
    get$radius() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._arc$_radius;
    },
    get$beginAngle() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    get$endAngle() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    set$begin(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end(_, value) {
      if (!J.$eq$(value, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1(t) {
      var t1, t2, t3, t4, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      t1 = _this._beginAngle;
      if (t1 == null || _this._endAngle == null) {
        t1 = D.Offset_lerp(_this.begin, _this.end, t);
        t1.toString;
        return t1;
      }
      t1 = D.lerpDouble(t1, _this._endAngle, t);
      t1.toString;
      t2 = Math.cos(t1);
      t3 = _this._arc$_radius;
      t3.toString;
      t1 = Math.sin(t1);
      t4 = _this._arc$_radius;
      t4.toString;
      return _this._arc$_center.$add(0, new C.Offset(t2 * t3, t1 * t4));
    },
    toString$0(_) {
      var _this = this;
      return "MaterialPointArcTween(" + C.S(_this.begin) + " \u2192 " + C.S(_this.end) + "; center=" + C.S(_this.get$center()) + ", radius=" + C.S(_this.get$radius()) + ", beginAngle=" + C.S(_this.get$beginAngle()) + ", endAngle=" + C.S(_this.get$endAngle()) + ")";
    }
  };
  A._CornerId.prototype = {
    toString$0(_) {
      return "_CornerId." + this._core$_name;
    }
  };
  A._Diagonal.prototype = {};
  A.MaterialRectArcTween.prototype = {
    _initialize$0() {
      var t2, t3, _this = this,
        diagonal = A._maxBy(B.List_oyU, new A.MaterialRectArcTween__initialize_closure(_this, _this.end.get$center().$sub(0, _this.begin.get$center()))),
        t1 = _this.begin;
      t1.toString;
      t2 = diagonal.beginId;
      t1 = _this._cornerFor$2(t1, t2);
      t3 = _this.end;
      t3.toString;
      _this.__MaterialRectArcTween__beginArc_A = new A.MaterialPointArcTween(t1, _this._cornerFor$2(t3, t2));
      t2 = _this.begin;
      t2.toString;
      t3 = diagonal.endId;
      t2 = _this._cornerFor$2(t2, t3);
      t1 = _this.end;
      t1.toString;
      _this.__MaterialRectArcTween__endArc_A = new A.MaterialPointArcTween(t2, _this._cornerFor$2(t1, t3));
      _this._arc$_dirty = false;
    },
    _cornerFor$2(rect, id) {
      switch (id.index) {
        case 0:
          return new C.Offset(rect.left, rect.top);
        case 1:
          return new C.Offset(rect.right, rect.top);
        case 2:
          return new C.Offset(rect.left, rect.bottom);
        case 3:
          return new C.Offset(rect.right, rect.bottom);
      }
    },
    get$beginArc() {
      var t1, _this = this;
      if (_this.begin == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      t1 = _this.__MaterialRectArcTween__beginArc_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      return t1;
    },
    get$endArc() {
      var t1, _this = this;
      if (_this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      t1 = _this.__MaterialRectArcTween__endArc_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      return t1;
    },
    set$begin(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end(_, value) {
      if (!J.$eq$(value, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1(t) {
      var t1, t2, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      t1 = _this.__MaterialRectArcTween__beginArc_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1 = t1.lerp$1(t);
      t2 = _this.__MaterialRectArcTween__endArc_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      return C.Rect$fromPoints(t1, t2.lerp$1(t));
    },
    toString$0(_) {
      var _this = this;
      return "MaterialRectArcTween(" + C.S(_this.begin) + " \u2192 " + C.S(_this.end) + "; beginArc=" + C.S(_this.get$beginArc()) + ", endArc=" + C.S(_this.get$endArc()) + ")";
    }
  };
  A.BackButtonIcon.prototype = {
    build$1(context) {
      return F.Icon$(A.BackButtonIcon__getIconData(D.Theme_of(context).platform));
    }
  };
  A.BackButton.prototype = {
    build$1(context) {
      D.Localizations_of(context, G.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
      return F.IconButton$(null, B.BackButtonIcon_null, null, new A.BackButton_build_closure(this, context), "Back");
    }
  };
  A.RawMaterialButton.prototype = {
    createState$0() {
      return new A._RawMaterialButtonState(C.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState), G._StateLifecycle_0);
    }
  };
  A._RawMaterialButtonState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._widget.toString;
      this.removeMaterialState$1(H.MaterialState_6);
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      _this._widget.toString;
      _this.removeMaterialState$1(H.MaterialState_6);
      t1 = _this.MaterialStateMixin_materialStates;
      if (t1.contains$1(0, H.MaterialState_6) && t1.contains$1(0, H.MaterialState_2))
        _this.removeMaterialState$1(H.MaterialState_2);
    },
    get$_effectiveElevation() {
      var _this = this,
        t1 = _this.MaterialStateMixin_materialStates;
      if (t1.contains$1(0, H.MaterialState_6))
        return _this._widget.disabledElevation;
      if (t1.contains$1(0, H.MaterialState_2))
        return _this._widget.highlightElevation;
      if (t1.contains$1(0, H.MaterialState_0))
        return _this._widget.hoverElevation;
      if (t1.contains$1(0, H.MaterialState_1))
        return _this._widget.focusElevation;
      return _this._widget.elevation;
    },
    build$1(context) {
      var densityAdjustment, effectiveConstraints, effectiveMouseCursor, padding, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, minSize, _this = this, _null = null,
        t1 = _this._widget.textStyle,
        t2 = _this.MaterialStateMixin_materialStates,
        effectiveTextColor = F.MaterialStateProperty_resolveAs(t1.color, t2, type$.nullable_Color),
        effectiveShape = F.MaterialStateProperty_resolveAs(_this._widget.shape, t2, type$.nullable_ShapeBorder);
      _this._widget.toString;
      densityAdjustment = new C.Offset(0, 0).$mul(0, 4);
      effectiveConstraints = G.VisualDensity_0_0.effectiveConstraints$1(_this._widget.constraints);
      _this._widget.toString;
      effectiveMouseCursor = F.MaterialStateProperty_resolveAs(H._EnabledAndDisabledMouseCursor_SystemMouseCursor_click_clickable, t2, type$.nullable_MouseCursor);
      _this._widget.toString;
      t1 = densityAdjustment._dx;
      t2 = densityAdjustment._dy;
      padding = G.EdgeInsets_0_0_0_0.add$1(0, new C.EdgeInsets(t1, t2, t1, t2)).clamp$2(0, G.EdgeInsets_0_0_0_0, H._MixedEdgeInsets_QWq);
      t3 = _this.get$_effectiveElevation();
      t4 = _this._widget.textStyle.copyWith$1$color(effectiveTextColor);
      t5 = _this._widget.fillColor;
      D.Theme_of(context);
      t6 = _this._widget;
      t7 = t6.clipBehavior;
      t6 = t6.focusNode;
      t8 = _this.updateMaterialState$1(H.MaterialState_1);
      _this._widget.toString;
      t9 = _this.updateMaterialState$2$onChanged(H.MaterialState_2, _null);
      t10 = _this._widget;
      t11 = t10.splashColor;
      t12 = t10.focusColor;
      t10 = t10.hoverColor;
      t13 = _this.updateMaterialState$1(H.MaterialState_0);
      t14 = _this._widget;
      t15 = t14.onPressed;
      t4 = D.Material$(E.Duration_200000, true, _null, F.InkWell$(false, _null, true, F.IconTheme_merge(D.Container$(_null, D.Center$(t14.child, 1, 1), _null, _null, _null, _null, _null, padding, _null), new D.IconThemeData(effectiveTextColor, _null, _null, _null)), effectiveShape, true, t12, t6, _null, t10, effectiveMouseCursor, t8, t9, t13, _null, t15, _null, t11, _null, _null), t7, t5, t3, _null, _null, effectiveShape, _null, t4, G.MaterialType_3);
      switch (t14.materialTapTargetSize.index) {
        case 0:
          minSize = new C.Size(48 + t1, 48 + t2);
          break;
        case 1:
          minSize = E.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      return D.Semantics$(true, new A._InputPadding0(minSize, new D.ConstrainedBox(effectiveConstraints, t4, _null), _null), true, _null, true, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._InputPadding0.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderInputPadding0(this.minSize, null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$minSize(this.minSize);
    }
  };
  A._RenderInputPadding0.prototype = {
    set$minSize(value) {
      if (this._button$_minSize.$eq(0, value))
        return;
      this._button$_minSize = value;
      this.markNeedsLayout$0();
    },
    computeMinIntrinsicWidth$1(height) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return Math.max(t1._computeIntrinsicDimension$3(E._IntrinsicDimension_0, height, t1.get$computeMinIntrinsicWidth()), this._button$_minSize._dx);
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return Math.max(t1._computeIntrinsicDimension$3(E._IntrinsicDimension_2, width, t1.get$computeMinIntrinsicHeight()), this._button$_minSize._dy);
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return Math.max(t1._computeIntrinsicDimension$3(E._IntrinsicDimension_1, height, t1.get$computeMaxIntrinsicWidth()), this._button$_minSize._dx);
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return Math.max(t1._computeIntrinsicDimension$3(E._IntrinsicDimension_3, width, t1.get$computeMaxIntrinsicHeight()), this._button$_minSize._dy);
      return 0;
    },
    _button$_computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var childSize, t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = layoutChild.call$2(t1, constraints);
        t1 = childSize._dx;
        t2 = this._button$_minSize;
        return constraints.constrain$1(new C.Size(Math.max(t1, t2._dx), Math.max(childSize._dy, t2._dy)));
      }
      return E.Size_0_0;
    },
    computeDryLayout$1(constraints) {
      return this._button$_computeSize$2$constraints$layoutChild(constraints, D.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    performLayout$0() {
      var t2, t3, _this = this,
        t1 = _this._button$_computeSize$2$constraints$layoutChild(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)), D.layout_helper_ChildLayoutHelper_layoutChild$closure());
      _this._size = t1;
      t2 = _this.RenderObjectWithChildMixin__child;
      if (t2 != null) {
        t3 = t2.parentData;
        t3.toString;
        type$.BoxParentData._as(t3);
        t2 = t2._size;
        t2.toString;
        t3.offset = G.Alignment_0_0.alongOffset$1(type$.Offset._as(t1.$sub(0, t2)));
      }
    },
    hitTest$2$position(result, position) {
      var center;
      if (this.super$RenderBox$hitTest(result, position))
        return true;
      center = this.RenderObjectWithChildMixin__child._size.center$1(E.Offset_0_0);
      return result.addWithRawTransform$3$hitTest$position$transform(new A._RenderInputPadding_hitTest_closure0(this, center), center, F.MatrixUtils_forceToPoint(center));
    }
  };
  A.__RawMaterialButtonState_State_MaterialStateMixin.prototype = {};
  A._LerpProperties.prototype = {
    resolve$1(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A._LerpSides.prototype = {
    resolve$1(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      t1 = resolvedA == null;
      if (t1 && resolvedB == null)
        return null;
      if (t1) {
        t1 = resolvedB.color;
        return D.BorderSide_lerp(new D.BorderSide(C.Color$fromARGB(0, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255), 0, G.BorderStyle_1, G.StrokeAlign_0), resolvedB, _this.t);
      }
      if (resolvedB == null) {
        t1 = resolvedA.color;
        return D.BorderSide_lerp(resolvedA, new D.BorderSide(C.Color$fromARGB(0, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255), 0, G.BorderStyle_1, G.StrokeAlign_0), _this.t);
      }
      return D.BorderSide_lerp(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A.VerticalDivider.prototype = {
    build$1(context) {
      var indent, endIndent, _null = null,
        dividerTheme = D.DividerTheme_of(context),
        width = 1,
        thickness = dividerTheme.thickness;
      if (thickness == null)
        thickness = 0;
      indent = dividerTheme.indent;
      if (indent == null)
        indent = 0;
      endIndent = dividerTheme.endIndent;
      if (endIndent == null)
        endIndent = 0;
      return D.SizedBox$(D.Center$(D.Container$(_null, _null, _null, _null, new D.BoxDecoration(_null, _null, new D.Border(G.BorderSide_aLd, G.BorderSide_aLd, G.BorderSide_aLd, D.Divider_createBorderSide(context, _null, thickness)), _null, _null, _null, G.BoxShape_0), _null, new D.EdgeInsetsDirectional(0, indent, 0, endIndent), _null, thickness), _null, _null), _null, width);
    }
  };
  A.DrawerAlignment.prototype = {
    toString$0(_) {
      return "DrawerAlignment." + this._core$_name;
    }
  };
  A.Drawer.prototype = {
    build$1(context) {
      var label, t1, t2, _null = null,
        drawerTheme = A.DrawerTheme_of(context);
      switch (D.Theme_of(context).platform.index) {
        case 2:
        case 4:
          label = _null;
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          D.Localizations_of(context, G.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
          label = "Navigation menu";
          break;
        default:
          label = _null;
      }
      t1 = drawerTheme.width;
      if (t1 == null)
        t1 = 304;
      t2 = drawerTheme.elevation;
      if (t2 == null)
        t2 = 16;
      return D.Semantics$(_null, new D.ConstrainedBox(new C.BoxConstraints(t1, t1, 1 / 0, 1 / 0), D.Material$(E.Duration_200000, true, _null, this.child, E.Clip_0, drawerTheme.backgroundColor, t2, _null, _null, drawerTheme.shape, _null, _null, G.MaterialType_0), _null), false, _null, _null, false, true, _null, _null, _null, label, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null);
    }
  };
  A.DrawerController.prototype = {
    createState$0() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_State_StatefulWidget;
      return new A.DrawerControllerState(C.FocusScopeNode$(true, _null, false), new D.LabeledGlobalKey(_null, t1), new D.LabeledGlobalKey(_null, t1), _null, _null, G._StateLifecycle_0);
    }
  };
  A.DrawerControllerState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this.__DrawerControllerState__controller_A = D.AnimationController$(null, B.Duration_246000, null, _this._widget.isDrawerOpen ? 1 : 0, _this);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalListenersMixin__listeners;
      t2._isDirty = true;
      t2._list.push(_this.get$_animationChanged());
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t1._isDirty = true;
      t1._list.push(_this.get$_animationStatusChanged());
    },
    dispose$0() {
      var t1 = this._historyEntry;
      if (t1 != null)
        t1.remove$0(0);
      t1 = this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$_DrawerControllerState_State_SingleTickerProviderStateMixin$dispose();
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this.__DrawerControllerState__scrimColorTween_A = this._buildScrimColorTween$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3;
      this.super$State$didUpdateWidget(oldWidget);
      t1 = this._widget;
      t1 = t1.isDrawerOpen;
      if (t1 !== oldWidget.isDrawerOpen) {
        t2 = this.__DrawerControllerState__controller_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        t3 = t2.__AnimationController__status_A;
        t3 === $ && C.throwUnnamedLateFieldNI();
        switch (t3.index) {
          case 3:
          case 0:
            t2.set$value(0, t1 ? 1 : 0);
            break;
          case 1:
          case 2:
            break;
        }
      }
    },
    _animationChanged$0() {
      this.setState$1(new A.DrawerControllerState__animationChanged_closure());
    },
    _ensureHistoryEntry$0() {
      var t1, route, _this = this;
      if (_this._historyEntry == null) {
        t1 = _this._framework$_element;
        t1.toString;
        route = F.ModalRoute_of(t1, type$.nullable_Object);
        if (route != null) {
          t1 = new A.LocalHistoryEntry(_this.get$_handleHistoryEntryRemoved(), false);
          _this._historyEntry = t1;
          route.addLocalHistoryEntry$1(t1);
          t1 = _this._framework$_element;
          t1.toString;
          D.FocusScope_of(t1).setFirstFocus$1(_this._focusScopeNode);
        }
      }
    },
    _animationStatusChanged$1($status) {
      var t1;
      switch ($status.index) {
        case 1:
          this._ensureHistoryEntry$0();
          break;
        case 2:
          t1 = this._historyEntry;
          if (t1 != null)
            t1.remove$0(0);
          this._historyEntry = null;
          break;
        case 0:
          break;
        case 3:
          break;
      }
    },
    _handleHistoryEntryRemoved$0() {
      this._historyEntry = null;
      this.close$0(0);
    },
    _handleDragDown$1(details) {
      var t1 = this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.stop$0(0);
      this._ensureHistoryEntry$0();
    },
    _handleDragCancel$0() {
      var _this = this,
        t1 = _this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1.get$status(t1) !== G.AnimationStatus_0) {
        t1 = _this.__DrawerControllerState__controller_A._ticker;
        t1 = t1 != null && t1._ticker$_future != null;
      } else
        t1 = true;
      if (t1)
        return;
      t1 = _this.__DrawerControllerState__controller_A.__AnimationController__value_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1 < 0.5)
        _this.close$0(0);
      else
        _this.open$0(0);
    },
    get$_drawer$_width(_) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this._drawer$_drawerKey);
      t1 = t1 == null ? null : t1.get$renderObject();
      type$.nullable_RenderBox._as(t1);
      if (t1 != null)
        return t1._size._dx;
      return 304;
    },
    _move$1(details) {
      var delta, t2, opened, _this = this,
        t1 = details.primaryDelta;
      t1.toString;
      delta = t1 / _this.get$_drawer$_width(_this);
      switch (_this._widget.alignment.index) {
        case 0:
          break;
        case 1:
          delta = -delta;
          break;
      }
      t1 = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      switch (t1.textDirection.index) {
        case 0:
          t1 = _this.__DrawerControllerState__controller_A;
          t1 === $ && C.throwUnnamedLateFieldNI();
          t2 = t1.__AnimationController__value_A;
          t2 === $ && C.throwUnnamedLateFieldNI();
          t1.set$value(0, t2 - delta);
          break;
        case 1:
          t1 = _this.__DrawerControllerState__controller_A;
          t1 === $ && C.throwUnnamedLateFieldNI();
          t2 = t1.__AnimationController__value_A;
          t2 === $ && C.throwUnnamedLateFieldNI();
          t1.set$value(0, t2 + delta);
          break;
      }
      t1 = _this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1 = t1.__AnimationController__value_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      opened = t1 > 0.5;
      if (opened !== _this._previouslyOpened) {
        _this._widget.toString;
        t1 = true;
      } else
        t1 = false;
      if (t1)
        _this._widget.drawerCallback.call$1(opened);
      _this._previouslyOpened = opened;
    },
    _settle$1(details) {
      var visualVelocity, _this = this,
        t1 = _this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1.get$status(t1) === G.AnimationStatus_0)
        return;
      t1 = details.velocity.pixelsPerSecond._dx;
      if (Math.abs(t1) >= 365) {
        visualVelocity = t1 / _this.get$_drawer$_width(_this);
        switch (_this._widget.alignment.index) {
          case 0:
            break;
          case 1:
            visualVelocity = -visualVelocity;
            break;
        }
        t1 = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
        t1.toString;
        switch (t1.textDirection.index) {
          case 0:
            _this.__DrawerControllerState__controller_A.fling$1$velocity(-visualVelocity);
            _this._widget.drawerCallback.call$1(visualVelocity < 0);
            break;
          case 1:
            _this.__DrawerControllerState__controller_A.fling$1$velocity(visualVelocity);
            _this._widget.drawerCallback.call$1(visualVelocity > 0);
            break;
        }
      } else {
        t1 = _this.__DrawerControllerState__controller_A.__AnimationController__value_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        if (t1 < 0.5)
          _this.close$0(0);
        else
          _this.open$0(0);
      }
    },
    open$0(_) {
      var t1 = this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.fling$0();
      this._widget.drawerCallback.call$1(true);
    },
    close$0(_) {
      var t1 = this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.fling$1$velocity(-1);
      this._widget.drawerCallback.call$1(false);
    },
    _buildScrimColorTween$0() {
      this._widget.toString;
      var t1 = this._framework$_element;
      t1.toString;
      t1 = A.DrawerTheme_of(t1).scrimColor;
      return new D.ColorTween(E.Color_0, t1 == null ? G.Color_2315255808 : t1);
    },
    get$_drawerOuterAlignment() {
      switch (this._widget.alignment.index) {
        case 0:
          return G.AlignmentDirectional_m1_0;
        case 1:
          return G.AlignmentDirectional_1_0;
      }
    },
    get$_drawerInnerAlignment() {
      switch (this._widget.alignment.index) {
        case 0:
          return G.AlignmentDirectional_1_0;
        case 1:
          return G.AlignmentDirectional_m1_0;
      }
    },
    _drawer$_buildDrawer$1(context) {
      var isDesktop, dragAreaWidth, t2, platformHasBackButton, t3, t4, child, _this = this, _null = null,
        drawerIsStart = _this._widget.alignment === B.DrawerAlignment_0,
        padding = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.padding,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      switch (D.Theme_of(context).platform.index) {
        case 0:
        case 2:
        case 1:
          isDesktop = false;
          break;
        case 4:
        case 3:
        case 5:
          isDesktop = true;
          break;
        default:
          isDesktop = _null;
      }
      dragAreaWidth = _this._widget.edgeDragWidth;
      switch (t1.textDirection.index) {
        case 1:
          dragAreaWidth = 20 + (drawerIsStart ? padding.left : padding.right);
          break;
        case 0:
          dragAreaWidth = 20 + (drawerIsStart ? padding.right : padding.left);
          break;
      }
      t1 = _this.__DrawerControllerState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1 = t1.__AnimationController__status_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1 === G.AnimationStatus_0)
        if (!isDesktop) {
          t1 = _this.get$_drawerOuterAlignment();
          t2 = _this._widget.dragStartBehavior;
          return new D.Align(t1, _null, _null, F.GestureDetector$(G.HitTestBehavior_2, D.Container$(_null, _null, _null, _null, _null, _null, _null, _null, dragAreaWidth), t2, true, _this._drawer$_gestureDetectorKey, _null, _null, _null, _this.get$_settle(), _this.get$_move(), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), _null);
        } else
          return G.SizedBox_0_0_null_null;
      else {
        switch (D.Theme_of(context).platform.index) {
          case 0:
            platformHasBackButton = true;
            break;
          case 2:
          case 4:
          case 1:
          case 3:
          case 5:
            platformHasBackButton = false;
            break;
          default:
            platformHasBackButton = _null;
        }
        D.Localizations_of(context, G.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
        t1 = _this.__DrawerControllerState__scrimColorTween_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t2 = _this.__DrawerControllerState__controller_A;
        t2 = F.BlockSemantics$(new D.ExcludeSemantics(platformHasBackButton, F.GestureDetector$(_null, D.Semantics$(_null, D.Container$(_null, _null, t1.transform$1(0, t2.get$value(t2)), _null, _null, _null, _null, _null, _null), false, _null, _null, false, false, _null, _null, _null, "Dismiss", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), G.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$close(_this), _null, _null, _null, _null, _null, _null), _null));
        t1 = _this.get$_drawerOuterAlignment();
        t3 = _this.get$_drawerInnerAlignment();
        t4 = _this.__DrawerControllerState__controller_A.__AnimationController__value_A;
        t4 === $ && C.throwUnnamedLateFieldNI();
        child = new D.RepaintBoundary(D.Stack$(G.AlignmentDirectional_m1_m1, C._setArrayType([t2, new D.Align(t1, _null, _null, new D.Align(t3, t4, _null, new D.RepaintBoundary(F.FocusScope$(false, _this._widget.child, _this._drawer$_drawerKey, _this._focusScopeNode), _null), _null), _null)], type$.JSArray_Widget), G.StackFit_0, _null, _null), _null);
        if (isDesktop)
          return child;
        return F.GestureDetector$(_null, child, _this._widget.dragStartBehavior, true, _this._drawer$_gestureDetectorKey, _null, _this.get$_handleDragCancel(), _this.get$_handleDragDown(), _this.get$_settle(), _this.get$_move(), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      }
    },
    build$1(context) {
      return A.ListTileTheme_merge(this._drawer$_buildDrawer$1(context), B.ListTileStyle_1);
    }
  };
  A._DrawerControllerState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.FlexibleSpaceBarSettings.prototype = {
    updateShouldNotify$1(oldWidget) {
      var _this = this;
      return _this.toolbarOpacity !== oldWidget.toolbarOpacity || _this.minExtent !== oldWidget.minExtent || _this.maxExtent !== oldWidget.maxExtent || _this.currentExtent !== oldWidget.currentExtent || false;
    }
  };
  A._DefaultHeroTag.prototype = {
    toString$0(_) {
      return "<default FloatingActionButton tag>";
    }
  };
  A._FloatingActionButtonType.prototype = {
    toString$0(_) {
      return "_FloatingActionButtonType." + this._core$_name;
    }
  };
  A.FloatingActionButton.prototype = {
    build$1(context) {
      var backgroundColor, focusColor, hoverColor, splashColor, elevation, t2, focusElevation, hoverElevation, disabledElevation, highlightElevation, enableFeedback, iconSize, extendedTextStyle, shape, resolvedChild, sizeConstraints, padding, result, _null = null,
        theme = D.Theme_of(context),
        floatingActionButtonTheme = theme.floatingActionButtonTheme,
        t1 = this._floatingActionButtonType,
        defaults = new A._FABDefaultsM2(t1, true, D.Theme_of(context), D.Theme_of(context).colorScheme, _null, _null, _null, _null, _null, 6, 6, 8, _null, 12, _null, true, _null, B.BoxConstraints_56_56_56_56, B.BoxConstraints_40_40_40_40, B.BoxConstraints_96_96_96_96, B.BoxConstraints_CWG, 8, _null, _null),
        foregroundColor = floatingActionButtonTheme.foregroundColor;
      if (foregroundColor == null)
        foregroundColor = defaults.get$foregroundColor();
      backgroundColor = floatingActionButtonTheme.backgroundColor;
      if (backgroundColor == null)
        backgroundColor = defaults.get$backgroundColor(defaults);
      focusColor = floatingActionButtonTheme.focusColor;
      if (focusColor == null)
        focusColor = defaults.get$focusColor();
      hoverColor = floatingActionButtonTheme.hoverColor;
      if (hoverColor == null)
        hoverColor = defaults.get$hoverColor();
      splashColor = floatingActionButtonTheme.splashColor;
      if (splashColor == null)
        splashColor = defaults.get$splashColor();
      elevation = floatingActionButtonTheme.elevation;
      if (elevation == null) {
        t2 = defaults.elevation;
        t2.toString;
        elevation = t2;
      }
      focusElevation = floatingActionButtonTheme.focusElevation;
      if (focusElevation == null) {
        t2 = defaults.focusElevation;
        t2.toString;
        focusElevation = t2;
      }
      hoverElevation = floatingActionButtonTheme.hoverElevation;
      if (hoverElevation == null) {
        t2 = defaults.hoverElevation;
        t2.toString;
        hoverElevation = t2;
      }
      t2 = floatingActionButtonTheme.disabledElevation;
      disabledElevation = t2 == null ? defaults.disabledElevation : t2;
      if (disabledElevation == null)
        disabledElevation = elevation;
      highlightElevation = floatingActionButtonTheme.highlightElevation;
      if (highlightElevation == null) {
        t2 = defaults.highlightElevation;
        t2.toString;
        highlightElevation = t2;
      }
      enableFeedback = floatingActionButtonTheme.enableFeedback;
      if (enableFeedback == null) {
        t2 = defaults.enableFeedback;
        t2.toString;
        enableFeedback = t2;
      }
      iconSize = floatingActionButtonTheme.iconSize;
      if (iconSize == null)
        iconSize = defaults.get$iconSize();
      t2 = floatingActionButtonTheme.extendedTextStyle;
      extendedTextStyle = (t2 == null ? defaults.get$extendedTextStyle() : t2).copyWith$1$color(foregroundColor);
      shape = floatingActionButtonTheme.shape;
      if (shape == null)
        shape = defaults.get$shape(defaults);
      t2 = this.child;
      resolvedChild = F.IconTheme_merge(t2, new D.IconThemeData(_null, _null, iconSize, _null));
      switch (t1.index) {
        case 0:
          sizeConstraints = floatingActionButtonTheme.sizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.sizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          break;
        case 1:
          sizeConstraints = floatingActionButtonTheme.smallSizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.smallSizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          break;
        case 2:
          sizeConstraints = floatingActionButtonTheme.largeSizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.largeSizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          break;
        case 3:
          sizeConstraints = floatingActionButtonTheme.extendedSizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.extendedSizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          padding = floatingActionButtonTheme.extendedPadding;
          if (padding == null)
            padding = defaults.get$extendedPadding();
          t1 = C._setArrayType([], type$.JSArray_Widget);
          t1.push(t2);
          resolvedChild = new A._ChildOverflowBox(new D.Padding(padding, D.Row$(t1, G.CrossAxisAlignment_2, G.MainAxisAlignment_0, H.MainAxisSize_0), _null), _null);
          break;
        default:
          sizeConstraints = _null;
      }
      result = new A.RawMaterialButton(this.onPressed, _null, extendedTextStyle, backgroundColor, focusColor, hoverColor, splashColor, elevation, hoverElevation, focusElevation, highlightElevation, disabledElevation, sizeConstraints, shape, resolvedChild, theme.materialTapTargetSize, _null, false, E.Clip_0, enableFeedback, _null);
      return new A.MergeSemantics(new A.Hero(B.C__DefaultHeroTag, result, _null), _null);
    }
  };
  A._ChildOverflowBox.prototype = {
    createRenderObject$1(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      t1 = new A._RenderChildOverflowBox(G.Alignment_0_0, t1.textDirection, null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      renderObject.set$textDirection(t1.textDirection);
    }
  };
  A._RenderChildOverflowBox.prototype = {
    computeMinIntrinsicWidth$1(height) {
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      return 0;
    },
    computeDryLayout$1(constraints) {
      var childSize,
        t1 = this.RenderObjectWithChildMixin__child,
        t2 = constraints.minWidth,
        t3 = constraints.maxWidth,
        t4 = constraints.minHeight,
        t5 = constraints.maxHeight;
      if (t1 != null) {
        childSize = t1.getDryLayout$1(G.BoxConstraints_mlX);
        return new C.Size(Math.max(t2, Math.min(t3, childSize._dx)), Math.max(t4, Math.min(t5, childSize._dy)));
      } else
        return new C.Size(C.clampDouble(1 / 0, t2, t3), C.clampDouble(1 / 0, t4, t5));
    },
    performLayout$0() {
      var _this = this,
        constraints = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child,
        t2 = constraints.minWidth,
        t3 = constraints.maxWidth,
        t4 = constraints.minHeight,
        t5 = constraints.maxHeight;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(G.BoxConstraints_mlX, true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        _this._size = new C.Size(Math.max(t2, Math.min(t3, t1._dx)), Math.max(t4, Math.min(t5, t1._dy)));
        _this.alignChild$0();
      } else
        _this._size = new C.Size(C.clampDouble(1 / 0, t2, t3), C.clampDouble(1 / 0, t4, t5));
    }
  };
  A._FABDefaultsM2.prototype = {
    get$foregroundColor() {
      return this._floating_action_button$_colors.onSecondary;
    },
    get$backgroundColor(_) {
      return this._floating_action_button$_colors.secondary;
    },
    get$focusColor() {
      return this._floating_action_button$_theme.focusColor;
    },
    get$hoverColor() {
      return this._floating_action_button$_theme.hoverColor;
    },
    get$splashColor() {
      return this._floating_action_button$_theme.splashColor;
    },
    get$shape(_) {
      return this.type === B._FloatingActionButtonType_3 ? H.StadiumBorder_sAO : G.CircleBorder_Fuf;
    },
    get$iconSize() {
      return this.type === B._FloatingActionButtonType_2 ? 36 : 24;
    },
    get$extendedPadding() {
      return new D.EdgeInsetsDirectional(this.hasChild && this.type === B._FloatingActionButtonType_3 ? 16 : 20, 0, 20, 0);
    },
    get$extendedTextStyle() {
      return this._floating_action_button$_theme.textTheme.labelLarge.copyWith$1$letterSpacing(1.2);
    }
  };
  A.FloatingActionButtonLocation.prototype = {
    toString$0(_) {
      return "FloatingActionButtonLocation";
    }
  };
  A.StandardFabLocation.prototype = {
    getOffset$1(scaffoldGeometry) {
      var t1 = this.getOffsetX$2(scaffoldGeometry, 0),
        contentBottom = scaffoldGeometry.contentBottom,
        bottomSheetHeight = scaffoldGeometry.bottomSheetSize._dy,
        fabHeight = scaffoldGeometry.floatingActionButtonSize._dy,
        snackBarHeight = scaffoldGeometry.snackBarSize._dy,
        fabY = contentBottom - fabHeight - Math.max(16, scaffoldGeometry.minViewPadding.bottom - (scaffoldGeometry.scaffoldSize._dy - contentBottom) + 16);
      if (snackBarHeight > 0)
        fabY = Math.min(fabY, contentBottom - snackBarHeight - fabHeight - 16);
      return new C.Offset(t1, (bottomSheetHeight > 0 ? Math.min(fabY, contentBottom - bottomSheetHeight - fabHeight / 2) : fabY) + 0);
    }
  };
  A.FabFloatOffsetY.prototype = {};
  A.FabEndOffsetX.prototype = {
    getOffsetX$2(scaffoldGeometry, adjustment) {
      switch (scaffoldGeometry.textDirection.index) {
        case 0:
          return 16 + scaffoldGeometry.minInsets.left - adjustment;
        case 1:
          return scaffoldGeometry.scaffoldSize._dx - 16 - scaffoldGeometry.minInsets.right - scaffoldGeometry.floatingActionButtonSize._dx + adjustment;
      }
    }
  };
  A._EndFloatFabLocation.prototype = {
    toString$0(_) {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  A.FloatingActionButtonAnimator.prototype = {
    toString$0(_) {
      return "FloatingActionButtonAnimator";
    }
  };
  A._ScalingFabMotionAnimator.prototype = {
    getOffset$3$begin$end$progress(begin, end, progress) {
      if (progress < 0.5)
        return begin;
      else
        return end;
    }
  };
  A._AnimationSwap.prototype = {
    get$value(_) {
      var _this = this,
        t1 = _this.parent.__AnimationController__value_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1 < _this.swapThreshold) {
        t1 = _this.first;
        t1 = t1.get$value(t1);
      } else {
        t1 = _this.next;
        t1 = t1.get$value(t1);
      }
      return t1;
    }
  };
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX.prototype = {};
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY.prototype = {};
  A.Ink.prototype = {
    get$_ink_decoration$_paddingIncludingDecoration() {
      var t1 = this.decoration;
      if (t1 == null || t1.get$padding(t1) == null)
        return G.EdgeInsets_0_0_0_0;
      t1 = t1.get$padding(t1);
      t1.toString;
      return t1;
    },
    createState$0() {
      return new A._InkState(new D.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), G._StateLifecycle_0);
    }
  };
  A._InkState.prototype = {
    _handleRemoved$0() {
      this._ink = null;
    },
    deactivate$0() {
      var t2,
        t1 = this._ink;
      if (t1 != null) {
        t2 = t1._ink_decoration$_painter;
        if (t2 != null)
          t2.dispose$0();
        t1.super$InkFeature$dispose();
      }
      this.super$State$deactivate();
    },
    _build$1(context) {
      var t3, t4, _this = this,
        t1 = _this._ink,
        t2 = _this._widget;
      if (t1 == null) {
        t1 = t2.decoration;
        t2 = D.createLocalImageConfiguration(context);
        t3 = context.findAncestorRenderObjectOfType$1$0(type$._RenderInkFeatures);
        t3.toString;
        t4 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this._boxKey).get$renderObject();
        t4.toString;
        t4 = new A.InkDecoration(t2, t3, type$.RenderBox._as(t4), _this.get$_handleRemoved());
        t4.set$decoration(t1);
        t3.addInkFeature$1(t4);
        _this._ink = t4;
      } else {
        t1.set$decoration(t2.decoration);
        t1 = _this._ink;
        t1.toString;
        t1.set$configuration(D.createLocalImageConfiguration(context));
      }
      t1 = _this._widget.child;
      return t1;
    },
    build$1(context) {
      var _this = this,
        t1 = _this._widget.get$_ink_decoration$_paddingIncludingDecoration();
      _this._widget.toString;
      return new D.Padding(t1, new F.Builder(_this.get$_build(), null), _this._boxKey);
    }
  };
  A.InkDecoration.prototype = {
    set$decoration(value) {
      var t1, _this = this;
      if (J.$eq$(value, _this._ink_decoration$_decoration))
        return;
      _this._ink_decoration$_decoration = value;
      t1 = _this._ink_decoration$_painter;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this._ink_decoration$_decoration;
      _this._ink_decoration$_painter = t1 == null ? null : t1.createBoxPainter$1(_this.get$_handleChanged());
      _this._material$_controller.markNeedsPaint$0();
    },
    set$configuration(value) {
      if (value.$eq(0, this._ink_decoration$_configuration))
        return;
      this._ink_decoration$_configuration = value;
      this._material$_controller.markNeedsPaint$0();
    },
    _handleChanged$0() {
      this._material$_controller.markNeedsPaint$0();
    },
    paintFeature$2(canvas, transform) {
      var originOffset, t1, t2, sizedConfiguration, _this = this;
      if (_this._ink_decoration$_painter == null)
        return;
      originOffset = C.MatrixUtils_getAsTranslation(transform);
      t1 = _this._ink_decoration$_configuration;
      t2 = _this.referenceBox._size;
      t2.toString;
      sizedConfiguration = t1.copyWith$1$size(t2);
      if (originOffset == null) {
        canvas.save$0(0);
        canvas.transform$1(0, transform._m4storage);
        _this._ink_decoration$_painter.paint$3(canvas, E.Offset_0_0, sizedConfiguration);
        canvas.restore$0(0);
      } else
        _this._ink_decoration$_painter.paint$3(canvas, originOffset, sizedConfiguration);
    }
  };
  A.ListTileStyle.prototype = {
    toString$0(_) {
      return "ListTileStyle." + this._core$_name;
    }
  };
  A.ListTile.prototype = {
    _iconColor$2(theme, tileTheme) {
      var color = tileTheme.iconColor;
      if (color == null)
        color = theme.listTileTheme.iconColor;
      if (color != null)
        return color;
      switch (theme.colorScheme.brightness.index) {
        case 1:
          return H.Color_1929379840;
        case 0:
          return null;
      }
    },
    _textColor$3(theme, tileTheme, defaultColor) {
      var t1 = tileTheme.textColor;
      if (t1 == null)
        t1 = theme.listTileTheme.textColor;
      return t1 == null ? defaultColor : t1;
    },
    _isDenseLayout$2(theme, tileTheme) {
      return false;
    },
    build$1(context) {
      var textStyle, leadingAndTrailingTextStyle, leadingIcon, color, titleStyle, titleText, textDirection, resolvedContentPadding, effectiveMouseCursor, t4, t5, t6, t7, t8, _this = this, _null = null,
        theme = D.Theme_of(context),
        tileTheme = A.ListTileTheme_of(context),
        t1 = _this._iconColor$2(theme, tileTheme),
        t2 = _this.leading,
        t3 = t2 == null;
      if (!t3 || false) {
        textStyle = theme.textTheme.bodyMedium;
        leadingAndTrailingTextStyle = textStyle.copyWith$1$color(_this._textColor$3(theme, tileTheme, textStyle.color));
      } else
        leadingAndTrailingTextStyle = _null;
      if (!t3) {
        leadingAndTrailingTextStyle.toString;
        leadingIcon = D.AnimatedDefaultTextStyle$(t2, G.C__Linear, E.Duration_200000, leadingAndTrailingTextStyle);
      } else
        leadingIcon = _null;
      t2 = tileTheme.style;
      if (t2 == null)
        t2 = theme.listTileTheme.style;
      switch ((t2 == null ? B.ListTileStyle_0 : t2).index) {
        case 1:
          t2 = theme.textTheme.bodyLarge;
          t2.toString;
          textStyle = t2;
          break;
        case 0:
          t2 = theme.textTheme.titleMedium;
          t2.toString;
          textStyle = t2;
          break;
        default:
          textStyle = _null;
      }
      color = _this._textColor$3(theme, tileTheme, textStyle.color);
      _this._isDenseLayout$2(theme, tileTheme);
      titleStyle = textStyle.copyWith$1$color(color);
      titleText = D.AnimatedDefaultTextStyle$(_this.title, G.C__Linear, E.Duration_200000, titleStyle);
      t2 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t2.toString;
      textDirection = t2.textDirection;
      t2 = tileTheme.contentPadding;
      t2 = t2 == null ? _null : t2.resolve$1(textDirection);
      resolvedContentPadding = t2;
      if (resolvedContentPadding == null)
        resolvedContentPadding = G.EdgeInsets_16_0_16_0;
      t2 = C.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      t3 = _this.onTap == null && true;
      if (t3)
        t2.add$1(0, H.MaterialState_6);
      t3 = F.MaterialStateProperty_resolveAs(_null, t2, type$.nullable_MouseCursor);
      if (t3 == null)
        effectiveMouseCursor = _null;
      else
        effectiveMouseCursor = t3;
      if (effectiveMouseCursor == null)
        effectiveMouseCursor = H._EnabledAndDisabledMouseCursor_SystemMouseCursor_click_clickable.resolve$1(t2);
      t2 = tileTheme.shape;
      t3 = t2 == null ? B.Border_yXb : t2;
      t4 = tileTheme.tileColor;
      color = t4 == null ? theme.listTileTheme.tileColor : t4;
      t4 = color == null ? E.Color_0 : color;
      _this._isDenseLayout$2(theme, tileTheme);
      t5 = titleStyle.textBaseline;
      t5.toString;
      t6 = tileTheme.horizontalTitleGap;
      if (t6 == null)
        t6 = 16;
      t7 = tileTheme.minVerticalPadding;
      if (t7 == null)
        t7 = 4;
      t8 = tileTheme.minLeadingWidth;
      if (t8 == null)
        t8 = 40;
      t1 = I.SafeArea$(false, F.IconTheme_merge(new A._ListTile(leadingIcon, titleText, _null, _null, false, false, theme.visualDensity, textDirection, t5, _null, t6, t7, t8, _null), new D.IconThemeData(t1, _null, _null, _null)), resolvedContentPadding, false);
      return F.InkWell$(false, _null, true, D.Semantics$(_null, new A.Ink(t1, new A.ShapeDecoration(t4, _null, _null, _null, t3), _null), false, _null, true, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, false, _null, _null, _null, _null, _null), t2, true, _null, _null, _null, _null, effectiveMouseCursor, _null, _null, _null, _null, _this.onTap, _null, _null, _null, _null);
    }
  };
  A._ListTileSlot.prototype = {
    toString$0(_) {
      return "_ListTileSlot." + this._core$_name;
    }
  };
  A._ListTile.prototype = {
    get$slots() {
      return B.List_ml5;
    },
    childForSlot$1(slot) {
      var _this = this;
      switch (slot.index) {
        case 0:
          return _this.leading;
        case 1:
          return _this.title;
        case 2:
          return _this.subtitle;
        case 3:
          return _this.trailing;
      }
    },
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A._RenderListTile(false, _this.visualDensity, false, _this.textDirection, _this.titleBaselineType, _this.subtitleBaselineType, _this.horizontalTitleGap, _this.minVerticalPadding, _this.minLeadingWidth, C.LinkedHashMap_LinkedHashMap$_empty(type$._ListTileSlot, type$.RenderBox), C.LayerHandle$());
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      renderObject.set$isThreeLine(false);
      renderObject.set$isDense(false);
      renderObject.set$visualDensity(_this.visualDensity);
      renderObject.set$textDirection(_this.textDirection);
      renderObject.set$titleBaselineType(_this.titleBaselineType);
      renderObject.set$subtitleBaselineType(_this.subtitleBaselineType);
      renderObject.set$horizontalTitleGap(_this.horizontalTitleGap);
      renderObject.set$minLeadingWidth(_this.minLeadingWidth);
      renderObject.set$minVerticalPadding(_this.minVerticalPadding);
    }
  };
  A._RenderListTile.prototype = {
    get$children(_) {
      var t3,
        t1 = C._setArrayType([], type$.JSArray_RenderBox),
        t2 = this.SlottedContainerRenderObjectMixin__slotToChild;
      if (t2.$index(0, B._ListTileSlot_0) != null) {
        t3 = t2.$index(0, B._ListTileSlot_0);
        t3.toString;
        t1.push(t3);
      }
      if (t2.$index(0, B._ListTileSlot_1) != null) {
        t3 = t2.$index(0, B._ListTileSlot_1);
        t3.toString;
        t1.push(t3);
      }
      if (t2.$index(0, B._ListTileSlot_2) != null) {
        t3 = t2.$index(0, B._ListTileSlot_2);
        t3.toString;
        t1.push(t3);
      }
      if (t2.$index(0, B._ListTileSlot_3) != null) {
        t2 = t2.$index(0, B._ListTileSlot_3);
        t2.toString;
        t1.push(t2);
      }
      return t1;
    },
    set$isDense(value) {
      return;
    },
    set$visualDensity(value) {
      if (this._visualDensity.$eq(0, value))
        return;
      this._visualDensity = value;
      this.markNeedsLayout$0();
    },
    set$isThreeLine(value) {
      return;
    },
    set$textDirection(value) {
      if (this._list_tile$_textDirection === value)
        return;
      this._list_tile$_textDirection = value;
      this.markNeedsLayout$0();
    },
    set$titleBaselineType(value) {
      if (this._titleBaselineType === value)
        return;
      this._titleBaselineType = value;
      this.markNeedsLayout$0();
    },
    set$subtitleBaselineType(value) {
      if (this._subtitleBaselineType == value)
        return;
      this._subtitleBaselineType = value;
      this.markNeedsLayout$0();
    },
    get$_effectiveHorizontalTitleGap() {
      return this._horizontalTitleGap + this._visualDensity.horizontal * 2;
    },
    set$horizontalTitleGap(value) {
      if (this._horizontalTitleGap === value)
        return;
      this._horizontalTitleGap = value;
      this.markNeedsLayout$0();
    },
    set$minVerticalPadding(value) {
      if (this._minVerticalPadding === value)
        return;
      this._minVerticalPadding = value;
      this.markNeedsLayout$0();
    },
    set$minLeadingWidth(value) {
      if (this._minLeadingWidth === value)
        return;
      this._minLeadingWidth = value;
      this.markNeedsLayout$0();
    },
    get$sizedByParent() {
      return false;
    },
    computeMinIntrinsicWidth$1(height) {
      var t2, leadingWidth, t3,
        t1 = this.SlottedContainerRenderObjectMixin__slotToChild;
      if (t1.$index(0, B._ListTileSlot_0) != null) {
        t2 = t1.$index(0, B._ListTileSlot_0);
        leadingWidth = Math.max(t2._computeIntrinsicDimension$3(E._IntrinsicDimension_0, height, t2.get$computeMinIntrinsicWidth()), this._minLeadingWidth) + this.get$_effectiveHorizontalTitleGap();
      } else
        leadingWidth = 0;
      t2 = t1.$index(0, B._ListTileSlot_1);
      t2 = t2 == null ? 0 : t2._computeIntrinsicDimension$3(E._IntrinsicDimension_0, height, t2.get$computeMinIntrinsicWidth());
      t3 = t1.$index(0, B._ListTileSlot_2);
      t3 = t3 == null ? 0 : t3._computeIntrinsicDimension$3(E._IntrinsicDimension_0, height, t3.get$computeMinIntrinsicWidth());
      t3 = Math.max(t2, t3);
      t1 = t1.$index(0, B._ListTileSlot_3);
      t1 = t1 == null ? 0 : t1._computeIntrinsicDimension$3(E._IntrinsicDimension_1, height, t1.get$computeMaxIntrinsicWidth());
      return leadingWidth + t3 + t1;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t2, leadingWidth, t3,
        t1 = this.SlottedContainerRenderObjectMixin__slotToChild;
      if (t1.$index(0, B._ListTileSlot_0) != null) {
        t2 = t1.$index(0, B._ListTileSlot_0);
        leadingWidth = Math.max(t2._computeIntrinsicDimension$3(E._IntrinsicDimension_1, height, t2.get$computeMaxIntrinsicWidth()), this._minLeadingWidth) + this.get$_effectiveHorizontalTitleGap();
      } else
        leadingWidth = 0;
      t2 = t1.$index(0, B._ListTileSlot_1);
      t2 = t2 == null ? 0 : t2._computeIntrinsicDimension$3(E._IntrinsicDimension_1, height, t2.get$computeMaxIntrinsicWidth());
      t3 = t1.$index(0, B._ListTileSlot_2);
      t3 = t3 == null ? 0 : t3._computeIntrinsicDimension$3(E._IntrinsicDimension_1, height, t3.get$computeMaxIntrinsicWidth());
      t3 = Math.max(t2, t3);
      t1 = t1.$index(0, B._ListTileSlot_3);
      t1 = t1 == null ? 0 : t1._computeIntrinsicDimension$3(E._IntrinsicDimension_1, height, t1.get$computeMaxIntrinsicWidth());
      return leadingWidth + t3 + t1;
    },
    get$_defaultTileHeight() {
      var t1 = this.SlottedContainerRenderObjectMixin__slotToChild.$index(0, B._ListTileSlot_2),
        t2 = this._visualDensity,
        baseDensity = new C.Offset(t2.horizontal, t2.vertical).$mul(0, 4);
      if (t1 == null)
        return 56 + baseDensity._dy;
      return 72 + baseDensity._dy;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1 = this.get$_defaultTileHeight(),
        t2 = this.SlottedContainerRenderObjectMixin__slotToChild,
        t3 = t2.$index(0, B._ListTileSlot_1);
      t3 = t3._computeIntrinsicDimension$3(E._IntrinsicDimension_2, width, t3.get$computeMinIntrinsicHeight());
      t2 = t2.$index(0, B._ListTileSlot_2);
      t2 = t2 == null ? null : t2._computeIntrinsicDimension$3(E._IntrinsicDimension_2, width, t2.get$computeMinIntrinsicHeight());
      return Math.max(t1, t3 + (t2 == null ? 0 : t2));
    },
    computeMaxIntrinsicHeight$1(width) {
      return this.computeMinIntrinsicHeight$1(width);
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1 = this.SlottedContainerRenderObjectMixin__slotToChild,
        t2 = t1.$index(0, B._ListTileSlot_1).parentData;
      t2.toString;
      t2 = type$.BoxParentData._as(t2).offset;
      t1 = t1.$index(0, B._ListTileSlot_1).getDistanceToActualBaseline$1(baseline);
      t1.toString;
      return t2._dy + t1;
    },
    computeDryLayout$1(constraints) {
      return E.Size_0_0;
    },
    performLayout$0() {
      var looseConstraints, iconConstraints, leadingSize, trailingSize, titleStart, adjustedTrailingWidth, textConstraints, titleSize, subtitleSize, titleBaseline, subtitleBaseline, defaultTileHeight, t4, tileHeight, titleY, subtitleY, t5, titleOverlap, titleY0, leadingY, trailingY, _this = this,
        constraints = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.SlottedContainerRenderObjectMixin__slotToChild,
        hasLeading = t1.$index(0, B._ListTileSlot_0) != null,
        t2 = t1.$index(0, B._ListTileSlot_2) == null,
        hasSubtitle = !t2,
        hasTrailing = t1.$index(0, B._ListTileSlot_3) != null,
        t3 = _this._visualDensity,
        densityAdjustment = new C.Offset(t3.horizontal, t3.vertical).$mul(0, 4);
      t3 = constraints.maxWidth;
      looseConstraints = new C.BoxConstraints(0, t3, 0, constraints.maxHeight);
      iconConstraints = looseConstraints.enforce$1(new C.BoxConstraints(0, 1 / 0, 0, 56 + densityAdjustment._dy));
      leadingSize = A._RenderListTile__layoutBox(t1.$index(0, B._ListTileSlot_0), iconConstraints);
      trailingSize = A._RenderListTile__layoutBox(t1.$index(0, B._ListTileSlot_3), iconConstraints);
      titleStart = hasLeading ? Math.max(_this._minLeadingWidth, leadingSize._dx) + _this.get$_effectiveHorizontalTitleGap() : 0;
      adjustedTrailingWidth = hasTrailing ? Math.max(trailingSize._dx + _this.get$_effectiveHorizontalTitleGap(), 32) : 0;
      textConstraints = looseConstraints.tighten$1$width(t3 - titleStart - adjustedTrailingWidth);
      titleSize = A._RenderListTile__layoutBox(t1.$index(0, B._ListTileSlot_1), textConstraints);
      subtitleSize = A._RenderListTile__layoutBox(t1.$index(0, B._ListTileSlot_2), textConstraints);
      if (hasSubtitle) {
        titleBaseline = 32;
        subtitleBaseline = 52;
      } else {
        titleBaseline = null;
        subtitleBaseline = null;
      }
      defaultTileHeight = _this.get$_defaultTileHeight();
      t4 = titleSize._dy;
      if (t2) {
        tileHeight = Math.max(defaultTileHeight, t4 + 2 * _this._minVerticalPadding);
        titleY = (tileHeight - t4) / 2;
        subtitleY = null;
      } else {
        titleBaseline.toString;
        t2 = t1.$index(0, B._ListTileSlot_1).getDistanceToBaseline$1(_this._titleBaselineType);
        t2.toString;
        titleY = titleBaseline - t2;
        subtitleBaseline.toString;
        t2 = t1.$index(0, B._ListTileSlot_2);
        t2.toString;
        t5 = _this._subtitleBaselineType;
        t5.toString;
        t5 = t2.getDistanceToBaseline$1(t5);
        t5.toString;
        subtitleY = subtitleBaseline - t5 + _this._visualDensity.vertical * 2;
        titleOverlap = titleY + t4 - subtitleY;
        if (titleOverlap > 0) {
          t2 = titleOverlap / 2;
          titleY -= t2;
          subtitleY += t2;
        }
        titleY0 = _this._minVerticalPadding;
        if (titleY < titleY0 || subtitleY + subtitleSize._dy + titleY0 > defaultTileHeight) {
          tileHeight = t4 + subtitleSize._dy + 2 * titleY0;
          subtitleY = t4 + titleY0;
          titleY = titleY0;
        } else
          tileHeight = defaultTileHeight;
      }
      if (tileHeight > 72) {
        leadingY = 16;
        trailingY = 16;
      } else {
        leadingY = Math.min((tileHeight - leadingSize._dy) / 2, 16);
        trailingY = (tileHeight - trailingSize._dy) / 2;
      }
      switch (_this._list_tile$_textDirection.index) {
        case 0:
          if (hasLeading) {
            t2 = t1.$index(0, B._ListTileSlot_0).parentData;
            t2.toString;
            type$.BoxParentData._as(t2).offset = new C.Offset(t3 - leadingSize._dx, leadingY);
          }
          t2 = t1.$index(0, B._ListTileSlot_1).parentData;
          t2.toString;
          t4 = type$.BoxParentData;
          t4._as(t2).offset = new C.Offset(adjustedTrailingWidth, titleY);
          if (hasSubtitle) {
            t2 = t1.$index(0, B._ListTileSlot_2);
            t2.toString;
            subtitleY.toString;
            t2 = t2.parentData;
            t2.toString;
            t4._as(t2).offset = new C.Offset(adjustedTrailingWidth, subtitleY);
          }
          if (hasTrailing) {
            t1 = t1.$index(0, B._ListTileSlot_3).parentData;
            t1.toString;
            t4._as(t1).offset = new C.Offset(0, trailingY);
          }
          break;
        case 1:
          if (hasLeading) {
            t2 = t1.$index(0, B._ListTileSlot_0).parentData;
            t2.toString;
            type$.BoxParentData._as(t2).offset = new C.Offset(0, leadingY);
          }
          t2 = t1.$index(0, B._ListTileSlot_1).parentData;
          t2.toString;
          t4 = type$.BoxParentData;
          t4._as(t2).offset = new C.Offset(titleStart, titleY);
          if (hasSubtitle) {
            t2 = t1.$index(0, B._ListTileSlot_2);
            t2.toString;
            subtitleY.toString;
            t2 = t2.parentData;
            t2.toString;
            t4._as(t2).offset = new C.Offset(titleStart, subtitleY);
          }
          if (hasTrailing) {
            t1 = t1.$index(0, B._ListTileSlot_3).parentData;
            t1.toString;
            t4._as(t1).offset = new C.Offset(t3 - trailingSize._dx, trailingY);
          }
          break;
      }
      _this._size = constraints.constrain$1(new C.Size(t3, tileHeight));
    },
    paint$2(context, offset) {
      var t1 = new A._RenderListTile_paint_doPaint(context, offset),
        t2 = this.SlottedContainerRenderObjectMixin__slotToChild;
      t1.call$1(t2.$index(0, B._ListTileSlot_0));
      t1.call$1(t2.$index(0, B._ListTileSlot_1));
      t1.call$1(t2.$index(0, B._ListTileSlot_2));
      t1.call$1(t2.$index(0, B._ListTileSlot_3));
    },
    hitTestSelf$1(position) {
      return true;
    },
    hitTestChildren$2$position(result, position) {
      var t1, t2, t3, _i, child, t4;
      for (t1 = this.get$children(this), t2 = t1.length, t3 = type$.BoxParentData, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t4 = child.parentData;
        t4.toString;
        t3._as(t4);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new A._RenderListTile_hitTestChildren_closure(position, t4, child), t4.offset, position))
          return true;
      }
      return false;
    }
  };
  A.__ListTile_RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin.prototype = {
    updateRenderObject$2(context, renderObject) {
      return this.super$RenderObjectWidget$updateRenderObject(context, renderObject);
    }
  };
  A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var t1, t2, _i;
      this.super$RenderObject$attach(owner);
      for (t1 = this.get$children(this), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].attach$1(owner);
    },
    detach$0(_) {
      var t1, t2, _i;
      this.super$AbstractNode$detach(0);
      for (t1 = this.get$children(this), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].detach$0(0);
    }
  };
  A.ListTileTheme.prototype = {
    get$data(_) {
      return this._list_tile_theme$_data;
    },
    wrap$2(_, context, child) {
      var t1 = this._list_tile_theme$_data;
      return A.ListTileTheme$(child, A.ListTileThemeData$(t1.contentPadding, t1.dense, t1.enableFeedback, t1.horizontalTitleGap, t1.iconColor, t1.minLeadingWidth, t1.minVerticalPadding, null, t1.selectedColor, t1.selectedTileColor, t1.shape, t1.style, t1.textColor, t1.tileColor, null), null);
    },
    updateShouldNotify$1(oldWidget) {
      return !this.get$data(this).$eq(0, oldWidget.get$data(oldWidget));
    }
  };
  A._MaterialLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return locale.get$languageCode(locale) === "en";
    },
    load$1(_, locale) {
      return new C.SynchronousFuture(B.C_DefaultMaterialLocalizations, type$.SynchronousFuture_MaterialLocalizations);
    },
    shouldReload$1(old) {
      return false;
    },
    toString$0(_) {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  A.DefaultMaterialLocalizations.prototype = {
    get$popupMenuLabel() {
      return "Popup menu";
    },
    get$alertDialogLabel() {
      return "Alert";
    },
    get$modalBarrierDismissLabel() {
      return "Dismiss";
    },
    get$scriptCategory() {
      return G.ScriptCategory_0;
    },
    $isMaterialLocalizations: 1
  };
  A._LerpProperties0.prototype = {
    resolve$1(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A.MaterialStateMixin.prototype = {
    updateMaterialState$2$onChanged(key, onChanged) {
      return new A.MaterialStateMixin_updateMaterialState_closure(this, key, onChanged);
    },
    updateMaterialState$1(key) {
      return this.updateMaterialState$2$onChanged(key, null);
    },
    addMaterialState$1(state) {
      if (this.MaterialStateMixin_materialStates.add$1(0, state))
        this.setState$1(new A.MaterialStateMixin_addMaterialState_closure());
    },
    removeMaterialState$1(state) {
      if (this.MaterialStateMixin_materialStates.remove$1(0, state))
        this.setState$1(new A.MaterialStateMixin_removeMaterialState_closure());
    }
  };
  A.MaterialPageRoute.prototype = {
    get$debugLabel() {
      return F.TransitionRoute.prototype.get$debugLabel.call(this) + "(" + C.S(this._settings.name) + ")";
    },
    get$maintainState() {
      return true;
    }
  };
  A.MaterialRouteTransitionMixin.prototype = {
    get$transitionDuration(_) {
      return E.Duration_300000;
    },
    get$barrierColor() {
      return null;
    },
    get$barrierLabel() {
      return null;
    },
    canTransitionTo$1(nextRoute) {
      var t1;
      if (!(type$.MaterialRouteTransitionMixin_dynamic._is(nextRoute) && true))
        t1 = false;
      else
        t1 = true;
      return t1;
    },
    buildPage$3(context, animation, secondaryAnimation) {
      var _null = null;
      return D.Semantics$(_null, this.builder.call$1(context), false, _null, _null, false, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null);
    },
    buildTransitions$4(context, animation, secondaryAnimation, child) {
      var platform, matchingBuilder;
      D.Theme_of(context);
      platform = D.Theme_of(context).platform;
      matchingBuilder = G.Map_DVCx1.$index(0, this._navigator.userGestureInProgressNotifier._change_notifier$_value ? E.TargetPlatform_2 : platform);
      if (matchingBuilder == null)
        matchingBuilder = G.C_ZoomPageTransitionsBuilder;
      return matchingBuilder.buildTransitions$1$5(this, context, animation, secondaryAnimation, child, this.$ti._precomputed1);
    }
  };
  A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin.prototype = {};
  A._ScaffoldSlot.prototype = {
    toString$0(_) {
      return "_ScaffoldSlot." + this._core$_name;
    }
  };
  A.ScaffoldMessenger.prototype = {
    createState$0() {
      var _null = null;
      return new A.ScaffoldMessengerState(C.LinkedHashSet_LinkedHashSet(type$.ScaffoldState), C.ListQueue$(_null, type$.ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason), C.ListQueue$(_null, type$.ScaffoldFeatureController_SnackBar_SnackBarClosedReason), _null, _null, G._StateLifecycle_0);
    }
  };
  A.ScaffoldMessengerState.prototype = {
    didChangeDependencies$0() {
      var _this = this,
        mediaQuery = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data,
        t1 = _this._accessibleNavigation;
      if (t1 === true)
        if (!mediaQuery.accessibleNavigation) {
          t1 = _this._snackBarTimer;
          t1 = t1 != null && t1._handle == null;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1)
        _this.hideCurrentSnackBar$1$reason(B.SnackBarClosedReason_5);
      _this._accessibleNavigation = mediaQuery.accessibleNavigation;
      _this.super$State$didChangeDependencies();
    },
    hideCurrentSnackBar$1$reason(reason) {
      var t2, completer, _this = this, _null = null,
        t1 = _this._snackBars;
      if (t1._head !== t1._tail) {
        _null.get$status(_null);
        t2 = false;
      } else
        t2 = true;
      if (t2)
        return;
      completer = t1.get$first(t1)._scaffold$_completer;
      t1 = _this._accessibleNavigation;
      t1.toString;
      if (t1) {
        _null.set$value(0, 0);
        completer.complete$1(0, reason);
      } else
        _null.reverse$0(0).then$1$1(new A.ScaffoldMessengerState_hideCurrentSnackBar_closure(_this, completer, reason), type$.void);
      t1 = _this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._snackBarTimer = null;
    },
    build$1(context) {
      var t1, route, _this = this;
      _this._accessibleNavigation = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.accessibleNavigation;
      t1 = _this._snackBars;
      if (!t1.get$isEmpty(t1)) {
        route = F.ModalRoute_of(context, type$.nullable_Object);
        if (route == null || route.get$isCurrent())
          null.get$isCompleted();
      }
      return new A._ScaffoldMessengerScope(_this, _this._widget.child, null);
    },
    dispose$0() {
      var t1 = this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._snackBarTimer = null;
      this.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose();
    }
  };
  A._ScaffoldMessengerScope.prototype = {
    updateShouldNotify$1(old) {
      return this._scaffoldMessengerState !== old._scaffoldMessengerState;
    }
  };
  A.ScaffoldPrelayoutGeometry.prototype = {};
  A.ScaffoldGeometry.prototype = {
    copyWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea) {
      var t1 = bottomNavigationBarTop == null ? this.bottomNavigationBarTop : bottomNavigationBarTop;
      return new A.ScaffoldGeometry(t1, floatingActionButtonArea == null ? this.floatingActionButtonArea : floatingActionButtonArea);
    }
  };
  A._ScaffoldGeometryNotifier.prototype = {
    _updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, floatingActionButtonScale) {
      var _this = this;
      _this.floatingActionButtonScale = floatingActionButtonScale == null ? _this.floatingActionButtonScale : floatingActionButtonScale;
      _this.geometry = _this.geometry.copyWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea);
      _this.notifyListeners$0();
    },
    _updateWith$1$floatingActionButtonScale(floatingActionButtonScale) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(null, null, floatingActionButtonScale);
    },
    _updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, null);
    }
  };
  A._BodyBoxConstraints.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!_this.super$BoxConstraints$$eq(0, other))
        return false;
      return other instanceof A._BodyBoxConstraints && other.materialBannerHeight === _this.materialBannerHeight && other.bottomWidgetsHeight === _this.bottomWidgetsHeight && other.appBarHeight === _this.appBarHeight;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.BoxConstraints.prototype.get$hashCode.call(_this, _this), _this.materialBannerHeight, _this.bottomWidgetsHeight, _this.appBarHeight, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue);
    }
  };
  A._BodyBuilder.prototype = {
    build$1(context) {
      return this.body;
    }
  };
  A._ScaffoldLayout.prototype = {
    performLayout$1(size) {
      var appBarHeight, contentTop, bottomWidgetsHeight, bottomNavigationBarTop, materialBannerSize, t2, contentBottom, bodyMaxHeight, t3, snackBarSize, bottomSheetSize, floatingActionButtonRect, fabSize, currentGeometry, currentFabOffset, fabOffset, snackBarYOffsetBase, _this = this,
        looseConstraints = F.BoxConstraints$loose(size),
        t1 = size._dx,
        fullWidthConstraints = looseConstraints.tighten$1$width(t1),
        bottom = size._dy;
      if (_this._idToChild.$index(0, B._ScaffoldSlot_1) != null) {
        appBarHeight = _this.layoutChild$2(B._ScaffoldSlot_1, fullWidthConstraints)._dy;
        _this.positionChild$2(B._ScaffoldSlot_1, E.Offset_0_0);
        contentTop = appBarHeight;
      } else {
        contentTop = 0;
        appBarHeight = 0;
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_7) != null) {
        bottomWidgetsHeight = 0 + _this.layoutChild$2(B._ScaffoldSlot_7, fullWidthConstraints)._dy;
        bottomNavigationBarTop = Math.max(0, bottom - bottomWidgetsHeight);
        _this.positionChild$2(B._ScaffoldSlot_7, new C.Offset(0, bottomNavigationBarTop));
      } else {
        bottomWidgetsHeight = 0;
        bottomNavigationBarTop = null;
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_6) != null) {
        bottomWidgetsHeight += _this.layoutChild$2(B._ScaffoldSlot_6, new C.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, bottom - bottomWidgetsHeight - contentTop)))._dy;
        _this.positionChild$2(B._ScaffoldSlot_6, new C.Offset(0, Math.max(0, bottom - bottomWidgetsHeight)));
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_5) != null) {
        materialBannerSize = _this.layoutChild$2(B._ScaffoldSlot_5, fullWidthConstraints);
        _this.positionChild$2(B._ScaffoldSlot_5, new C.Offset(0, appBarHeight));
        if (!_this.extendBodyBehindMaterialBanner)
          contentTop += materialBannerSize._dy;
      } else
        materialBannerSize = E.Size_0_0;
      t2 = _this.minInsets;
      contentBottom = Math.max(0, bottom - Math.max(t2.bottom, bottomWidgetsHeight));
      if (_this._idToChild.$index(0, B._ScaffoldSlot_0) != null) {
        bodyMaxHeight = Math.max(0, contentBottom - contentTop);
        t3 = _this.extendBody;
        if (t3)
          bodyMaxHeight = C.clampDouble(bodyMaxHeight + bottomWidgetsHeight, 0, looseConstraints.maxHeight - contentTop);
        t3 = t3 ? bottomWidgetsHeight : 0;
        _this.layoutChild$2(B._ScaffoldSlot_0, new A._BodyBoxConstraints(t3, appBarHeight, materialBannerSize._dy, 0, fullWidthConstraints.maxWidth, 0, bodyMaxHeight));
        _this.positionChild$2(B._ScaffoldSlot_0, new C.Offset(0, contentTop));
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_2) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_2, new C.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, contentBottom));
        _this.positionChild$2(B._ScaffoldSlot_2, E.Offset_0_0);
      }
      snackBarSize = _this._idToChild.$index(0, B._ScaffoldSlot_4) != null && !_this.isSnackBarFloating ? _this.layoutChild$2(B._ScaffoldSlot_4, fullWidthConstraints) : E.Size_0_0;
      if (_this._idToChild.$index(0, B._ScaffoldSlot_3) != null) {
        bottomSheetSize = _this.layoutChild$2(B._ScaffoldSlot_3, new C.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, contentBottom - contentTop)));
        _this.positionChild$2(B._ScaffoldSlot_3, new C.Offset((t1 - bottomSheetSize._dx) / 2, contentBottom - bottomSheetSize._dy));
      } else
        bottomSheetSize = E.Size_0_0;
      floatingActionButtonRect = C._Cell$named("floatingActionButtonRect");
      if (_this._idToChild.$index(0, B._ScaffoldSlot_8) != null) {
        fabSize = _this.layoutChild$2(B._ScaffoldSlot_8, looseConstraints);
        currentGeometry = new A.ScaffoldPrelayoutGeometry(fabSize, bottomSheetSize, contentBottom, t2, _this.minViewPadding, size, snackBarSize, _this.textDirection);
        currentFabOffset = _this.currentFloatingActionButtonLocation.getOffset$1(currentGeometry);
        fabOffset = _this.floatingActionButtonMotionAnimator.getOffset$3$begin$end$progress(_this.previousFloatingActionButtonLocation.getOffset$1(currentGeometry), currentFabOffset, _this.floatingActionButtonMoveAnimationProgress);
        _this.positionChild$2(B._ScaffoldSlot_8, fabOffset);
        t1 = fabOffset._dx;
        t3 = fabOffset._dy;
        floatingActionButtonRect.__late_helper$_value = new C.Rect(t1, t3, t1 + fabSize._dx, t3 + fabSize._dy);
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_4) != null) {
        if (snackBarSize.$eq(0, E.Size_0_0))
          snackBarSize = _this.layoutChild$2(B._ScaffoldSlot_4, fullWidthConstraints);
        t1 = floatingActionButtonRect._readLocal$0();
        if (!new C.Size(t1.right - t1.left, t1.bottom - t1.top).$eq(0, E.Size_0_0) && _this.isSnackBarFloating)
          snackBarYOffsetBase = floatingActionButtonRect._readLocal$0().top;
        else
          snackBarYOffsetBase = _this.isSnackBarFloating ? Math.min(contentBottom, bottom - _this.minViewPadding.bottom) : contentBottom;
        _this.positionChild$2(B._ScaffoldSlot_4, new C.Offset(0, snackBarYOffsetBase - snackBarSize._dy));
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_11) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_11, fullWidthConstraints.tighten$1$height(t2.top));
        _this.positionChild$2(B._ScaffoldSlot_11, E.Offset_0_0);
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_9) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_9, C.BoxConstraints$tight(size));
        _this.positionChild$2(B._ScaffoldSlot_9, E.Offset_0_0);
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_10) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_10, C.BoxConstraints$tight(size));
        _this.positionChild$2(B._ScaffoldSlot_10, E.Offset_0_0);
      }
      _this.geometryNotifier._updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonRect._readLocal$0());
    },
    shouldRelayout$1(oldDelegate) {
      var _this = this;
      return !oldDelegate.minInsets.$eq(0, _this.minInsets) || !oldDelegate.minViewPadding.$eq(0, _this.minViewPadding) || oldDelegate.textDirection !== _this.textDirection || oldDelegate.floatingActionButtonMoveAnimationProgress !== _this.floatingActionButtonMoveAnimationProgress || oldDelegate.previousFloatingActionButtonLocation !== _this.previousFloatingActionButtonLocation || oldDelegate.currentFloatingActionButtonLocation !== _this.currentFloatingActionButtonLocation || oldDelegate.extendBody !== _this.extendBody || false;
    }
  };
  A._FloatingActionButtonTransition.prototype = {
    createState$0() {
      return new A._FloatingActionButtonTransitionState(null, null, G._StateLifecycle_0);
    }
  };
  A._FloatingActionButtonTransitionState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = D.AnimationController$(null, E.Duration_200000, null, null, _this);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t2._isDirty = true;
      t2._list.push(_this.get$_handlePreviousAnimationStatusChanged());
      _this.___FloatingActionButtonTransitionState__previousController_A = t1;
      _this._updateAnimations$0();
      _this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(0);
    },
    dispose$0() {
      var t1 = this.___FloatingActionButtonTransitionState__previousController_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
      return;
    },
    _updateAnimations$0() {
      var previousExitScaleAnimation, t2, currentEntranceScaleAnimation, t3, t4, t5, t6, t7, t8, t9, t10, moveScaleAnimation, t11, t12, moveRotationAnimation, _this = this, _null = null,
        t1 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      previousExitScaleAnimation = D.CurvedAnimation$(B.Cubic_JUR0, t1, _null);
      t1 = type$.Tween_double;
      t2 = D.CurvedAnimation$(B.Cubic_JUR0, _this.___FloatingActionButtonTransitionState__previousController_A, _null);
      currentEntranceScaleAnimation = D.CurvedAnimation$(B.Cubic_JUR0, _this._widget.currentController, _null);
      t3 = _this._widget;
      t4 = t3.currentController;
      t5 = $.$get$_FloatingActionButtonTransitionState__entranceTurnTween();
      t6 = type$.Animation_double;
      t6._as(t4);
      t3 = t3.fabMoveAnimation;
      t6._as(t3);
      t7 = type$.CurveTween._eval$1("_AnimatedEvaluation<Animatable.T>");
      t8 = type$.JSArray_of_void_Function_AnimationStatus;
      t9 = type$.ObserverList_of_void_Function_AnimationStatus;
      t10 = type$.double;
      moveScaleAnimation = A._AnimationSwap$(new D.ReverseAnimation(new D._AnimatedEvaluation(t3, new D.CurveTween(new C.FlippedCurve(B.Interval_E4y)), t7), new D.ObserverList(C._setArrayType([], t8), t9), 0), new D._AnimatedEvaluation(t3, new D.CurveTween(B.Interval_E4y), t7), t3, 0.5, t10);
      t3 = _this._widget.fabMoveAnimation;
      t11 = $.$get$_ScalingFabMotionAnimator__rotationTween();
      t6._as(t3);
      t12 = $.$get$_ScalingFabMotionAnimator__thresholdCenterTween();
      moveRotationAnimation = A._AnimationSwap$(new D._AnimatedEvaluation(t3, t11, t11.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new D.ReverseAnimation(new D._AnimatedEvaluation(t3, t12, C._instanceType(t12)._eval$1("_AnimatedEvaluation<Animatable.T>")), new D.ObserverList(C._setArrayType([], t8), t9), 0), t3, 0.5, t10);
      _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A = A.AnimationMin$(moveScaleAnimation, previousExitScaleAnimation, t10);
      t10 = A.AnimationMin$(moveScaleAnimation, currentEntranceScaleAnimation, t10);
      _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A = t10;
      _this.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A = new D._AnimatedEvaluation(t6._as(t10), new D.CurveTween(B.Interval_75R), t7);
      _this.___FloatingActionButtonTransitionState__previousRotationAnimation_A = F.TrainHoppingAnimation$(new D._AnimatedEvaluation(t2, new D.Tween(1, 1, t1), t1._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null);
      _this.___FloatingActionButtonTransitionState__currentRotationAnimation_A = F.TrainHoppingAnimation$(new D._AnimatedEvaluation(t4, t5, t5.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null);
      t5 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t4 = _this.get$_onProgressChanged();
      t5.didRegisterListener$0();
      t5 = t5.AnimationLocalListenersMixin__listeners;
      t5._isDirty = true;
      t5._list.push(t4);
      t5 = _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
      t5.didRegisterListener$0();
      t5 = t5.AnimationLocalListenersMixin__listeners;
      t5._isDirty = true;
      t5._list.push(t4);
    },
    _handlePreviousAnimationStatusChanged$1($status) {
      this.setState$1(new A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(this, $status));
    },
    build$1(context) {
      var t3, t4, _this = this,
        t1 = C._setArrayType([], type$.JSArray_Widget),
        t2 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t2 = t2.__AnimationController__status_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      if (t2 !== G.AnimationStatus_0) {
        t2 = _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
        t3 = _this._previousChild;
        t2 === $ && C.throwUnnamedLateFieldNI();
        t4 = _this.___FloatingActionButtonTransitionState__previousRotationAnimation_A;
        t4 === $ && C.throwUnnamedLateFieldNI();
        t1.push(D.ScaleTransition$(A.RotationTransition$(t3, t4), t2));
      }
      t2 = _this._widget;
      t3 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t2 = t2.child;
      t3 === $ && C.throwUnnamedLateFieldNI();
      t4 = _this.___FloatingActionButtonTransitionState__currentRotationAnimation_A;
      t4 === $ && C.throwUnnamedLateFieldNI();
      t1.push(D.ScaleTransition$(A.RotationTransition$(t2, t4), t3));
      return D.Stack$(B.Alignment_1_0, t1, G.StackFit_0, null, null);
    },
    _onProgressChanged$0() {
      var t2, t3,
        t1 = this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t2 = t1.first;
      t2 = t2.get$value(t2);
      t1 = t1.next;
      t1 = t1.get$value(t1);
      t1 = Math.min(C.checkNum(t2), C.checkNum(t1));
      t2 = this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t3 = t2.first;
      t3 = t3.get$value(t3);
      t2 = t2.next;
      t2 = t2.get$value(t2);
      t2 = Math.max(t1, Math.min(C.checkNum(t3), C.checkNum(t2)));
      this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(t2);
    }
  };
  A.Scaffold.prototype = {
    createState$0() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_DrawerControllerState,
        t2 = type$.LabeledGlobalKey_State_StatefulWidget,
        t3 = $.$get$ChangeNotifier__emptyListeners();
      return new A.ScaffoldState(new D.LabeledGlobalKey(_null, t1), new D.LabeledGlobalKey(_null, t1), new D.LabeledGlobalKey(_null, t2), new I.RestorableBool(false, t3), new I.RestorableBool(false, t3), C._setArrayType([], type$.JSArray__StandardBottomSheet), new D.LabeledGlobalKey(_null, t2), E.Color_4278190080, _null, C.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null, G._StateLifecycle_0);
    }
  };
  A.ScaffoldState.prototype = {
    get$restorationId() {
      this._widget.toString;
      return null;
    },
    restoreState$2(oldBucket, initialRestore) {
      var _this = this;
      _this.registerForRestoration$2(_this._drawerOpened, "drawer_open");
      _this.registerForRestoration$2(_this._endDrawerOpened, "end_drawer_open");
    },
    _drawerOpenedCallback$1(isOpened) {
      var _this = this,
        t1 = _this._drawerOpened,
        t2 = t1._restoration_properties$_value;
      if (!J.$eq$(t2 == null ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2, isOpened)) {
        _this.setState$1(new A.ScaffoldState__drawerOpenedCallback_closure(_this, isOpened));
        _this._widget.toString;
      }
    },
    _updateSnackBar$0() {
      var messengerSnackBar, _this = this,
        t1 = _this._scaffoldMessenger._snackBars;
      if (!t1.get$isEmpty(t1)) {
        t1 = _this._scaffoldMessenger._snackBars;
        messengerSnackBar = t1.get$first(t1);
      } else
        messengerSnackBar = null;
      if (_this._messengerSnackBar != messengerSnackBar)
        _this.setState$1(new A.ScaffoldState__updateSnackBar_closure(_this, messengerSnackBar));
    },
    _updateMaterialBanner$0() {
      var messengerMaterialBanner, _this = this,
        t1 = _this._scaffoldMessenger._materialBanners;
      if (!t1.get$isEmpty(t1)) {
        t1 = _this._scaffoldMessenger._materialBanners;
        messengerMaterialBanner = t1.get$first(t1);
      } else
        messengerMaterialBanner = null;
      if (_this._messengerMaterialBanner != messengerMaterialBanner)
        _this.setState$1(new A.ScaffoldState__updateMaterialBanner_closure(_this, messengerMaterialBanner));
    },
    _maybeBuildPersistentBottomSheet$0() {
      this._widget.toString;
    },
    _handleStatusBarTap$0() {
      var primaryScrollController,
        t1 = this._framework$_element;
      t1.toString;
      primaryScrollController = D.PrimaryScrollController_of(t1);
      if (primaryScrollController != null && primaryScrollController._positions.length !== 0)
        primaryScrollController.animateTo$3$curve$duration(0, B.Cubic_YAz, E.Duration_1000000);
    },
    get$_resizeToAvoidBottomInset() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = _this._framework$_element;
      t1.toString;
      _this.__ScaffoldState__geometryNotifier_A = new A._ScaffoldGeometryNotifier(t1, B.ScaffoldGeometry_null_null, $.$get$ChangeNotifier__emptyListeners());
      _this._widget.toString;
      _this._floatingActionButtonLocation = B.C__EndFloatFabLocation;
      _this.__ScaffoldState__floatingActionButtonAnimator_A = B.C__ScalingFabMotionAnimator;
      _this._previousFloatingActionButtonLocation = B.C__EndFloatFabLocation;
      _this.__ScaffoldState__floatingActionButtonMoveController_A = D.AnimationController$(_null, new C.Duration(400000), _null, 1, _this);
      _this.__ScaffoldState__floatingActionButtonVisibilityController_A = D.AnimationController$(_null, E.Duration_200000, _null, _null, _this);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      this._widget.toString;
    },
    didChangeDependencies$0() {
      var t3, $parent, _this = this,
        scope = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$._ScaffoldMessengerScope),
        currentScaffoldMessenger = scope == null ? null : scope._scaffoldMessengerState,
        t1 = _this._scaffoldMessenger,
        t2 = t1 == null;
      if (!t2)
        t3 = currentScaffoldMessenger == null || t1 !== currentScaffoldMessenger;
      else
        t3 = false;
      if (t3)
        if (!t2)
          t1._scaffolds.remove$1(0, _this);
      _this._scaffoldMessenger = currentScaffoldMessenger;
      if (currentScaffoldMessenger != null) {
        t1 = currentScaffoldMessenger._scaffolds;
        t1.add$1(0, _this);
        $parent = _this._framework$_element.findAncestorStateOfType$1$0(type$.ScaffoldState);
        if ($parent == null || !t1.contains$1(0, $parent)) {
          t1 = currentScaffoldMessenger._snackBars;
          if (!t1.get$isEmpty(t1))
            _this._updateSnackBar$0();
          t1 = currentScaffoldMessenger._materialBanners;
          if (!t1.get$isEmpty(t1))
            _this._updateMaterialBanner$0();
        }
      }
      _this._maybeBuildPersistentBottomSheet$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.__ScaffoldState__geometryNotifier_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t1.ChangeNotifier__count = 0;
      t1 = _this.__ScaffoldState__floatingActionButtonMoveController_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.__ScaffoldState__floatingActionButtonVisibilityController_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this._scaffoldMessenger;
      if (t1 != null)
        t1._scaffolds.remove$1(0, _this);
      _this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    _addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      var data = this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.removePadding$4$removeBottom$removeLeft$removeRight$removeTop(removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
      if (removeBottomInset)
        data = data.removeViewInsets$1$removeBottom(true);
      if (maintainBottomViewPadding && data.viewInsets.bottom !== 0)
        data = data.copyWith$1$padding(data.padding.copyWith$1$bottom(data.viewPadding.bottom));
      if (child != null)
        children.push(A.LayoutId$(new D.MediaQuery(data, child, null), childId));
    },
    _addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _buildEndDrawer$2(children, textDirection) {
      this._widget.toString;
    },
    _buildDrawer$2(children, textDirection) {
      var t2, t3, _this = this,
        t1 = _this._widget.drawer;
      if (t1 != null) {
        t2 = _this._drawerOpened;
        t3 = t2._restoration_properties$_value;
        t2 = t3 == null ? C._instanceType(t2)._eval$1("RestorableValue.T")._as(t3) : t3;
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A.DrawerController(t1, B.DrawerAlignment_0, _this.get$_drawerOpenedCallback(), G.DragStartBehavior_1, null, true, null, t2, _this._drawerKey), B._ScaffoldSlot_9, false, textDirection === E.TextDirection_0, textDirection === E.TextDirection_1, false);
      }
    },
    build$1(context) {
      var textDirection, children, t2, stack, snackBarWidth, elevation, t3, t4, minInsets, minViewPadding, _this = this, _null = null, _box_0 = {},
        mediaQuery = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data,
        themeData = D.Theme_of(context),
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      textDirection = t1.textDirection;
      children = C._setArrayType([], type$.JSArray_LayoutId);
      t1 = _this._widget.body;
      _this.get$_resizeToAvoidBottomInset();
      _this._addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A._BodyBuilder(new D.KeyedSubtree(t1, _this._bodyKey), false, false, _null), B._ScaffoldSlot_0, true, false, false, false, true);
      if (_this._showBodyScrim)
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new F.ModalBarrier(_this._bodyScrimColor, false, _null, true, _null, _null), B._ScaffoldSlot_2, true, true, true, true);
      t1 = _this._widget;
      t1 = _this._appBarMaxHeight = A.AppBar_preferredHeightFor(context, t1.appBar.preferredSize) + mediaQuery.padding.top;
      t2 = _this._widget.appBar;
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new D.ConstrainedBox(new C.BoxConstraints(0, 1 / 0, 0, t1), new A.FlexibleSpaceBarSettings(1, t1, t1, t1, _null, t2, _null), _null), B._ScaffoldSlot_1, true, false, false, false);
      _box_0.isSnackBarFloating = false;
      _box_0.snackBarWidth = null;
      if (_this._currentBottomSheet != null || _this._dismissedBottomSheets.length !== 0) {
        t1 = C.List_List$of(_this._dismissedBottomSheets, true, type$.Widget);
        t2 = _this._currentBottomSheet;
        if (t2 != null)
          t1.push(t2._scaffold$_widget);
        stack = D.Stack$(B.Alignment_0_1, t1, G.StackFit_0, _null, _null);
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, stack, B._ScaffoldSlot_3, true, false, false, true);
      }
      t1 = _this._messengerSnackBar;
      if (t1 != null) {
        t1._scaffold$_widget.get$behavior();
        _box_0.isSnackBarFloating = false;
        t1 = _this._messengerSnackBar;
        if (t1 == null)
          snackBarWidth = _null;
        else {
          t1 = t1._scaffold$_widget;
          snackBarWidth = t1.get$width(t1);
        }
        _box_0.snackBarWidth = snackBarWidth;
        t1 = _this._messengerSnackBar;
        t1 = t1 == null ? _null : t1._scaffold$_widget;
        _this._widget.toString;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, B._ScaffoldSlot_4, false, false, false, false, true);
      }
      _box_0.extendBodyBehindMaterialBanner = false;
      if (_this._messengerMaterialBanner != null) {
        context.dependOnInheritedWidgetOfExactType$1$0(type$.MaterialBannerTheme);
        t1 = D.Theme_of(context);
        elevation = t1.bannerTheme.elevation;
        _box_0.extendBodyBehindMaterialBanner = (elevation == null ? 0 : elevation) !== 0;
        t1 = _this._messengerMaterialBanner;
        t1 = t1 == null ? _null : t1._scaffold$_widget;
        _this._widget.toString;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, B._ScaffoldSlot_5, false, true, false, false, true);
      }
      _this._widget.toString;
      t1 = _this.__ScaffoldState__floatingActionButtonMoveController_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t2 = _this.__ScaffoldState__floatingActionButtonAnimator_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t3 = _this.__ScaffoldState__geometryNotifier_A;
      t3 === $ && C.throwUnnamedLateFieldNI();
      t4 = _this.__ScaffoldState__floatingActionButtonVisibilityController_A;
      t4 === $ && C.throwUnnamedLateFieldNI();
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A._FloatingActionButtonTransition(_null, t1, t2, t3, t4, _null), B._ScaffoldSlot_8, true, true, true, true);
      switch (themeData.platform.index) {
        case 2:
        case 4:
          _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, F.GestureDetector$(G.HitTestBehavior_1, _null, G.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$_handleStatusBarTap(), _null, _null, _null, _null, _null, _null), B._ScaffoldSlot_11, true, false, false, true);
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          break;
      }
      t1 = _this._endDrawerOpened;
      t2 = t1._restoration_properties$_value;
      if (t2 == null ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) {
        _this._buildDrawer$2(children, textDirection);
        _this._buildEndDrawer$2(children, textDirection);
      } else {
        _this._buildEndDrawer$2(children, textDirection);
        _this._buildDrawer$2(children, textDirection);
      }
      _this.get$_resizeToAvoidBottomInset();
      t1 = mediaQuery.viewInsets.bottom;
      minInsets = mediaQuery.padding.copyWith$1$bottom(t1);
      _this.get$_resizeToAvoidBottomInset();
      t1 = t1 !== 0 ? 0 : _null;
      minViewPadding = mediaQuery.viewPadding.copyWith$1$bottom(t1);
      if (minInsets.bottom <= 0)
        _this._widget.toString;
      t1 = _this._widget.drawer;
      return new A._ScaffoldScope(t1 != null, new A.ScrollNotificationObserver(D.Material$(E.Duration_200000, true, _null, D.AnimatedBuilder$(_this.__ScaffoldState__floatingActionButtonMoveController_A, new A.ScaffoldState_build_closure(_box_0, _this, false, minInsets, minViewPadding, textDirection, children), _null), E.Clip_0, themeData.scaffoldBackgroundColor, 0, _null, _null, _null, _null, _null, G.MaterialType_0), _null), _null);
    }
  };
  A._DismissDrawerAction.prototype = {
    isEnabled$1(_, intent) {
      var t1 = this.context,
        t2 = A.Scaffold_of(t1)._drawerOpened,
        t3 = t2._restoration_properties$_value;
      if (!(t3 == null ? C._instanceType(t2)._eval$1("RestorableValue.T")._as(t3) : t3)) {
        t1 = A.Scaffold_of(t1)._endDrawerOpened;
        t2 = t1._restoration_properties$_value;
        t1 = t2 == null ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
      } else
        t1 = true;
      return t1;
    },
    invoke$1(intent) {
      var t3, t4,
        t1 = this.context,
        t2 = A.Scaffold_of(t1);
      if (t2._widget.drawer != null) {
        t3 = t2._drawerOpened;
        t4 = t3._restoration_properties$_value;
        t3 = t4 == null ? C._instanceType(t3)._eval$1("RestorableValue.T")._as(t4) : t4;
      } else
        t3 = false;
      if (t3)
        t2._drawerKey.get$currentState().close$0(0);
      A.Scaffold_of(t1)._widget.toString;
    }
  };
  A._ScaffoldScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.hasDrawer !== oldWidget.hasDrawer;
    }
  };
  A._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._framework$_element;
      t1.toString;
      t1 = D.RestorationScope_of(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_ScaffoldState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._TextSpanEditingController.prototype = {
    buildTextSpan$3$context$style$withComposing(context, style, withComposing) {
      return D.TextSpan$(C._setArrayType([this._textSpan], type$.JSArray_TextSpan), style, null);
    },
    set$text(_, newText) {
      throw C.wrapException(C.UnimplementedError$(null));
    }
  };
  A._SelectableTextSelectionGestureDetectorBuilder.prototype = {
    onForcePressStart$1(details) {
      var t1;
      this.super$TextSelectionGestureDetectorBuilder$onForcePressStart(details);
      t1 = this.delegate;
      if (t1.get$selectionEnabled() && this._shouldShowSelectionToolbar) {
        t1 = t1.get$editableTextKey().get$currentState();
        t1.toString;
        t1.showToolbar$0();
      }
    },
    onForcePressEnd$1(details) {
    },
    onSingleLongTapMoveUpdate$1(details) {
      var t2,
        t1 = this.delegate;
      if (t1.get$selectionEnabled()) {
        t1 = t1.get$editableTextKey().get$currentState();
        t1.toString;
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._editableKey).get$renderObject();
        t1.toString;
        t2 = details.globalPosition;
        type$.RenderEditable._as(t1).selectWordsInRange$3$cause$from$to(H.SelectionChangedCause_2, t2.$sub(0, details.offsetFromOrigin), t2);
      }
    },
    onSingleTapUp$1(details) {
      var t1 = this.delegate,
        t2 = t1.get$editableTextKey().get$currentState();
      t2.toString;
      t2.hideToolbar$0();
      if (t1.get$selectionEnabled()) {
        t2 = this._selectable_text$_state._framework$_element;
        t2.toString;
        switch (D.Theme_of(t2).platform.index) {
          case 2:
          case 4:
            t1 = t1.get$editableTextKey().get$currentState();
            t1.toString;
            t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._editableKey).get$renderObject();
            t1.toString;
            type$.RenderEditable._as(t1).selectWordEdge$1$cause(H.SelectionChangedCause_0);
            break;
          case 0:
          case 1:
          case 3:
          case 5:
            t1 = t1.get$editableTextKey().get$currentState();
            t1.toString;
            t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._editableKey).get$renderObject();
            t1.toString;
            type$.RenderEditable._as(t1);
            t2 = t1._lastTapDownPosition;
            t2.toString;
            t1.selectPositionAt$2$cause$from(H.SelectionChangedCause_0, t2);
            break;
        }
      }
      this._selectable_text$_state._widget.toString;
    },
    onSingleLongTapStart$1(details) {
      var t2,
        t1 = this.delegate;
      if (t1.get$selectionEnabled()) {
        t1 = t1.get$editableTextKey().get$currentState();
        t1.toString;
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._editableKey).get$renderObject();
        t1.toString;
        type$.RenderEditable._as(t1);
        t2 = t1._lastTapDownPosition;
        t2.toString;
        t1.selectWordsInRange$2$cause$from(H.SelectionChangedCause_2, t2);
        t2 = this._selectable_text$_state._framework$_element;
        t2.toString;
        F.Feedback_forLongPress(t2);
      }
    }
  };
  A.SelectableText.prototype = {
    createState$0() {
      return new A._SelectableTextState(new D.LabeledGlobalKey(null, type$.LabeledGlobalKey_EditableTextState), G._StateLifecycle_0);
    },
    get$data() {
      return "\u897f\u7535\u76ee\u5f55 Flutter \u7f51\u9875\u7248";
    }
  };
  A._SelectableTextState.prototype = {
    get$_effectiveFocusNode() {
      var t1, _null = null;
      this._widget.toString;
      t1 = this._focusNode;
      if (t1 == null) {
        t1 = C.FocusNode$(true, _null, true, true, _null, _null, true);
        this._focusNode = t1;
      }
      return t1;
    },
    get$forcePressEnabled() {
      var t1 = this.___SelectableTextState_forcePressEnabled_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      return t1;
    },
    get$selectionEnabled() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this.___SelectableTextState__selectionGestureDetectorBuilder_A = new A._SelectableTextSelectionGestureDetectorBuilder(_this, _this);
      _this._widget.toString;
      t1 = D.TextSpan$(null, null, "\u897f\u7535\u76ee\u5f55 Flutter \u7f51\u9875\u7248");
      t1 = A._TextSpanEditingController$(t1);
      _this.___SelectableTextState__controller_A = t1;
      t1.addListener$1(0, _this.get$_onControllerChanged());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      _this._widget.toString;
      if (_this.get$_effectiveFocusNode().get$hasFocus()) {
        t1 = _this.___SelectableTextState__controller_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1 = t1._change_notifier$_value.selection;
        t1 = t1.start === t1.end;
      } else
        t1 = false;
      if (t1)
        _this._showSelectionHandles = false;
      else
        _this._showSelectionHandles = true;
    },
    dispose$0() {
      var _this = this,
        t1 = _this._focusNode;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.removeListener$1(0, _this.get$_onControllerChanged());
      _this.super$State$dispose();
    },
    _onControllerChanged$0() {
      var t1, showSelectionHandles, _this = this;
      if (_this.get$_effectiveFocusNode().get$hasFocus()) {
        t1 = _this.___SelectableTextState__controller_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1 = t1._change_notifier$_value.selection;
        showSelectionHandles = t1.start !== t1.end;
      } else
        showSelectionHandles = true;
      if (showSelectionHandles === _this._showSelectionHandles)
        return;
      _this.setState$1(new A._SelectableTextState__onControllerChanged_closure(_this, showSelectionHandles));
    },
    _selectable_text$_handleSelectionChanged$2(selection, cause) {
      var t1, _this = this,
        willShowSelectionHandles = _this._shouldShowSelectionHandles$1(cause);
      if (willShowSelectionHandles !== _this._showSelectionHandles)
        _this.setState$1(new A._SelectableTextState__handleSelectionChanged_closure(_this, willShowSelectionHandles));
      _this._widget.toString;
      _this._lastSeenTextSelection = selection;
      t1 = _this._framework$_element;
      t1.toString;
      switch (D.Theme_of(t1).platform.index) {
        case 2:
        case 4:
          if (cause === H.SelectionChangedCause_2) {
            t1 = _this.editableTextKey.get$currentState();
            if (t1 != null)
              t1.bringIntoView$1(selection.get$base());
          }
          return;
        case 0:
        case 1:
        case 3:
        case 5:
          break;
      }
    },
    _handleSelectionHandleTapped$0() {
      var t1 = this.___SelectableTextState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1 = t1._change_notifier$_value.selection;
      if (t1.start === t1.end)
        this.editableTextKey.get$currentState().toggleToolbar$0();
    },
    _shouldShowSelectionHandles$1(cause) {
      var t2,
        t1 = this.___SelectableTextState__selectionGestureDetectorBuilder_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (!t1._shouldShowSelectionToolbar)
        return false;
      t1 = this.___SelectableTextState__controller_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1 = t1._change_notifier$_value;
      t2 = t1.selection;
      if (t2.start === t2.end)
        return false;
      if (cause === H.SelectionChangedCause_4)
        return false;
      if (cause === H.SelectionChangedCause_2)
        return true;
      if (t1.text.length !== 0)
        return true;
      return false;
    },
    build$1(context) {
      var focusNode, cupertinoTheme, textSelectionControls, cursorColor, selectionColor, cursorOffset, paintCursorAboveText, cursorOpacityAnimates, cursorRadius, effectiveTextStyle, t2, t3, t4, _this = this, _null = null,
        theme = D.Theme_of(context),
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      if (t1 == null)
        t1 = G.DefaultSelectionStyle_MUs;
      focusNode = _this.get$_effectiveFocusNode();
      _this._widget.toString;
      switch (theme.platform.index) {
        case 2:
          cupertinoTheme = F.CupertinoTheme_of(context);
          _this.___SelectableTextState_forcePressEnabled_A = true;
          textSelectionControls = $.$get$cupertinoTextSelectionControls();
          _this._widget.toString;
          cursorColor = t1.cursorColor;
          if (cursorColor == null)
            cursorColor = cupertinoTheme.get$primaryColor();
          selectionColor = t1.selectionColor;
          if (selectionColor == null) {
            t1 = cupertinoTheme.get$primaryColor();
            selectionColor = C.Color$fromARGB(102, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
          }
          cursorOffset = new C.Offset(-2 / context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.devicePixelRatio, 0);
          paintCursorAboveText = true;
          cursorOpacityAnimates = true;
          cursorRadius = G.Radius_2_2;
          break;
        case 4:
          cupertinoTheme = F.CupertinoTheme_of(context);
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$cupertinoDesktopTextSelectionControls();
          _this._widget.toString;
          cursorColor = t1.cursorColor;
          if (cursorColor == null)
            cursorColor = cupertinoTheme.get$primaryColor();
          selectionColor = t1.selectionColor;
          if (selectionColor == null) {
            t1 = cupertinoTheme.get$primaryColor();
            selectionColor = C.Color$fromARGB(102, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
          }
          cursorOffset = new C.Offset(-2 / context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.devicePixelRatio, 0);
          paintCursorAboveText = true;
          cursorOpacityAnimates = true;
          cursorRadius = G.Radius_2_2;
          break;
        case 0:
        case 1:
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$materialTextSelectionControls();
          cursorColor = t1.cursorColor;
          if (cursorColor == null)
            cursorColor = theme.colorScheme.primary;
          selectionColor = t1.selectionColor;
          if (selectionColor == null) {
            t1 = theme.colorScheme.primary;
            selectionColor = C.Color$fromARGB(102, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
          }
          cursorRadius = _null;
          cursorOffset = cursorRadius;
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          break;
        case 3:
        case 5:
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$desktopTextSelectionControls();
          cursorColor = t1.cursorColor;
          if (cursorColor == null)
            cursorColor = theme.colorScheme.primary;
          selectionColor = t1.selectionColor;
          if (selectionColor == null) {
            t1 = theme.colorScheme.primary;
            selectionColor = C.Color$fromARGB(102, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
          }
          cursorRadius = _null;
          cursorOffset = cursorRadius;
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          break;
        default:
          cursorRadius = _null;
          selectionColor = cursorRadius;
          cursorColor = selectionColor;
          cursorOffset = cursorColor;
          cursorOpacityAnimates = cursorOffset;
          paintCursorAboveText = cursorOpacityAnimates;
          textSelectionControls = paintCursorAboveText;
      }
      t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
      if (t1 == null)
        t1 = G.DefaultTextStyle_MTi;
      _this._widget.toString;
      effectiveTextStyle = t1.style.merge$1(B.TextStyle_SVP);
      if (D.MediaQuery_boldTextOverride(context))
        effectiveTextStyle = effectiveTextStyle.merge$1(G.TextStyle_ia3);
      _this._widget.toString;
      t2 = _this._showSelectionHandles;
      t3 = _this.___SelectableTextState__controller_A;
      t3 === $ && C.throwUnnamedLateFieldNI();
      t4 = t1.textAlign;
      if (t4 == null)
        t4 = E.TextAlign_4;
      t1 = F.EditableText$(true, _null, _null, _null, false, H.CupertinoDynamicColor_YIZ, E.Clip_1, t3, cursorColor, _null, cursorOffset, cursorOpacityAnimates, cursorRadius, 2, G.DragStartBehavior_1, true, true, true, false, focusNode, false, _null, _this.editableTextKey, E.Brightness_1, _null, t1.maxLines, _null, _null, false, "\u2022", _null, _null, _null, _this.get$_selectable_text$_handleSelectionChanged(), _this.get$_handleSelectionHandleTapped(), _null, paintCursorAboveText, true, true, _null, true, _null, H.EdgeInsets_20_20_20_20, _null, selectionColor, textSelectionControls, E.BoxHeightStyle_0, E.BoxWidthStyle_0, false, t2, _null, _null, B.StrutStyle_yfz, effectiveTextStyle, t4, H.TextCapitalization_30, _null, t1.textHeightBehavior, _null, _null, t1.textWidthBasis, H.ToolbarOptions_true_false_false_true);
      _this._widget.toString;
      t2 = _this.___SelectableTextState__selectionGestureDetectorBuilder_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      return D.Semantics$(_null, t2.buildGestureDetector$2$behavior$child(G.HitTestBehavior_2, new D.RepaintBoundary(t1, _null)), false, _null, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A._SelectableTextState_build_closure(_this), _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    get$editableTextKey() {
      return this.editableTextKey;
    }
  };
  A.SnackBarClosedReason.prototype = {
    toString$0(_) {
      return "SnackBarClosedReason." + this._core$_name;
    }
  };
  A._LerpColors.prototype = {
    resolve$1(states) {
      var resolvedB,
        t1 = this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return D.Color_lerp(resolvedA, resolvedB, this.t);
    },
    get$hashCode(_) {
      return C.Object_hash(this.a, this.b, this.t, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== C.getRuntimeType(_this))
        return false;
      return other instanceof A._LerpColors && J.$eq$(other.a, _this.a) && J.$eq$(other.b, _this.b) && other.t === _this.t;
    },
    $isMaterialStateProperty: 1
  };
  A.Theme.prototype = {
    build$1(context) {
      var t9, t10,
        t1 = this.data,
        t2 = H.CupertinoThemeData_KQb.brightness,
        t3 = H.CupertinoThemeData_KQb.primaryColor,
        t4 = H.CupertinoThemeData_KQb.primaryContrastingColor,
        t5 = H.CupertinoThemeData_KQb.textTheme,
        t6 = H.CupertinoThemeData_KQb.barBackgroundColor,
        t7 = H.CupertinoThemeData_KQb.scaffoldBackgroundColor,
        t8 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      if (t8 == null)
        t8 = G.DefaultSelectionStyle_MUs;
      t9 = t1.textSelectionTheme;
      t10 = t9.selectionColor;
      if (t10 == null)
        t10 = t8.selectionColor;
      t9 = t9.cursorColor;
      t8 = t9 == null ? t8.cursorColor : t9;
      return new A._InheritedTheme(this, new A.CupertinoTheme(new A.MaterialBasedCupertinoThemeData(t1, new F.NoDefaultCupertinoThemeData(t2, t3, t4, t5, t6, t7), H._CupertinoThemeDefaults_iF8, t2, t3, t4, t5, t6, t7), F.IconTheme$(D.DefaultSelectionStyle$(this.child, t8, t10), t1.iconTheme, null), null), null);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A._InheritedTheme.prototype = {
    wrap$2(_, context, child) {
      return new A.Theme(this.theme.data, child, null);
    },
    updateShouldNotify$1(old) {
      return !this.theme.data.$eq(0, old.theme.data);
    }
  };
  A.ThemeDataTween.prototype = {
    lerp$1(t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t178, t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t193, t194, t195, t196, t197, t198, t199, lerpedBorderSide, t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t210, t211, t212, t213, t214, t215, t216, t217, t218, t219, t220,
        t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      t3 = t < 0.5;
      t4 = t3 ? t1.applyElevationOverlayColor : t2.applyElevationOverlayColor;
      t5 = t3 ? t1.cupertinoOverrideTheme : t2.cupertinoOverrideTheme;
      t6 = A.ThemeData__lerpThemeExtensions(t1, t2, t);
      t7 = t3 ? t1.inputDecorationTheme : t2.inputDecorationTheme;
      t8 = t3 ? t1.materialTapTargetSize : t2.materialTapTargetSize;
      t9 = t3 ? t1.pageTransitionsTheme : t2.pageTransitionsTheme;
      t10 = t3 ? t1.platform : t2.platform;
      t11 = t1.scrollbarTheme;
      t12 = t2.scrollbarTheme;
      t13 = type$.nullable_bool;
      t14 = A.MaterialStateProperty_lerp(t11.thumbVisibility, t12.thumbVisibility, t, A.scrollbar_theme___lerpBool$closure(), t13);
      t15 = A.MaterialStateProperty_lerp(t11.thickness, t12.thickness, t, D.ui__lerpDouble$closure(), type$.nullable_double);
      t13 = A.MaterialStateProperty_lerp(t11.trackVisibility, t12.trackVisibility, t, A.scrollbar_theme___lerpBool$closure(), t13);
      t16 = t11.showTrackOnHover;
      t17 = t12.showTrackOnHover;
      t16 = t3 ? t16 : t17;
      t17 = t11.isAlwaysShown;
      t18 = t12.isAlwaysShown;
      t17 = t3 ? t17 : t18;
      t18 = t11.interactive;
      t19 = t12.interactive;
      t18 = t3 ? t18 : t19;
      t19 = D.Radius_lerp(t11.radius, t12.radius, t);
      t20 = type$.nullable_Color;
      t21 = A.MaterialStateProperty_lerp(t11.thumbColor, t12.thumbColor, t, D.ui_Color_lerp$closure(), t20);
      t22 = A.MaterialStateProperty_lerp(t11.trackColor, t12.trackColor, t, D.ui_Color_lerp$closure(), t20);
      t23 = A.MaterialStateProperty_lerp(t11.trackBorderColor, t12.trackBorderColor, t, D.ui_Color_lerp$closure(), t20);
      t24 = D.lerpDouble(t11.crossAxisMargin, t12.crossAxisMargin, t);
      t25 = D.lerpDouble(t11.mainAxisMargin, t12.mainAxisMargin, t);
      t11 = D.lerpDouble(t11.minThumbLength, t12.minThumbLength, t);
      t12 = t3 ? t1.splashFactory : t2.splashFactory;
      t26 = t1.visualDensity;
      t27 = t2.visualDensity;
      t28 = D.lerpDouble(t26.horizontal, t27.horizontal, t);
      t28.toString;
      t27 = D.lerpDouble(t26.vertical, t27.vertical, t);
      t27.toString;
      t26 = D.Color_lerp(t1.backgroundColor, t2.backgroundColor, t);
      t26.toString;
      t29 = D.Color_lerp(t1.bottomAppBarColor, t2.bottomAppBarColor, t);
      t29.toString;
      t30 = D.Color_lerp(t1.canvasColor, t2.canvasColor, t);
      t30.toString;
      t31 = D.Color_lerp(t1.cardColor, t2.cardColor, t);
      t31.toString;
      t32 = t1.colorScheme;
      t33 = t2.colorScheme;
      t34 = t3 ? t32.brightness : t33.brightness;
      t35 = t32.primary;
      t36 = t33.primary;
      t37 = D.Color_lerp(t35, t36, t);
      t37.toString;
      t38 = t32.onPrimary;
      t39 = t33.onPrimary;
      t40 = D.Color_lerp(t38, t39, t);
      t40.toString;
      t41 = t32._primaryContainer;
      if (t41 == null)
        t41 = t35;
      t42 = t33._primaryContainer;
      t41 = D.Color_lerp(t41, t42 == null ? t36 : t42, t);
      t42 = t32._onPrimaryContainer;
      if (t42 == null)
        t42 = t38;
      t43 = t33._onPrimaryContainer;
      t42 = D.Color_lerp(t42, t43 == null ? t39 : t43, t);
      t43 = t32.secondary;
      t44 = t33.secondary;
      t45 = D.Color_lerp(t43, t44, t);
      t45.toString;
      t46 = t32.onSecondary;
      t47 = t33.onSecondary;
      t48 = D.Color_lerp(t46, t47, t);
      t48.toString;
      t49 = t32._secondaryContainer;
      if (t49 == null)
        t49 = t43;
      t50 = t33._secondaryContainer;
      t49 = D.Color_lerp(t49, t50 == null ? t44 : t50, t);
      t50 = t32._onSecondaryContainer;
      if (t50 == null)
        t50 = t46;
      t51 = t33._onSecondaryContainer;
      t50 = D.Color_lerp(t50, t51 == null ? t47 : t51, t);
      t51 = t32._tertiary;
      t52 = t51 == null;
      t53 = t52 ? t43 : t51;
      t54 = t33._tertiary;
      t55 = t54 == null;
      t53 = D.Color_lerp(t53, t55 ? t44 : t54, t);
      t56 = t32._onTertiary;
      t57 = t56 == null;
      t58 = t57 ? t46 : t56;
      t59 = t33._onTertiary;
      t60 = t59 == null;
      t58 = D.Color_lerp(t58, t60 ? t47 : t59, t);
      t61 = t32._tertiaryContainer;
      if (t61 == null) {
        if (t52)
          t51 = t43;
      } else
        t51 = t61;
      t52 = t33._tertiaryContainer;
      if (t52 == null)
        t52 = t55 ? t44 : t54;
      t52 = D.Color_lerp(t51, t52, t);
      t51 = t32._onTertiaryContainer;
      if (t51 == null)
        t46 = t57 ? t46 : t56;
      else
        t46 = t51;
      t51 = t33._onTertiaryContainer;
      if (t51 == null)
        t47 = t60 ? t47 : t59;
      else
        t47 = t51;
      t47 = D.Color_lerp(t46, t47, t);
      t46 = t32.error;
      t51 = t33.error;
      t54 = D.Color_lerp(t46, t51, t);
      t54.toString;
      t55 = t32.onError;
      t56 = t33.onError;
      t57 = D.Color_lerp(t55, t56, t);
      t57.toString;
      t59 = t32._errorContainer;
      t46 = t59 == null ? t46 : t59;
      t59 = t33._errorContainer;
      t46 = D.Color_lerp(t46, t59 == null ? t51 : t59, t);
      t51 = t32._onErrorContainer;
      if (t51 == null)
        t51 = t55;
      t55 = t33._onErrorContainer;
      t51 = D.Color_lerp(t51, t55 == null ? t56 : t55, t);
      t55 = D.Color_lerp(t32.background, t33.background, t);
      t55.toString;
      t56 = t32.onBackground;
      t59 = t33.onBackground;
      t60 = D.Color_lerp(t56, t59, t);
      t60.toString;
      t61 = t32.surface;
      t62 = t33.surface;
      t63 = D.Color_lerp(t61, t62, t);
      t63.toString;
      t64 = t32.onSurface;
      t65 = t33.onSurface;
      t66 = D.Color_lerp(t64, t65, t);
      t66.toString;
      t67 = t32._surfaceVariant;
      if (t67 == null)
        t67 = t61;
      t68 = t33._surfaceVariant;
      t67 = D.Color_lerp(t67, t68 == null ? t62 : t68, t);
      t68 = t32._onSurfaceVariant;
      if (t68 == null)
        t68 = t64;
      t69 = t33._onSurfaceVariant;
      t68 = D.Color_lerp(t68, t69 == null ? t65 : t69, t);
      t69 = t32._outline;
      t56 = t69 == null ? t56 : t69;
      t69 = t33._outline;
      t56 = D.Color_lerp(t56, t69 == null ? t59 : t69, t);
      t59 = t32._shadow;
      if (t59 == null)
        t59 = E.Color_4278190080;
      t69 = t33._shadow;
      t59 = D.Color_lerp(t59, t69 == null ? E.Color_4278190080 : t69, t);
      t69 = t32._inverseSurface;
      t64 = t69 == null ? t64 : t69;
      t69 = t33._inverseSurface;
      t64 = D.Color_lerp(t64, t69 == null ? t65 : t69, t);
      t65 = t32._onInverseSurface;
      t61 = t65 == null ? t61 : t65;
      t65 = t33._onInverseSurface;
      t61 = D.Color_lerp(t61, t65 == null ? t62 : t65, t);
      t62 = t32._inversePrimary;
      t38 = t62 == null ? t38 : t62;
      t62 = t33._inversePrimary;
      t38 = D.Color_lerp(t38, t62 == null ? t39 : t62, t);
      t39 = t32._primaryVariant;
      if (t39 == null)
        t39 = t35;
      t62 = t33._primaryVariant;
      t39 = D.Color_lerp(t39, t62 == null ? t36 : t62, t);
      t62 = t32._secondaryVariant;
      t43 = t62 == null ? t43 : t62;
      t62 = t33._secondaryVariant;
      t43 = D.Color_lerp(t43, t62 == null ? t44 : t62, t);
      t32 = t32._surfaceTint;
      if (t32 == null)
        t32 = t35;
      t33 = t33._surfaceTint;
      t32 = D.ColorScheme$(t55, t34, t54, t46, t38, t64, t60, t57, t51, t61, t40, t42, t48, t50, t66, t68, t58, t47, t56, t37, t41, t39, t45, t49, t43, t59, t63, D.Color_lerp(t32, t33 == null ? t36 : t33, t), t67, t53, t52);
      t33 = D.Color_lerp(t1.dialogBackgroundColor, t2.dialogBackgroundColor, t);
      t33.toString;
      t34 = D.Color_lerp(t1.disabledColor, t2.disabledColor, t);
      t34.toString;
      t35 = D.Color_lerp(t1.dividerColor, t2.dividerColor, t);
      t35.toString;
      t36 = D.Color_lerp(t1.errorColor, t2.errorColor, t);
      t36.toString;
      t37 = D.Color_lerp(t1.focusColor, t2.focusColor, t);
      t37.toString;
      t38 = D.Color_lerp(t1.highlightColor, t2.highlightColor, t);
      t38.toString;
      t39 = D.Color_lerp(t1.hintColor, t2.hintColor, t);
      t39.toString;
      t40 = D.Color_lerp(t1.hoverColor, t2.hoverColor, t);
      t40.toString;
      t41 = D.Color_lerp(t1.indicatorColor, t2.indicatorColor, t);
      t41.toString;
      t42 = D.Color_lerp(t1.primaryColor, t2.primaryColor, t);
      t42.toString;
      t43 = D.Color_lerp(t1.primaryColorDark, t2.primaryColorDark, t);
      t43.toString;
      t44 = D.Color_lerp(t1.primaryColorLight, t2.primaryColorLight, t);
      t44.toString;
      t45 = D.Color_lerp(t1.scaffoldBackgroundColor, t2.scaffoldBackgroundColor, t);
      t45.toString;
      t46 = D.Color_lerp(t1.secondaryHeaderColor, t2.secondaryHeaderColor, t);
      t46.toString;
      t47 = D.Color_lerp(t1.selectedRowColor, t2.selectedRowColor, t);
      t47.toString;
      t48 = D.Color_lerp(t1.shadowColor, t2.shadowColor, t);
      t48.toString;
      t49 = D.Color_lerp(t1.splashColor, t2.splashColor, t);
      t49.toString;
      t50 = D.Color_lerp(t1.toggleableActiveColor, t2.toggleableActiveColor, t);
      t50.toString;
      t51 = D.Color_lerp(t1.unselectedWidgetColor, t2.unselectedWidgetColor, t);
      t51.toString;
      t52 = A.IconThemeData_lerp(t1.iconTheme, t2.iconTheme, t);
      t53 = A.IconThemeData_lerp(t1.primaryIconTheme, t2.primaryIconTheme, t);
      t54 = A.TextTheme_lerp(t1.primaryTextTheme, t2.primaryTextTheme, t);
      t55 = A.TextTheme_lerp(t1.textTheme, t2.textTheme, t);
      t56 = t1.typography;
      t57 = t2.typography;
      t58 = A.TextTheme_lerp(t56.black, t57.black, t);
      t59 = A.TextTheme_lerp(t56.white, t57.white, t);
      t60 = A.TextTheme_lerp(t56.englishLike, t57.englishLike, t);
      t61 = A.TextTheme_lerp(t56.dense, t57.dense, t);
      t57 = A.TextTheme_lerp(t56.tall, t57.tall, t);
      t56 = t1.appBarTheme;
      t62 = t2.appBarTheme;
      if (t3)
        t63 = t56.brightness;
      else
        t63 = t62.brightness;
      t64 = D.Color_lerp(t56.backgroundColor, t62.backgroundColor, t);
      t65 = D.Color_lerp(t56.foregroundColor, t62.foregroundColor, t);
      t66 = D.lerpDouble(t56.elevation, t62.elevation, t);
      t67 = D.lerpDouble(t56.scrolledUnderElevation, t62.scrolledUnderElevation, t);
      t68 = D.Color_lerp(t56.shadowColor, t62.shadowColor, t);
      t69 = D.Color_lerp(t56.surfaceTintColor, t62.surfaceTintColor, t);
      t70 = D.ShapeBorder_lerp(t56.shape, t62.shape, t);
      t71 = A.IconThemeData_lerp(t56.iconTheme, t62.iconTheme, t);
      t72 = A.IconThemeData_lerp(t56.actionsIconTheme, t62.actionsIconTheme, t);
      t73 = A.TextTheme_lerp(t56.textTheme, t62.textTheme, t);
      if (t3)
        t74 = t56.centerTitle;
      else
        t74 = t62.centerTitle;
      t75 = D.lerpDouble(t56.titleSpacing, t62.titleSpacing, t);
      t76 = D.lerpDouble(t56.toolbarHeight, t62.toolbarHeight, t);
      t77 = D.TextStyle_lerp(t56.toolbarTextStyle, t62.toolbarTextStyle, t);
      t78 = D.TextStyle_lerp(t56.titleTextStyle, t62.titleTextStyle, t);
      if (t3)
        t79 = t56.systemOverlayStyle;
      else
        t79 = t62.systemOverlayStyle;
      if (t3)
        t56 = t56.backwardsCompatibility;
      else
        t56 = t62.backwardsCompatibility;
      t77 = A.AppBarTheme$(t72, t64, t56, t63, t74, t66, t65, t71, t67, t68, t70, t69, t79, t73, t75, t78, t76, t77);
      t76 = t1.bannerTheme;
      t78 = t2.bannerTheme;
      t56 = D.Color_lerp(t76.backgroundColor, t78.backgroundColor, t);
      t62 = D.TextStyle_lerp(t76.contentTextStyle, t78.contentTextStyle, t);
      t63 = D.lerpDouble(t76.elevation, t78.elevation, t);
      t64 = F.EdgeInsetsGeometry_lerp(t76.padding, t78.padding, t);
      t65 = F.EdgeInsetsGeometry_lerp(t76.leadingPadding, t78.leadingPadding, t);
      t66 = t1.bottomAppBarTheme;
      t67 = t2.bottomAppBarTheme;
      t68 = D.Color_lerp(t66.color, t67.color, t);
      t69 = D.lerpDouble(t66.elevation, t67.elevation, t);
      if (t3)
        t66 = t66.shape;
      else
        t66 = t67.shape;
      t67 = t1.bottomNavigationBarTheme;
      t70 = t2.bottomNavigationBarTheme;
      t71 = D.Color_lerp(t67.backgroundColor, t70.backgroundColor, t);
      t72 = D.lerpDouble(t67.elevation, t70.elevation, t);
      t73 = A.IconThemeData_lerp(t67.selectedIconTheme, t70.selectedIconTheme, t);
      t74 = A.IconThemeData_lerp(t67.unselectedIconTheme, t70.unselectedIconTheme, t);
      t75 = D.Color_lerp(t67.selectedItemColor, t70.selectedItemColor, t);
      t76 = D.Color_lerp(t67.unselectedItemColor, t70.unselectedItemColor, t);
      t78 = D.TextStyle_lerp(t67.selectedLabelStyle, t70.selectedLabelStyle, t);
      t79 = D.TextStyle_lerp(t67.unselectedLabelStyle, t70.unselectedLabelStyle, t);
      if (t3)
        t80 = t67.showSelectedLabels;
      else
        t80 = t70.showSelectedLabels;
      if (t3)
        t81 = t67.showUnselectedLabels;
      else
        t81 = t70.showUnselectedLabels;
      if (t3)
        t82 = t67.type;
      else
        t82 = t70.type;
      if (t3)
        t83 = t67.enableFeedback;
      else
        t83 = t70.enableFeedback;
      if (t3)
        t84 = t67.landscapeLayout;
      else
        t84 = t70.landscapeLayout;
      if (t3)
        t67 = t67.mouseCursor;
      else
        t67 = t70.mouseCursor;
      t70 = A.BottomSheetThemeData_lerp(t1.bottomSheetTheme, t2.bottomSheetTheme, t);
      t70.toString;
      t85 = A.ButtonBarThemeData_lerp(t1.buttonBarTheme, t2.buttonBarTheme, t);
      t85.toString;
      t86 = t3 ? t1.buttonTheme : t2.buttonTheme;
      t87 = t1.cardTheme;
      t88 = t2.cardTheme;
      if (t3)
        t89 = t87.clipBehavior;
      else
        t89 = t88.clipBehavior;
      t90 = D.Color_lerp(t87.color, t88.color, t);
      t91 = D.Color_lerp(t87.shadowColor, t88.shadowColor, t);
      t92 = D.Color_lerp(t87.surfaceTintColor, t88.surfaceTintColor, t);
      t93 = D.lerpDouble(t87.elevation, t88.elevation, t);
      t94 = F.EdgeInsetsGeometry_lerp(t87.margin, t88.margin, t);
      t87 = D.ShapeBorder_lerp(t87.shape, t88.shape, t);
      t88 = t1.checkboxTheme;
      t95 = t2.checkboxTheme;
      if (t3)
        t96 = t88.mouseCursor;
      else
        t96 = t95.mouseCursor;
      t97 = A.MaterialStateProperty_lerp(t88.fillColor, t95.fillColor, t, D.ui_Color_lerp$closure(), t20);
      t98 = A.MaterialStateProperty_lerp(t88.checkColor, t95.checkColor, t, D.ui_Color_lerp$closure(), t20);
      t99 = A.MaterialStateProperty_lerp(t88.overlayColor, t95.overlayColor, t, D.ui_Color_lerp$closure(), t20);
      t100 = D.lerpDouble(t88.splashRadius, t95.splashRadius, t);
      if (t3)
        t101 = t88.materialTapTargetSize;
      else
        t101 = t95.materialTapTargetSize;
      if (t3)
        t102 = t88.visualDensity;
      else
        t102 = t95.visualDensity;
      t103 = type$.nullable_OutlinedBorder;
      t104 = t103._as(D.ShapeBorder_lerp(t88.shape, t95.shape, t));
      t88 = A.CheckboxThemeData__lerpSides(t88.side, t95.side, t);
      t95 = A.ChipThemeData_lerp(t1.chipTheme, t2.chipTheme, t);
      t95.toString;
      t105 = t1.dataTableTheme;
      t106 = t2.dataTableTheme;
      t107 = D.Decoration_lerp(t105.decoration, t106.decoration, t);
      t108 = A.MaterialStateProperty_lerp(t105.dataRowColor, t106.dataRowColor, t, D.ui_Color_lerp$closure(), t20);
      t109 = D.lerpDouble(t105.dataRowHeight, t106.dataRowHeight, t);
      t110 = D.TextStyle_lerp(t105.dataTextStyle, t106.dataTextStyle, t);
      t111 = A.MaterialStateProperty_lerp(t105.headingRowColor, t106.headingRowColor, t, D.ui_Color_lerp$closure(), t20);
      t112 = D.lerpDouble(t105.headingRowHeight, t106.headingRowHeight, t);
      t113 = D.TextStyle_lerp(t105.headingTextStyle, t106.headingTextStyle, t);
      t114 = D.lerpDouble(t105.horizontalMargin, t106.horizontalMargin, t);
      t115 = D.lerpDouble(t105.columnSpacing, t106.columnSpacing, t);
      t116 = D.lerpDouble(t105.dividerThickness, t106.dividerThickness, t);
      t106 = D.lerpDouble(t105.checkboxHorizontalMargin, t106.checkboxHorizontalMargin, t);
      t105 = t1.dialogTheme;
      t117 = t2.dialogTheme;
      t118 = D.Color_lerp(t105.backgroundColor, t117.backgroundColor, t);
      t119 = D.lerpDouble(t105.elevation, t117.elevation, t);
      t120 = D.ShapeBorder_lerp(t105.shape, t117.shape, t);
      t121 = A.AlignmentGeometry_lerp(t105.alignment, t117.alignment, t);
      t122 = D.Color_lerp(t105.iconColor, t117.iconColor, t);
      t123 = D.TextStyle_lerp(t105.titleTextStyle, t117.titleTextStyle, t);
      t124 = D.TextStyle_lerp(t105.contentTextStyle, t117.contentTextStyle, t);
      t105 = F.EdgeInsetsGeometry_lerp(t105.actionsPadding, t117.actionsPadding, t);
      t117 = t1.dividerTheme;
      t125 = t2.dividerTheme;
      t126 = D.Color_lerp(t117.color, t125.color, t);
      t127 = D.lerpDouble(t117.space, t125.space, t);
      t128 = D.lerpDouble(t117.thickness, t125.thickness, t);
      t129 = D.lerpDouble(t117.indent, t125.indent, t);
      t117 = D.lerpDouble(t117.endIndent, t125.endIndent, t);
      t125 = A.DrawerThemeData_lerp(t1.drawerTheme, t2.drawerTheme, t);
      t125.toString;
      t130 = A.ElevatedButtonThemeData_lerp(t1.elevatedButtonTheme, t2.elevatedButtonTheme, t);
      t130.toString;
      t131 = A.ExpansionTileThemeData_lerp(t1.expansionTileTheme, t2.expansionTileTheme, t);
      t131.toString;
      t132 = A.FloatingActionButtonThemeData_lerp(t1.floatingActionButtonTheme, t2.floatingActionButtonTheme, t);
      t132.toString;
      t133 = A.ListTileThemeData_lerp(t1.listTileTheme, t2.listTileTheme, t);
      t133.toString;
      t134 = A.NavigationBarThemeData_lerp(t1.navigationBarTheme, t2.navigationBarTheme, t);
      t134.toString;
      t135 = A.NavigationRailThemeData_lerp(t1.navigationRailTheme, t2.navigationRailTheme, t);
      t135.toString;
      t136 = A.OutlinedButtonThemeData_lerp(t1.outlinedButtonTheme, t2.outlinedButtonTheme, t);
      t136.toString;
      t137 = A.PopupMenuThemeData_lerp(t1.popupMenuTheme, t2.popupMenuTheme, t);
      t137.toString;
      t138 = A.ProgressIndicatorThemeData_lerp(t1.progressIndicatorTheme, t2.progressIndicatorTheme, t);
      t138.toString;
      t139 = t1.radioTheme;
      t140 = t2.radioTheme;
      if (t3)
        t141 = t139.mouseCursor;
      else
        t141 = t140.mouseCursor;
      t142 = A.MaterialStateProperty_lerp(t139.fillColor, t140.fillColor, t, D.ui_Color_lerp$closure(), t20);
      if (t3)
        t143 = t139.materialTapTargetSize;
      else
        t143 = t140.materialTapTargetSize;
      t144 = A.MaterialStateProperty_lerp(t139.overlayColor, t140.overlayColor, t, D.ui_Color_lerp$closure(), t20);
      t145 = D.lerpDouble(t139.splashRadius, t140.splashRadius, t);
      if (t3)
        t139 = t139.visualDensity;
      else
        t139 = t140.visualDensity;
      t140 = t1.sliderTheme;
      t146 = t2.sliderTheme;
      t147 = D.lerpDouble(t140.trackHeight, t146.trackHeight, t);
      t148 = D.Color_lerp(t140.activeTrackColor, t146.activeTrackColor, t);
      t149 = D.Color_lerp(t140.inactiveTrackColor, t146.inactiveTrackColor, t);
      t150 = D.Color_lerp(t140.disabledActiveTrackColor, t146.disabledActiveTrackColor, t);
      t151 = D.Color_lerp(t140.disabledInactiveTrackColor, t146.disabledInactiveTrackColor, t);
      t152 = D.Color_lerp(t140.activeTickMarkColor, t146.activeTickMarkColor, t);
      t153 = D.Color_lerp(t140.inactiveTickMarkColor, t146.inactiveTickMarkColor, t);
      t154 = D.Color_lerp(t140.disabledActiveTickMarkColor, t146.disabledActiveTickMarkColor, t);
      t155 = D.Color_lerp(t140.disabledInactiveTickMarkColor, t146.disabledInactiveTickMarkColor, t);
      t156 = D.Color_lerp(t140.thumbColor, t146.thumbColor, t);
      t157 = D.Color_lerp(t140.overlappingShapeStrokeColor, t146.overlappingShapeStrokeColor, t);
      t158 = D.Color_lerp(t140.disabledThumbColor, t146.disabledThumbColor, t);
      t159 = D.Color_lerp(t140.overlayColor, t146.overlayColor, t);
      t160 = D.Color_lerp(t140.valueIndicatorColor, t146.valueIndicatorColor, t);
      t161 = t3 ? t140.overlayShape : t146.overlayShape;
      t162 = t3 ? t140.tickMarkShape : t146.tickMarkShape;
      t163 = t3 ? t140.thumbShape : t146.thumbShape;
      t164 = t3 ? t140.trackShape : t146.trackShape;
      t165 = t3 ? t140.valueIndicatorShape : t146.valueIndicatorShape;
      t166 = t3 ? t140.rangeTickMarkShape : t146.rangeTickMarkShape;
      t167 = t3 ? t140.rangeThumbShape : t146.rangeThumbShape;
      t168 = t3 ? t140.rangeTrackShape : t146.rangeTrackShape;
      t169 = t3 ? t140.rangeValueIndicatorShape : t146.rangeValueIndicatorShape;
      t170 = t3 ? t140.showValueIndicator : t146.showValueIndicator;
      t171 = D.TextStyle_lerp(t140.valueIndicatorTextStyle, t146.valueIndicatorTextStyle, t);
      t172 = D.lerpDouble(t140.minThumbSeparation, t146.minThumbSeparation, t);
      t173 = t3 ? t140.thumbSelector : t146.thumbSelector;
      t140 = t3 ? t140.mouseCursor : t146.mouseCursor;
      t146 = t1.snackBarTheme;
      t174 = t2.snackBarTheme;
      t175 = D.Color_lerp(t146.backgroundColor, t174.backgroundColor, t);
      t176 = D.Color_lerp(t146.actionTextColor, t174.actionTextColor, t);
      t177 = D.Color_lerp(t146.disabledActionTextColor, t174.disabledActionTextColor, t);
      t178 = D.TextStyle_lerp(t146.contentTextStyle, t174.contentTextStyle, t);
      t179 = D.lerpDouble(t146.elevation, t174.elevation, t);
      t180 = D.ShapeBorder_lerp(t146.shape, t174.shape, t);
      if (t3)
        t146 = t146.behavior;
      else
        t146 = t174.behavior;
      t174 = t1.switchTheme;
      t181 = t2.switchTheme;
      t182 = A.MaterialStateProperty_lerp(t174.thumbColor, t181.thumbColor, t, D.ui_Color_lerp$closure(), t20);
      t183 = A.MaterialStateProperty_lerp(t174.trackColor, t181.trackColor, t, D.ui_Color_lerp$closure(), t20);
      if (t3)
        t184 = t174.materialTapTargetSize;
      else
        t184 = t181.materialTapTargetSize;
      if (t3)
        t185 = t174.mouseCursor;
      else
        t185 = t181.mouseCursor;
      t20 = A.MaterialStateProperty_lerp(t174.overlayColor, t181.overlayColor, t, D.ui_Color_lerp$closure(), t20);
      t174 = D.lerpDouble(t174.splashRadius, t181.splashRadius, t);
      t181 = t1.tabBarTheme;
      t186 = t2.tabBarTheme;
      t187 = D.Decoration_lerp(t181.indicator, t186.indicator, t);
      t188 = t3 ? t181.indicatorSize : t186.indicatorSize;
      t189 = D.Color_lerp(t181.labelColor, t186.labelColor, t);
      t190 = F.EdgeInsetsGeometry_lerp(t181.labelPadding, t186.labelPadding, t);
      t191 = D.TextStyle_lerp(t181.labelStyle, t186.labelStyle, t);
      t192 = D.Color_lerp(t181.unselectedLabelColor, t186.unselectedLabelColor, t);
      t193 = D.TextStyle_lerp(t181.unselectedLabelStyle, t186.unselectedLabelStyle, t);
      t194 = t3 ? t181.splashFactory : t186.splashFactory;
      t195 = t3 ? t181.mouseCursor : t186.mouseCursor;
      t196 = A.TextButtonThemeData_lerp(t1.textButtonTheme, t2.textButtonTheme, t);
      t196.toString;
      t197 = A.TextSelectionThemeData_lerp(t1.textSelectionTheme, t2.textSelectionTheme, t);
      t197.toString;
      t198 = t1.timePickerTheme;
      t199 = t2.timePickerTheme;
      lerpedBorderSide = t198.dayPeriodBorderSide;
      if (lerpedBorderSide == null)
        t200 = t199.dayPeriodBorderSide == null;
      else
        t200 = false;
      if (t200)
        lerpedBorderSide = null;
      else if (lerpedBorderSide == null)
        lerpedBorderSide = t199.dayPeriodBorderSide;
      else {
        t200 = t199.dayPeriodBorderSide;
        if (!(t200 == null)) {
          lerpedBorderSide.toString;
          t200.toString;
          lerpedBorderSide = D.BorderSide_lerp(lerpedBorderSide, t200, t);
        }
      }
      t200 = D.Color_lerp(t198.backgroundColor, t199.backgroundColor, t);
      t201 = D.Color_lerp(t198.hourMinuteTextColor, t199.hourMinuteTextColor, t);
      t202 = D.Color_lerp(t198.hourMinuteColor, t199.hourMinuteColor, t);
      t203 = D.Color_lerp(t198.dayPeriodTextColor, t199.dayPeriodTextColor, t);
      t204 = D.Color_lerp(t198.dayPeriodColor, t199.dayPeriodColor, t);
      t205 = D.Color_lerp(t198.dialHandColor, t199.dialHandColor, t);
      t206 = D.Color_lerp(t198.dialBackgroundColor, t199.dialBackgroundColor, t);
      t207 = D.Color_lerp(t198.dialTextColor, t199.dialTextColor, t);
      t208 = D.Color_lerp(t198.entryModeIconColor, t199.entryModeIconColor, t);
      t209 = D.TextStyle_lerp(t198.hourMinuteTextStyle, t199.hourMinuteTextStyle, t);
      t210 = D.TextStyle_lerp(t198.dayPeriodTextStyle, t199.dayPeriodTextStyle, t);
      t211 = D.TextStyle_lerp(t198.helpTextStyle, t199.helpTextStyle, t);
      t212 = D.ShapeBorder_lerp(t198.shape, t199.shape, t);
      t213 = D.ShapeBorder_lerp(t198.hourMinuteShape, t199.hourMinuteShape, t);
      t103 = t103._as(D.ShapeBorder_lerp(t198.dayPeriodShape, t199.dayPeriodShape, t));
      if (t3)
        t198 = t198.inputDecorationTheme;
      else
        t198 = t199.inputDecorationTheme;
      t199 = A.ToggleButtonsThemeData_lerp(t1.toggleButtonsTheme, t2.toggleButtonsTheme, t);
      t199.toString;
      t214 = A.TooltipThemeData_lerp(t1.tooltipTheme, t2.tooltipTheme, t);
      t214.toString;
      t215 = t1._accentColor;
      t215.toString;
      t216 = t2._accentColor;
      t216.toString;
      t216 = D.Color_lerp(t215, t216, t);
      t215 = t3 ? t1._accentColorBrightness : t2._accentColorBrightness;
      t217 = A.TextTheme_lerp(t1._accentTextTheme, t2._accentTextTheme, t);
      t218 = A.IconThemeData_lerp(t1._accentIconTheme, t2._accentIconTheme, t);
      t219 = t1._buttonColor;
      t219.toString;
      t220 = t2._buttonColor;
      t220.toString;
      t220 = D.Color_lerp(t219, t220, t);
      t219 = t3 ? t1._primaryColorBrightness : t2._primaryColorBrightness;
      t1 = t3 ? t1.androidOverscrollIndicator : t2.androidOverscrollIndicator;
      return D.ThemeData$raw(t216, t215, t218, t217, t1, t77, t4, t26, new D.MaterialBannerThemeData(t56, t62, t63, t64, t65), t29, new D.BottomAppBarTheme(t68, t69, t66), new D.BottomNavigationBarThemeData(t71, t72, t73, t74, t75, t76, t78, t79, t80, t81, t82, t83, t84, t67), t70, t85, t220, t86, t30, t31, new D.CardTheme(t89, t90, t91, t92, t93, t94, t87), new D.CheckboxThemeData(t96, t97, t98, t99, t100, t101, t102, t104, t88), t95, t32, t5, new D.DataTableThemeData(t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t106), t33, new D.DialogTheme(t118, t119, t120, t121, t123, t124, t105, t122), t34, t35, new D.DividerThemeData(t126, t127, t128, t129, t117), t125, t130, t36, t131, t6, true, t132, t37, t38, t39, t40, t52, t41, t7, t133, t8, t134, t135, t136, t9, t10, t137, t42, t219, t43, t44, t53, t54, t138, new D.RadioThemeData(t141, t142, t144, t145, t143, t139), t45, new D.ScrollbarThemeData(t14, t15, t13, t16, t17, t18, t19, t21, t22, t23, t24, t25, t11), t46, t47, t48, new D.SliderThemeData(t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t140), new D.SnackBarThemeData(t175, t176, t177, t178, t179, t180, t146), t49, t12, new D.SwitchThemeData(t182, t183, t184, t185, t20, t174), new D.TabBarTheme(t187, t188, t189, t190, t191, t192, t193, new A._LerpColors(t181.overlayColor, t186.overlayColor, t), t194, t195), t196, t197, t55, new D.TimePickerThemeData(t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t210, t211, t212, t213, t103, lerpedBorderSide, t198), t199, t50, t214, new D.Typography(t58, t59, t60, t61, t57), t51, false, new D.VisualDensity(t28, t27));
    }
  };
  A.AnimatedTheme.prototype = {
    createState$0() {
      return new A._AnimatedThemeState(null, null, G._StateLifecycle_0);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A._AnimatedThemeState.prototype = {
    forEachTween$1(visitor) {
      var t1 = visitor.call$3(this._theme$_data, this._widget.data, new A._AnimatedThemeState_forEachTween_closure());
      t1.toString;
      this._theme$_data = type$.ThemeDataTween._as(t1);
    },
    build$1(context) {
      var t2,
        t1 = this._theme$_data;
      t1.toString;
      t2 = this.get$_animation();
      return new A.Theme(t1.transform$1(0, t2.get$value(t2)), this._widget.child, null);
    }
  };
  A.MaterialBasedCupertinoThemeData.prototype = {
    get$brightness() {
      var t1 = this._cupertinoOverrideTheme.brightness;
      return t1 == null ? this._materialTheme.colorScheme.brightness : t1;
    },
    get$primaryColor() {
      var t1 = this._cupertinoOverrideTheme.primaryColor;
      return t1 == null ? this._materialTheme.colorScheme.primary : t1;
    },
    get$primaryContrastingColor() {
      var t1 = this._cupertinoOverrideTheme.primaryContrastingColor;
      return t1 == null ? this._materialTheme.colorScheme.onPrimary : t1;
    },
    get$scaffoldBackgroundColor() {
      var t1 = this._cupertinoOverrideTheme.scaffoldBackgroundColor;
      return t1 == null ? this._materialTheme.scaffoldBackgroundColor : t1;
    },
    resolveFrom$1(context) {
      return A.MaterialBasedCupertinoThemeData$_(this._materialTheme, this._cupertinoOverrideTheme.resolveFrom$1(context));
    }
  };
  A.ShapeDecoration.prototype = {
    get$padding(_) {
      return this.shape.get$dimensions();
    },
    get$isComplex() {
      return this.shadows != null;
    },
    lerpFrom$2(a, t) {
      if (a instanceof D.BoxDecoration)
        return A.ShapeDecoration_lerp(A.ShapeDecoration_ShapeDecoration$fromBoxDecoration(a), this, t);
      else if (a == null || a instanceof A.ShapeDecoration)
        return A.ShapeDecoration_lerp(type$.nullable_ShapeDecoration._as(a), this, t);
      return this.super$Decoration$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      if (b instanceof D.BoxDecoration)
        return A.ShapeDecoration_lerp(this, A.ShapeDecoration_ShapeDecoration$fromBoxDecoration(b), t);
      else if (b == null || b instanceof A.ShapeDecoration)
        return A.ShapeDecoration_lerp(this, type$.nullable_ShapeDecoration._as(b), t);
      return this.super$Decoration$lerpTo(b, t);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== C.getRuntimeType(_this))
        return false;
      return other instanceof A.ShapeDecoration && J.$eq$(other.color, _this.color) && C.listEquals0(other.shadows, _this.shadows) && other.shape.$eq(0, _this.shape);
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.shadows;
      t1 = t1 == null ? null : C.Object_hashAll(t1);
      return C.Object_hash(_this.color, _this.gradient, _this.image, _this.shape, t1, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue);
    },
    hitTest$3$textDirection(size, position, textDirection) {
      return this.shape.getOuterPath$2$textDirection(new C.Rect(0, 0, 0 + size._dx, 0 + size._dy), textDirection).contains$1(0, position);
    },
    createBoxPainter$1(onChanged) {
      return new A._ShapeDecorationPainter(this, onChanged);
    }
  };
  A._ShapeDecorationPainter.prototype = {
    _precache$2(rect, textDirection) {
      var t1, t2, _this = this;
      if (rect.$eq(0, _this._lastRect) && textDirection == _this._lastTextDirection)
        return;
      if (_this._interiorPaint == null)
        t1 = _this._shape_decoration$_decoration.color != null || false;
      else
        t1 = false;
      if (t1) {
        t1 = $.$get$useCanvasKit() ? C.CkPaint$() : new C.SurfacePaint(new C.SurfacePaintData());
        _this._interiorPaint = t1;
        t2 = _this._shape_decoration$_decoration.color;
        if (t2 != null)
          t1.set$color(0, t2);
      }
      t1 = _this._shape_decoration$_decoration;
      t2 = t1.shadows;
      if (t2 != null) {
        if (_this._shadowCount == null) {
          _this._shadowCount = t2.length;
          _this.___ShapeDecorationPainter__shadowPaints_A = C.List_List$of(new C.MappedListIterable(t2, new A._ShapeDecorationPainter__precache_closure(), C._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Paint>")), true, type$.Paint);
        }
        _this.___ShapeDecorationPainter__shadowPaths_A = C.List_List$of(new C.MappedListIterable(t2, new A._ShapeDecorationPainter__precache_closure0(_this, rect, textDirection), C._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Path>")), true, type$.Path);
      }
      if (_this._interiorPaint != null || _this._shadowCount != null)
        _this.___ShapeDecorationPainter__outerPath_A = t1.shape.getOuterPath$2$textDirection(rect, textDirection);
      _this._lastRect = rect;
      _this._lastTextDirection = textDirection;
    },
    _shape_decoration$_paintShadows$1(canvas) {
      var index, t1, t2, _this = this;
      if (_this._shadowCount != null) {
        index = 0;
        while (true) {
          t1 = _this._shadowCount;
          t1.toString;
          if (!(index < t1))
            break;
          t1 = _this.___ShapeDecorationPainter__shadowPaths_A;
          t1 === $ && C.throwUnnamedLateFieldNI();
          t1 = t1[index];
          t2 = _this.___ShapeDecorationPainter__shadowPaints_A;
          t2 === $ && C.throwUnnamedLateFieldNI();
          canvas.drawPath$2(t1, t2[index]);
          ++index;
        }
      }
    },
    _paintImage$2(canvas, configuration) {
      return;
    },
    dispose$0() {
      this.super$BoxPainter$dispose();
    },
    paint$3(canvas, offset, configuration) {
      var _this = this,
        t1 = configuration.size,
        t2 = offset._dx,
        t3 = offset._dy,
        rect = new C.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy),
        textDirection = configuration.textDirection;
      _this._precache$2(rect, textDirection);
      _this._shape_decoration$_paintShadows$1(canvas);
      t1 = _this._interiorPaint;
      if (t1 != null) {
        t2 = _this.___ShapeDecorationPainter__outerPath_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        canvas.drawPath$2(t2, t1);
      }
      _this._paintImage$2(canvas, configuration);
      _this._shape_decoration$_decoration.shape.paint$3$textDirection(canvas, rect, textDirection);
    }
  };
  A.MultiChildLayoutParentData.prototype = {
    toString$0(_) {
      return this.super$BoxParentData$toString(0) + "; id=" + C.S(this.id);
    }
  };
  A.MultiChildLayoutDelegate.prototype = {
    layoutChild$2(childId, constraints) {
      var t1,
        child = this._idToChild.$index(0, childId);
      child.layout$2$parentUsesSize(constraints, true);
      t1 = child._size;
      t1.toString;
      return t1;
    },
    positionChild$2(childId, offset) {
      var t1 = this._idToChild.$index(0, childId).parentData;
      t1.toString;
      type$.MultiChildLayoutParentData._as(t1).offset = offset;
    },
    _callPerformLayout$2(size, firstChild) {
      var childParentData, t1, t2, t3, t4, child, _this = this,
        previousIdToChild = _this._idToChild;
      try {
        _this._idToChild = C.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.RenderBox);
        for (t1 = type$.MultiChildLayoutParentData, t2 = firstChild; t2 != null; t2 = child) {
          t3 = t2.parentData;
          t3.toString;
          childParentData = t1._as(t3);
          t3 = _this._idToChild;
          t3.toString;
          t4 = childParentData.id;
          t4.toString;
          t3.$indexSet(0, t4, t2);
          child = childParentData.ContainerParentDataMixin_nextSibling;
        }
        _this.performLayout$1(size);
      } finally {
        _this._idToChild = previousIdToChild;
      }
    },
    toString$0(_) {
      return "MultiChildLayoutDelegate";
    }
  };
  A.RenderCustomMultiChildLayoutBox.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.MultiChildLayoutParentData))
        child.parentData = new A.MultiChildLayoutParentData(null, null, E.Offset_0_0);
    },
    set$delegate(newDelegate) {
      var _this = this,
        t1 = _this._custom_layout$_delegate;
      if (t1 === newDelegate)
        return;
      if (C.getRuntimeType(newDelegate) !== C.getRuntimeType(t1) || newDelegate.shouldRelayout$1(t1))
        _this.markNeedsLayout$0();
      _this._custom_layout$_delegate = newDelegate;
      _this._node$_owner != null;
    },
    attach$1(owner) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach(owner);
    },
    detach$0(_) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach(0);
    },
    computeMinIntrinsicWidth$1(height) {
      var t1 = F.BoxConstraints$tightForFinite(height, 1 / 0),
        width = t1.constrain$1(new C.Size(C.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), C.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)))._dx;
      if (isFinite(width))
        return width;
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1 = F.BoxConstraints$tightForFinite(height, 1 / 0),
        width = t1.constrain$1(new C.Size(C.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), C.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)))._dx;
      if (isFinite(width))
        return width;
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1 = F.BoxConstraints$tightForFinite(1 / 0, width),
        height = t1.constrain$1(new C.Size(C.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), C.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)))._dy;
      if (isFinite(height))
        return height;
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1 = F.BoxConstraints$tightForFinite(1 / 0, width),
        height = t1.constrain$1(new C.Size(C.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), C.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)))._dy;
      if (isFinite(height))
        return height;
      return 0;
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(new C.Size(C.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), C.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight)));
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this));
      t1 = t1.constrain$1(new C.Size(C.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), C.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)));
      _this._size = t1;
      _this._custom_layout$_delegate._callPerformLayout$2(t1, _this.ContainerRenderObjectMixin__firstChild);
    },
    paint$2(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    }
  };
  A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.AnnotationEntry.prototype = {
    toString$0(_) {
      return "AnnotationEntry(annotation: " + this.annotation.toString$0(0) + ", localPosition: " + this.localPosition.toString$0(0) + ")";
    }
  };
  A.PerformanceOverlayLayer.prototype = {
    addToScene$1(builder) {
      builder.addPerformanceOverlay$2(this.optionsMask, this._overlayRect);
      builder.setRasterizerTracingThreshold$1(this.rasterizerThreshold);
      builder.setCheckerboardRasterCacheImages$1(false);
      builder.setCheckerboardOffscreenLayers$1(false);
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst) {
      return false;
    }
  };
  A.AnnotatedRegionLayer.prototype = {
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var t2, t3, t4, _this = this,
        isAbsorbed = _this.super$ContainerLayer$findAnnotations(result, localPosition, true, $S),
        t1 = result._entries;
      if (t1.length !== 0 && true)
        return isAbsorbed;
      t2 = _this.size;
      if (t2 != null) {
        t3 = _this.offset;
        t4 = t3._dx;
        t3 = t3._dy;
        t2 = !new C.Rect(t4, t3, t4 + t2._dx, t3 + t2._dy).contains$1(0, localPosition);
      } else
        t2 = false;
      if (t2)
        return isAbsorbed;
      if (C.createRuntimeType(_this.$ti._precomputed1) === C.createRuntimeType($S)) {
        isAbsorbed = isAbsorbed || false;
        t1.push(new A.AnnotationEntry($S._as(_this.value), localPosition.$sub(0, _this.offset), $S._eval$1("AnnotationEntry<0>")));
      }
      return isAbsorbed;
    }
  };
  A.RenderPerformanceOverlay.prototype = {
    set$optionsMask(value) {
      if (value === this._optionsMask)
        return;
      this._optionsMask = value;
      this.markNeedsPaint$0();
    },
    set$rasterizerThreshold(value) {
      if (value === this._rasterizerThreshold)
        return;
      this._rasterizerThreshold = value;
      this.markNeedsPaint$0();
    },
    get$sizedByParent() {
      return true;
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    computeMinIntrinsicWidth$1(height) {
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      return 0;
    },
    get$_intrinsicHeight() {
      var t1 = this._optionsMask,
        result = (t1 | 1) >>> 0 > 0 || (t1 | 2) >>> 0 > 0 ? 80 : 0;
      return (t1 | 4) >>> 0 > 0 || (t1 | 8) >>> 0 > 0 ? result + 80 : result;
    },
    computeMinIntrinsicHeight$1(width) {
      return this.get$_intrinsicHeight();
    },
    computeMaxIntrinsicHeight$1(width) {
      return this.get$_intrinsicHeight();
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(new C.Size(1 / 0, this.get$_intrinsicHeight()));
    },
    paint$2(context, offset) {
      var t5, t6, t7,
        t1 = offset._dx,
        t2 = offset._dy,
        t3 = this._size,
        t4 = t3._dx;
      t3 = t3._dy;
      t5 = this._optionsMask;
      t6 = this._rasterizerThreshold;
      t7 = C.LayerHandle$();
      context.stopRecordingIfNeeded$0();
      context.appendLayer$1(new A.PerformanceOverlayLayer(new C.Rect(t1, t2, t1 + t4, t2 + t3), t5, t6, false, false, C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), t7));
    }
  };
  A.RenderAbsorbPointer.prototype = {
    set$absorbing(value) {
      if (this._absorbing === value)
        return;
      this._absorbing = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics(value) {
      return;
    },
    hitTest$2$position(result, position) {
      return this._absorbing ? this._size.contains$1(0, position) : this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1(visitor) {
      var t2, t3,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = this._ignoringSemantics;
        t3 = this._absorbing;
        t2 = !t3;
      } else
        t2 = false;
      if (t2) {
        t1.toString;
        visitor.call$1(t1);
      }
    }
  };
  A.RenderMergeSemantics.prototype = {
    describeSemanticsConfiguration$1(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._hasBeenAnnotated = config._isMergingSemanticsOfDescendants = config._isSemanticBoundary = true;
    }
  };
  A.RenderAnnotatedRegion.prototype = {
    set$value(_, newValue) {
      if (this._proxy_box$_value.$eq(0, newValue))
        return;
      this._proxy_box$_value = newValue;
      this.markNeedsPaint$0();
    },
    set$sized(value) {
      return;
    },
    paint$2(context, offset) {
      var _this = this,
        t1 = _this._proxy_box$_value,
        t2 = _this._size;
      t2.toString;
      context.pushLayer$3(new A.AnnotatedRegionLayer(t1, t2, offset, C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), C.LayerHandle$(), _this.$ti._eval$1("AnnotatedRegionLayer<1>")), D.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
    },
    get$alwaysNeedsCompositing() {
      return true;
    }
  };
  A.ApplicationSwitcherDescription.prototype = {};
  A.VoidCallbackAction.prototype = {
    invoke$1(intent) {
      intent.callback$0();
      return null;
    }
  };
  A.ActivateIntent.prototype = {};
  A.ButtonActivateIntent.prototype = {};
  A.DismissIntent.prototype = {};
  A.PrioritizedIntents.prototype = {};
  A.PrioritizedAction.prototype = {
    isEnabled$1(_, intent) {
      var t1, _i, candidateIntent, t2, candidateAction,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus == null || $focus._context == null)
        return false;
      for (t1 = type$.Intent, _i = 0; _i < 2; ++_i) {
        candidateIntent = B.List_2WE[_i];
        t2 = $focus._context;
        t2.toString;
        candidateAction = F.Actions_maybeFind(t2, candidateIntent, t1);
        if (candidateAction != null && candidateAction.isEnabled$1(0, candidateIntent)) {
          this.__PrioritizedAction__selectedAction_A = candidateAction;
          this.__PrioritizedAction__selectedIntent_A = candidateIntent;
          return true;
        }
      }
      return false;
    },
    invoke$1(intent) {
      var t2,
        t1 = this.__PrioritizedAction__selectedAction_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t2 = this.__PrioritizedAction__selectedIntent_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t1.invoke$1(t2);
    }
  };
  A.AnnotatedRegion.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderAnnotatedRegion(this.value, true, null, C.LayerHandle$(), this.$ti._eval$1("RenderAnnotatedRegion<1>"));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$value(0, this.value);
      renderObject.set$sized(true);
    }
  };
  A.WidgetsApp.prototype = {
    createState$0() {
      return new A._WidgetsAppState(G._StateLifecycle_0);
    }
  };
  A._WidgetsAppState.prototype = {
    get$_initialRouteName() {
      var t1, t2;
      $.WidgetsBinding__instance.toString;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      if (t1.get$defaultRouteName() !== "/") {
        $.WidgetsBinding__instance.toString;
        t1 = t1.get$defaultRouteName();
      } else {
        t2 = this._widget.initialRoute;
        $.WidgetsBinding__instance.toString;
        t1 = t1.get$defaultRouteName();
        t1 = t1;
      }
      return t1;
    },
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this._updateRouting$0();
      $.WidgetsBinding__instance.toString;
      _this._app$_locale = _this._resolveLocales$2($.$get$EnginePlatformDispatcher__instance().configuration.locales, _this._widget.supportedLocales);
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(_this);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateRouting$1$oldWidget(oldWidget);
    },
    dispose$0() {
      E.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      var t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    _clearRouterResource$0() {
      var t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0();
      this._defaultBackButtonDispatcher = this._defaultRouteInformationProvider = null;
    },
    _updateRouting$1$oldWidget(oldWidget) {
      var t1, _this = this;
      _this._widget.toString;
      if (_this.get$_usesNavigator()) {
        _this._clearRouterResource$0();
        if (_this._app$_navigator != null) {
          _this._widget.toString;
          oldWidget.toString;
          t1 = false;
        } else
          t1 = true;
        if (t1) {
          t1 = _this._widget.navigatorKey;
          _this._app$_navigator = new C.GlobalObjectKey(_this, type$.GlobalObjectKey_NavigatorState);
        }
      } else {
        _this._clearRouterResource$0();
        _this._app$_navigator = null;
      }
    },
    _updateRouting$0() {
      return this._updateRouting$1$oldWidget(null);
    },
    get$_usesNavigator() {
      var t1 = this._widget;
      if (t1.home == null) {
        t1 = t1.routes;
        t1 = t1 == null ? null : t1.get$isNotEmpty(t1);
        if (t1 !== true) {
          this._widget.toString;
          t1 = false;
        } else
          t1 = true;
      } else
        t1 = true;
      return t1;
    },
    _onGenerateRoute$1(settings) {
      var _this = this,
        $name = settings.name,
        pageContentBuilder = $name === "/" && _this._widget.home != null ? new A._WidgetsAppState__onGenerateRoute_closure(_this) : _this._widget.routes.$index(0, $name);
      if (pageContentBuilder != null)
        return _this._widget.pageRouteBuilder.call$1$2(settings, pageContentBuilder, type$.dynamic);
      _this._widget.toString;
      return null;
    },
    _onUnknownRoute$1(settings) {
      return this._widget.onUnknownRoute.call$1(settings);
    },
    didPopRoute$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPopRoute$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              t1 = $async$self._app$_navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $navigator.maybePop$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$didPopRoute$0, $async$completer);
    },
    didPushRoute$1(route) {
      return this.didPushRoute$body$_WidgetsAppState(route);
    },
    didPushRoute$body$_WidgetsAppState(route) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPushRoute$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              t1 = $async$self._app$_navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $navigator._routeNamed$1$2$arguments(route, null, type$.nullable_Object);
              t1.toString;
              $navigator.push$1(t1);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$didPushRoute$1, $async$completer);
    },
    _resolveLocales$2(preferredLocales, supportedLocales) {
      this._widget.toString;
      return A.basicLocaleListResolution(preferredLocales, supportedLocales);
    },
    didChangeLocales$1(locales) {
      var _this = this,
        newLocale = _this._resolveLocales$2(locales, _this._widget.supportedLocales);
      if (!newLocale.$eq(0, _this._app$_locale))
        _this.setState$1(new A._WidgetsAppState_didChangeLocales_closure(_this, newLocale));
    },
    build$1(context) {
      var t2, t3, t4, t5, result, performanceOverlay, t6, child, child0, _this = this, _null = null, t1 = {};
      t1.routing = null;
      t2 = _this._widget;
      t2.toString;
      if (_this.get$_usesNavigator()) {
        t2 = _this._app$_navigator;
        t3 = _this.get$_initialRouteName();
        t4 = _this._widget;
        t5 = t4.navigatorObservers;
        t5.toString;
        t1.routing = new A.Navigator(t3, _this.get$_onGenerateRoute(), _this.get$_onUnknownRoute(), t5, "nav", A.navigator_Navigator_defaultGenerateInitialRoutes$closure(), true, t2);
        t2 = t4;
      } else {
        t2 = _this._widget;
        t2.toString;
      }
      t1.result = null;
      result = new F.Builder(new A._WidgetsAppState_build_closure(t1, _this), _null);
      t1.result = result;
      result = D.DefaultTextStyle$(result, _null, _null, G.TextOverflow_0, true, t2.textStyle, _null, _null, G.TextWidthBasis_0);
      t1.result = result;
      t2 = $.WidgetsApp_showPerformanceOverlayOverride;
      if (t2)
        performanceOverlay = new A.PerformanceOverlay(15, false, false, _null);
      else
        performanceOverlay = _null;
      if (performanceOverlay != null)
        t1.result = D.Stack$(G.AlignmentDirectional_m1_m1, C._setArrayType([result, D.Positioned$(_null, performanceOverlay, _null, _null, 0, 0, 0, _null)], type$.JSArray_Widget), G.StackFit_0, _null, _null);
      t2 = _this._widget;
      t3 = t2.title;
      t2 = t2.color;
      t2 = C.Color$fromARGB(255, t2.get$value(t2) >>> 16 & 255, t2.get$value(t2) >>> 8 & 255, t2.get$value(t2) & 255);
      t1 = t1.result;
      _this._widget.toString;
      t4 = _this._app$_locale;
      t4.toString;
      t5 = type$.JSArray_LocalizationsDelegate_dynamic;
      t6 = C._setArrayType([], t5);
      E.JSArray_methods.addAll$1(t6, _this._widget.localizationsDelegates);
      t6.push(B.C__WidgetsLocalizationsDelegate);
      t5 = C._setArrayType(t6.slice(0), t5);
      child = new A.Localizations(t4, t5, new A.Title(t3, t2, t1, _null), _null);
      D.MediaQuery_maybeOf(context);
      t1 = _this._widget;
      child0 = new A._MediaQueryFromWindow(child, _null);
      child = child0;
      t1 = t1.restorationScopeId;
      t2 = A.WidgetsApp_defaultShortcuts();
      t3 = $.$get$WidgetsApp_defaultActions();
      return new A.RootRestorationScope(new A.SharedAppData(F.Shortcuts$(new A.DefaultTextEditingShortcuts(F.Actions$(t3, new A.FocusTraversalGroup(new A.ReadingOrderTraversalPolicy(C.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData)), new A.ShortcutRegistrar(child, _null), _null)), _null), "<Default WidgetsApp Shortcuts>", t2), _null), t1, _null);
    }
  };
  A.__WidgetsAppState_State_WidgetsBindingObserver.prototype = {};
  A.ConnectionState.prototype = {
    toString$0(_) {
      return "ConnectionState." + this._core$_name;
    }
  };
  A.AsyncSnapshot.prototype = {
    toString$0(_) {
      var _this = this;
      return "AsyncSnapshot(" + _this.connectionState.toString$0(0) + ", " + C.S(_this.data) + ", " + C.S(_this.error) + ", " + C.S(_this.stackTrace) + ")";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return _this.$ti._is(other) && other.connectionState === _this.connectionState && J.$eq$(other.data, _this.data) && J.$eq$(other.error, _this.error) && other.stackTrace == _this.stackTrace;
    },
    get$hashCode(_) {
      return C.Object_hash(this.connectionState, this.data, this.error, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A.FutureBuilder.prototype = {
    createState$0() {
      return new A._FutureBuilderState(G._StateLifecycle_0, this.$ti._eval$1("_FutureBuilderState<1>"));
    }
  };
  A._FutureBuilderState.prototype = {
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this._widget.toString;
      _this.___FutureBuilderState__snapshot_A = new A.AsyncSnapshot(B.ConnectionState_0, null, null, null, _this.$ti._eval$1("AsyncSnapshot<1>"));
      _this._async0$_subscribe$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (oldWidget.future != _this._widget.future) {
        if (_this._activeCallbackIdentity != null) {
          _this._activeCallbackIdentity = null;
          t1 = _this.___FutureBuilderState__snapshot_A;
          t1 === $ && C.throwUnnamedLateFieldNI();
          _this.___FutureBuilderState__snapshot_A = new A.AsyncSnapshot(B.ConnectionState_0, t1.data, t1.error, t1.stackTrace, t1.$ti);
        }
        _this._async0$_subscribe$0();
      }
    },
    build$1(context) {
      var t2,
        t1 = this._widget;
      t1.toString;
      t2 = this.___FutureBuilderState__snapshot_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      return t1.builder.call$2(context, t2);
    },
    dispose$0() {
      this._activeCallbackIdentity = null;
      this.super$State$dispose();
    },
    _async0$_subscribe$0() {
      var callbackIdentity, _this = this,
        t1 = _this._widget.future;
      if (t1 != null) {
        callbackIdentity = _this._activeCallbackIdentity = new C.Object();
        t1.then$1$2$onError(new A._FutureBuilderState__subscribe_closure(_this, callbackIdentity), new A._FutureBuilderState__subscribe_closure0(_this, callbackIdentity), type$.void);
        t1 = _this.___FutureBuilderState__snapshot_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        _this.___FutureBuilderState__snapshot_A = new A.AsyncSnapshot(B.ConnectionState_1, t1.data, t1.error, t1.stackTrace, t1.$ti);
      }
    }
  };
  A.LayoutId.prototype = {
    applyParentData$1(renderObject) {
      var t2, targetParent,
        t1 = renderObject.parentData;
      t1.toString;
      type$.MultiChildLayoutParentData._as(t1);
      t2 = this.id;
      if (t1.id !== t2) {
        t1.id = t2;
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.CustomMultiChildLayout.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderCustomMultiChildLayoutBox(this.delegate, 0, null, null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$delegate(this.delegate);
    }
  };
  A.AbsorbPointer.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderAbsorbPointer(false, null, null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$absorbing(false);
      renderObject.set$ignoringSemantics(null);
    }
  };
  A.MergeSemantics.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderMergeSemantics(null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    }
  };
  A.DefaultTextEditingShortcuts.prototype = {
    build$1(context) {
      var result = F.Shortcuts$(this.child, "<Web Disabling Text Editing Shortcuts>", $.$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts());
      return F.Shortcuts$(result, "<Default Text Editing Shortcuts>", A.DefaultTextEditingShortcuts__shortcuts());
    }
  };
  A._FocusTraversalGroupInfo.prototype = {};
  A.FocusTraversalPolicy.prototype = {
    _findInitialFocus$2$fromEnd(currentNode, fromEnd) {
      var sorted,
        scope = currentNode.get$nearestScope(),
        t1 = scope._focusedChildren,
        candidate = t1.length !== 0 ? E.JSArray_methods.get$last(t1) : null;
      if (candidate == null && scope.get$descendants().length !== 0) {
        sorted = this._sortAllDescendants$2(scope, currentNode);
        if (sorted.length === 0)
          candidate = null;
        else
          candidate = fromEnd ? E.JSArray_methods.get$last(sorted) : E.JSArray_methods.get$first(sorted);
      }
      return candidate == null ? currentNode : candidate;
    },
    _findInitialFocus$1(currentNode) {
      return this._findInitialFocus$2$fromEnd(currentNode, false);
    },
    invalidateScopeData$1(node) {
    },
    changedScope$2$node$oldScope(node, oldScope) {
    },
    next$1(_, currentNode) {
      return this._moveFocus$2$forward(currentNode, true);
    },
    previous$1(currentNode) {
      return this._moveFocus$2$forward(currentNode, false);
    },
    _getMarker$1(context) {
      var t1;
      if (context == null)
        t1 = null;
      else {
        t1 = context.getElementForInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker);
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1._widget;
          t1.toString;
        }
      }
      return type$.nullable__FocusTraversalGroupMarker._as(t1);
    },
    _sortAllDescendants$2(scope, currentNode) {
      var groups, t2, t3, t4, t5, t6, _i, node, t7, ancestor, groupNode, parentContext, parentNode, sortedDescendants, _null = null,
        scopeGroupMarker = this._getMarker$1(scope._context),
        t1 = scopeGroupMarker == null,
        defaultPolicy = t1 ? _null : scopeGroupMarker.policy;
      if (defaultPolicy == null)
        defaultPolicy = new A.ReadingOrderTraversalPolicy(C.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData));
      groups = C.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_FocusNode, type$._FocusTraversalGroupInfo);
      for (t2 = scope.get$descendants(), t3 = t2.length, t4 = type$.nullable__FocusTraversalGroupMarker, t5 = type$._FocusTraversalGroupMarker, t6 = type$.JSArray_FocusNode, _i = 0; _i < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        node = t2[_i];
        t7 = node._context;
        if (t7 == null)
          t7 = _null;
        else {
          t7 = t7._inheritedWidgets;
          ancestor = t7 == null ? _null : t7.$index(0, C.createRuntimeType(t5));
          if (ancestor == null)
            t7 = _null;
          else {
            t7 = ancestor._widget;
            t7.toString;
          }
        }
        t4._as(t7);
        groupNode = t7 == null ? _null : t7.focusNode;
        if (J.$eq$(node, groupNode)) {
          t7 = groupNode._context;
          t7.toString;
          parentContext = A._getAncestor(t7, 2);
          if (parentContext == null)
            t7 = _null;
          else {
            t7 = parentContext._inheritedWidgets;
            ancestor = t7 == null ? _null : t7.$index(0, C.createRuntimeType(t5));
            if (ancestor == null)
              t7 = _null;
            else {
              t7 = ancestor._widget;
              t7.toString;
            }
          }
          t4._as(t7);
          parentNode = t7 == null ? _null : t7.focusNode;
          if (groups.$index(0, parentNode) == null)
            groups.$indexSet(0, parentNode, A._FocusTraversalGroupInfo$(t7, defaultPolicy, C._setArrayType([], t6)));
          groups.$index(0, parentNode).members.push(groupNode);
          continue;
        }
        if (node.get$canRequestFocus() && !node.get$skipTraversal()) {
          if (groups.$index(0, groupNode) == null)
            groups.$indexSet(0, groupNode, A._FocusTraversalGroupInfo$(t7, defaultPolicy, C._setArrayType([], t6)));
          groups.$index(0, groupNode).members.push(node);
        }
      }
      for (t2 = C.LinkedHashMapKeyIterator$(groups, groups._modifications); t2.moveNext$0();) {
        t3 = t2.__js_helper$_current;
        t4 = groups.$index(0, t3).policy.sortDescendants$2(groups.$index(0, t3).members, currentNode);
        t4 = C._setArrayType(t4.slice(0), C._arrayInstanceType(t4));
        E.JSArray_methods.clear$0(groups.$index(0, t3).members);
        E.JSArray_methods.addAll$1(groups.$index(0, t3).members, t4);
      }
      sortedDescendants = C._setArrayType([], t6);
      if (groups._length !== 0)
        t2 = groups.containsKey$1(0, t1 ? _null : scopeGroupMarker.focusNode);
      else
        t2 = false;
      if (t2) {
        t2 = groups.$index(0, t1 ? _null : scopeGroupMarker.focusNode);
        t2.toString;
        new A.FocusTraversalPolicy__sortAllDescendants_visitGroups(groups, sortedDescendants).call$1(t2);
      }
      if (!!sortedDescendants.fixed$length)
        C.throwExpression(C.UnsupportedError$("removeWhere"));
      E.JSArray_methods._removeWhere$2(sortedDescendants, new A.FocusTraversalPolicy__sortAllDescendants_closure(), true);
      return sortedDescendants;
    },
    _moveFocus$2$forward(currentNode, $forward) {
      var t2, focusedChild, firstFocus, sortedNodes, previousNode, previousNode0, _this = this,
        t1 = currentNode.get$nearestScope();
      t1.toString;
      _this.super$FocusTraversalPolicy$invalidateScopeData(t1);
      _this.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t1);
      t2 = t1._focusedChildren;
      focusedChild = t2.length !== 0 ? E.JSArray_methods.get$last(t2) : null;
      if (focusedChild == null) {
        firstFocus = $forward ? _this._findInitialFocus$1(currentNode) : _this._findInitialFocus$2$fromEnd(currentNode, true);
        A._focusAndEnsureVisible(firstFocus, $forward ? G.ScrollPositionAlignmentPolicy_1 : G.ScrollPositionAlignmentPolicy_2);
        return true;
      }
      sortedNodes = _this._sortAllDescendants$2(t1, currentNode);
      if (sortedNodes.length === 0)
        return false;
      if ($forward && focusedChild === E.JSArray_methods.get$last(sortedNodes)) {
        A._focusAndEnsureVisible(E.JSArray_methods.get$first(sortedNodes), G.ScrollPositionAlignmentPolicy_1);
        return true;
      }
      if (!$forward && focusedChild === E.JSArray_methods.get$first(sortedNodes)) {
        A._focusAndEnsureVisible(E.JSArray_methods.get$last(sortedNodes), G.ScrollPositionAlignmentPolicy_2);
        return true;
      }
      for (t1 = J.get$iterator$ax($forward ? sortedNodes : new C.ReversedListIterable(sortedNodes, C._arrayInstanceType(sortedNodes)._eval$1("ReversedListIterable<1>"))), previousNode = null; t1.moveNext$0(); previousNode = previousNode0) {
        previousNode0 = t1.get$current(t1);
        if (previousNode == focusedChild) {
          t1 = $forward ? G.ScrollPositionAlignmentPolicy_1 : G.ScrollPositionAlignmentPolicy_2;
          previousNode0.requestFocus$0();
          t2 = previousNode0._context;
          t2.toString;
          A.Scrollable_ensureVisible(t2, 1, t1);
          return true;
        }
      }
      return false;
    }
  };
  A._DirectionalPolicyDataEntry.prototype = {};
  A._DirectionalPolicyData.prototype = {};
  A.DirectionalFocusTraversalPolicyMixin.prototype = {
    findFirstFocusInDirection$2(currentNode, direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, true);
        case 2:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, true);
        case 3:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, false);
        case 1:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, false);
      }
    },
    _sortAndFindInitial$3$first$vertical(currentNode, first, vertical) {
      var sorted = currentNode.get$nearestScope().get$traversalDescendants().toList$0(0);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(vertical, first), type$.FocusNode);
      if (sorted.length !== 0)
        return E.JSArray_methods.get$first(sorted);
      return null;
    },
    _sortAndFilterHorizontally$3(direction, target, nearestScope) {
      var result,
        sorted = nearestScope.get$traversalDescendants().toList$0(0);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(), type$.FocusNode);
      switch (direction.index) {
        case 3:
          result = new C.WhereIterable(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(target), C._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          break;
        case 1:
          result = new C.WhereIterable(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(target), C._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          break;
        case 0:
        case 2:
          result = null;
          break;
        default:
          result = null;
      }
      return result;
    },
    _sortAndFilterVertically$3(direction, target, nodes) {
      var sorted = nodes.toList$0(0);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(), type$.FocusNode);
      switch (direction.index) {
        case 0:
          return new C.WhereIterable(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(target), C._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
        case 2:
          return new C.WhereIterable(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(target), C._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
        case 3:
        case 1:
          break;
      }
      return null;
    },
    _popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild) {
      var t3, popOrInvalidate, _this = this,
        t1 = _this.DirectionalFocusTraversalPolicyMixin__policyData,
        policyData = t1.$index(0, nearestScope),
        t2 = policyData != null;
      if (t2) {
        t3 = policyData.history;
        t3 = t3.length !== 0 && E.JSArray_methods.get$first(t3).direction !== direction;
      } else
        t3 = false;
      if (t3) {
        t3 = policyData.history;
        if (E.JSArray_methods.get$last(t3).node._focus_manager$_parent == null) {
          _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
          t1.remove$1(0, nearestScope);
          return false;
        }
        popOrInvalidate = new A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(_this, policyData, nearestScope);
        switch (direction.index) {
          case 2:
          case 0:
            switch (E.JSArray_methods.get$first(t3).direction.index) {
              case 3:
              case 1:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
              case 0:
              case 2:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
            }
            break;
          case 3:
          case 1:
            switch (E.JSArray_methods.get$first(t3).direction.index) {
              case 3:
              case 1:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
              case 0:
              case 2:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
            }
            break;
        }
      }
      if (t2 && policyData.history.length === 0) {
        _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
        t1.remove$1(0, nearestScope);
      }
      return false;
    },
    inDirection$2(currentNode, direction) {
      var firstFocus, focusedScrollable, eligibleNodes, filteredEligibleNodes, found, sorted, t2, inBand, policyData, newEntry, _this = this, _null = null,
        nearestScope = currentNode.get$nearestScope(),
        t1 = nearestScope._focusedChildren,
        focusedChild = t1.length !== 0 ? E.JSArray_methods.get$last(t1) : _null;
      if (focusedChild == null) {
        firstFocus = _this.findFirstFocusInDirection$2(currentNode, direction);
        if (firstFocus == null)
          firstFocus = currentNode;
        switch (direction.index) {
          case 0:
          case 3:
            A._focusAndEnsureVisible(firstFocus, G.ScrollPositionAlignmentPolicy_2);
            break;
          case 1:
          case 2:
            A._focusAndEnsureVisible(firstFocus, G.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      if (_this._popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild))
        return true;
      t1 = focusedChild._context;
      t1.toString;
      focusedScrollable = D.Scrollable_of(t1);
      t1 = direction.index;
      switch (t1) {
        case 2:
        case 0:
          eligibleNodes = _this._sortAndFilterVertically$3(direction, focusedChild.get$rect(focusedChild), nearestScope.get$traversalDescendants());
          if (focusedScrollable != null && !focusedScrollable._scrollable$_position.get$atEdge()) {
            eligibleNodes.toString;
            filteredEligibleNodes = new C.WhereIterable(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure(focusedScrollable), eligibleNodes.$ti._eval$1("WhereIterable<Iterable.E>"));
            if (!filteredEligibleNodes.get$isEmpty(filteredEligibleNodes))
              eligibleNodes = filteredEligibleNodes;
          }
          if (!eligibleNodes.get$iterator(eligibleNodes).moveNext$0()) {
            found = _null;
            break;
          }
          sorted = C.List_List$of(eligibleNodes, true, C._instanceType(eligibleNodes)._eval$1("Iterable.E"));
          if (direction === H.TraversalDirection_0) {
            t2 = C._arrayInstanceType(sorted)._eval$1("ReversedListIterable<1>");
            sorted = C.List_List$of(new C.ReversedListIterable(sorted, t2), true, t2._eval$1("ListIterable.E"));
          }
          inBand = new C.WhereIterable(sorted, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0(new C.Rect(focusedChild.get$rect(focusedChild).left, -1 / 0, focusedChild.get$rect(focusedChild).right, 1 / 0)), C._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          if (!inBand.get$isEmpty(inBand)) {
            found = inBand.get$first(inBand);
            break;
          }
          A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure1(focusedChild), type$.FocusNode);
          found = E.JSArray_methods.get$first(sorted);
          break;
        case 1:
        case 3:
          eligibleNodes = _this._sortAndFilterHorizontally$3(direction, focusedChild.get$rect(focusedChild), nearestScope);
          if (focusedScrollable != null && !focusedScrollable._scrollable$_position.get$atEdge()) {
            eligibleNodes.toString;
            filteredEligibleNodes = new C.WhereIterable(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure2(focusedScrollable), eligibleNodes.$ti._eval$1("WhereIterable<Iterable.E>"));
            if (!filteredEligibleNodes.get$isEmpty(filteredEligibleNodes))
              eligibleNodes = filteredEligibleNodes;
          }
          if (!eligibleNodes.get$iterator(eligibleNodes).moveNext$0()) {
            found = _null;
            break;
          }
          sorted = C.List_List$of(eligibleNodes, true, C._instanceType(eligibleNodes)._eval$1("Iterable.E"));
          if (direction === B.TraversalDirection_3) {
            t2 = C._arrayInstanceType(sorted)._eval$1("ReversedListIterable<1>");
            sorted = C.List_List$of(new C.ReversedListIterable(sorted, t2), true, t2._eval$1("ListIterable.E"));
          }
          inBand = new C.WhereIterable(sorted, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure3(new C.Rect(-1 / 0, focusedChild.get$rect(focusedChild).top, 1 / 0, focusedChild.get$rect(focusedChild).bottom)), C._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          if (!inBand.get$isEmpty(inBand)) {
            found = inBand.get$first(inBand);
            break;
          }
          A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure4(focusedChild), type$.FocusNode);
          found = E.JSArray_methods.get$first(sorted);
          break;
        default:
          found = _null;
      }
      if (found != null) {
        t2 = _this.DirectionalFocusTraversalPolicyMixin__policyData;
        policyData = t2.$index(0, nearestScope);
        newEntry = new A._DirectionalPolicyDataEntry(direction, focusedChild);
        if (policyData != null)
          policyData.history.push(newEntry);
        else
          t2.$indexSet(0, nearestScope, new A._DirectionalPolicyData(C._setArrayType([newEntry], type$.JSArray__DirectionalPolicyDataEntry)));
        switch (t1) {
          case 0:
          case 3:
            A._focusAndEnsureVisible(found, G.ScrollPositionAlignmentPolicy_2);
            break;
          case 2:
          case 1:
            A._focusAndEnsureVisible(found, G.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      return false;
    }
  };
  A._ReadingOrderSortData.prototype = {
    get$directionalAncestors() {
      var t1 = this._directionalAncestors;
      if (t1 == null) {
        t1 = this.node._context;
        t1.toString;
        t1 = this._directionalAncestors = new A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors().call$1(t1);
      }
      t1.toString;
      return t1;
    }
  };
  A._ReadingOrderDirectionalGroupData.prototype = {
    get$rect(_) {
      var t1, t2, t3, t4, _this = this;
      if (_this._focus_traversal$_rect == null)
        for (t1 = _this.members, t1 = new C.MappedListIterable(t1, new A._ReadingOrderDirectionalGroupData_rect_closure(), C._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Rect>")), t1 = new C.ListIterator(t1, t1.get$length(t1)), t2 = C._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          if (t3 == null)
            t3 = t2._as(t3);
          t4 = _this._focus_traversal$_rect;
          if (t4 == null) {
            _this._focus_traversal$_rect = t3;
            t4 = t3;
          }
          _this._focus_traversal$_rect = t4.expandToInclude$1(t3);
        }
      t1 = _this._focus_traversal$_rect;
      t1.toString;
      return t1;
    }
  };
  A.ReadingOrderTraversalPolicy.prototype = {
    _collectDirectionalityGroups$1(candidates) {
      var t2, _i, candidate, currentDirection0, t3,
        currentDirection = E.JSArray_methods.get$first(candidates).directionality,
        t1 = type$.JSArray__ReadingOrderSortData,
        currentGroup = C._setArrayType([], t1),
        result = C._setArrayType([], type$.JSArray__ReadingOrderDirectionalGroupData);
      for (t2 = candidates.length, _i = 0; _i < candidates.length; candidates.length === t2 || (0, C.throwConcurrentModificationError)(candidates), ++_i) {
        candidate = candidates[_i];
        currentDirection0 = candidate.directionality;
        if (currentDirection0 == currentDirection) {
          currentGroup.push(candidate);
          continue;
        }
        result.push(new A._ReadingOrderDirectionalGroupData(currentGroup));
        currentGroup = C._setArrayType([candidate], t1);
        currentDirection = currentDirection0;
      }
      if (currentGroup.length !== 0)
        result.push(new A._ReadingOrderDirectionalGroupData(currentGroup));
      for (t1 = result.length, _i = 0; _i < result.length; result.length === t1 || (0, C.throwConcurrentModificationError)(result), ++_i) {
        t2 = result[_i].members;
        if (t2.length === 1)
          continue;
        t3 = E.JSArray_methods.get$first(t2).directionality;
        t3.toString;
        A._ReadingOrderSortData_sortWithDirectionality(t2, t3);
      }
      return result;
    },
    _pickNext$1(candidates) {
      var topmost, inBandOfTop, nearestCommonDirectionality, bandGroups;
      A.mergeSort(candidates, new A.ReadingOrderTraversalPolicy__pickNext_closure(), type$._ReadingOrderSortData);
      topmost = E.JSArray_methods.get$first(candidates);
      inBandOfTop = new A.ReadingOrderTraversalPolicy__pickNext_inBand().call$2(topmost, candidates);
      if (J.get$length$asx(inBandOfTop) <= 1)
        return topmost;
      nearestCommonDirectionality = A._ReadingOrderSortData_commonDirectionalityOf(inBandOfTop);
      nearestCommonDirectionality.toString;
      A._ReadingOrderSortData_sortWithDirectionality(inBandOfTop, nearestCommonDirectionality);
      bandGroups = this._collectDirectionalityGroups$1(inBandOfTop);
      if (bandGroups.length === 1)
        return E.JSArray_methods.get$first(E.JSArray_methods.get$first(bandGroups).members);
      A._ReadingOrderDirectionalGroupData_sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return E.JSArray_methods.get$first(E.JSArray_methods.get$first(bandGroups).members);
    },
    sortDescendants$2(descendants, currentNode) {
      var t1, t2, t3, t4, _i, node, t5, t6, ancestor, sortedList, current, next;
      if (descendants.length <= 1)
        return descendants;
      t1 = C._setArrayType([], type$.JSArray__ReadingOrderSortData);
      for (t2 = descendants.length, t3 = type$.nullable_Directionality, t4 = type$.Directionality, _i = 0; _i < descendants.length; descendants.length === t2 || (0, C.throwConcurrentModificationError)(descendants), ++_i) {
        node = descendants[_i];
        t5 = node.get$rect(node);
        t6 = node._context._inheritedWidgets;
        ancestor = t6 == null ? null : t6.$index(0, C.createRuntimeType(t4));
        if (ancestor == null)
          t6 = null;
        else {
          t6 = ancestor._widget;
          t6.toString;
        }
        t3._as(t6);
        t1.push(new A._ReadingOrderSortData(t6 == null ? null : t6.textDirection, t5, node));
      }
      sortedList = C._setArrayType([], type$.JSArray_FocusNode);
      current = this._pickNext$1(t1);
      sortedList.push(current.node);
      E.JSArray_methods.remove$1(t1, current);
      for (; t1.length !== 0;) {
        next = this._pickNext$1(t1);
        sortedList.push(next.node);
        E.JSArray_methods.remove$1(t1, next);
      }
      return sortedList;
    }
  };
  A.FocusTraversalGroup.prototype = {
    createState$0() {
      return new A._FocusTraversalGroupState(G._StateLifecycle_0);
    }
  };
  A._FocusTraversalGroupState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.focusNode = C.FocusNode$(false, "FocusTraversalGroup", true, true, null, null, true);
    },
    dispose$0() {
      var t1 = this.focusNode;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    build$1(context) {
      var _null = null,
        t1 = this._widget,
        t2 = t1.policy,
        t3 = this.focusNode;
      t3.toString;
      return new A._FocusTraversalGroupMarker(t2, t3, F.Focus$(false, false, t1.child, _null, true, true, t3, false, _null, _null, _null, _null, true), _null);
    }
  };
  A._FocusTraversalGroupMarker.prototype = {
    updateShouldNotify$1(oldWidget) {
      return false;
    }
  };
  A.RequestFocusAction.prototype = {
    invoke$1(intent) {
      A._focusAndEnsureVisible(intent.get$focusNode(intent), G.ScrollPositionAlignmentPolicy_0);
    }
  };
  A.NextFocusIntent.prototype = {};
  A.NextFocusAction.prototype = {
    invoke$1(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      t1._context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker).policy._moveFocus$2$forward(t1, true);
    }
  };
  A.PreviousFocusIntent.prototype = {};
  A.PreviousFocusAction.prototype = {
    invoke$1(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      t1._context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker).policy._moveFocus$2$forward(t1, false);
    }
  };
  A._FocusTraversalPolicy_Object_Diagnosticable.prototype = {};
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin.prototype = {
    changedScope$2$node$oldScope(node, oldScope) {
      var t1;
      this.super$FocusTraversalPolicy$changedScope(node, oldScope);
      t1 = this.DirectionalFocusTraversalPolicyMixin__policyData.$index(0, oldScope);
      if (t1 != null) {
        t1 = t1.history;
        if (!!t1.fixed$length)
          C.throwExpression(C.UnsupportedError$("removeWhere"));
        E.JSArray_methods._removeWhere$2(t1, new A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(node), true);
      }
    }
  };
  A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable.prototype = {};
  A.__ReadingOrderSortData_Object_Diagnosticable.prototype = {};
  A.HeroFlightDirection.prototype = {
    toString$0(_) {
      return "HeroFlightDirection." + this._core$_name;
    }
  };
  A.Hero.prototype = {
    createState$0() {
      return new A._HeroState(new D.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), G._StateLifecycle_0);
    }
  };
  A._HeroState.prototype = {
    startFlight$1$shouldIncludedChildInPlaceholder(shouldIncludedChildInPlaceholder) {
      var t1, _this = this;
      _this._shouldIncludeChild = shouldIncludedChildInPlaceholder;
      t1 = _this._framework$_element.get$renderObject();
      t1.toString;
      _this.setState$1(new A._HeroState_startFlight_closure(_this, type$.RenderBox._as(t1)));
    },
    startFlight$0() {
      return this.startFlight$1$shouldIncludedChildInPlaceholder(false);
    },
    endFlight$1$keepPlaceholder(keepPlaceholder) {
      var _this = this;
      if (keepPlaceholder || _this._placeholderSize == null)
        return;
      _this._placeholderSize = null;
      if (_this._framework$_element != null)
        _this.setState$1(new A._HeroState_endFlight_closure());
    },
    endFlight$0() {
      return this.endFlight$1$keepPlaceholder(false);
    },
    build$1(context) {
      var t3, _this = this, _null = null,
        t1 = _this._placeholderSize,
        t2 = t1 == null,
        showPlaceholder = !t2;
      if (showPlaceholder)
        _this._widget.toString;
      if (showPlaceholder && !_this._shouldIncludeChild) {
        t2 = t1._dx;
        return D.SizedBox$(_null, t1._dy, t2);
      }
      t3 = t2 ? _null : t1._dx;
      t1 = t2 ? _null : t1._dy;
      return D.SizedBox$(new F.Offstage(showPlaceholder, new A.TickerMode(t2, new D.KeyedSubtree(_this._widget.child, _this._heroes$_key), _null), _null), t1, t3);
    }
  };
  A._HeroFlightManifest.prototype = {
    get$animation(_) {
      var t1, _this = this;
      if (_this.type === B.HeroFlightDirection_0) {
        t1 = _this.toRoute._animationProxy;
        t1.toString;
      } else {
        t1 = _this.fromRoute._animationProxy;
        t1.toString;
      }
      return D.CurvedAnimation$(G.Cubic_ifx, t1, _this.isDiverted ? null : new C.FlippedCurve(G.Cubic_ifx));
    },
    createHeroRectTween$2$begin$end(begin, end) {
      var t1;
      this.toHero._widget.toString;
      t1 = this.createRectTween.call$2(begin, end);
      return t1 == null ? new A.RectTween(begin, end) : t1;
    },
    get$fromHeroLocation() {
      var t1, result, _this = this,
        value = _this.___HeroFlightManifest_fromHeroLocation_FI;
      if (value === $) {
        t1 = _this.fromHero._framework$_element;
        t1.toString;
        result = A._HeroFlightManifest__boundingBoxFor(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.fromRoute._subtreeKey));
        _this.___HeroFlightManifest_fromHeroLocation_FI !== $ && C.throwUnnamedLateFieldADI();
        _this.___HeroFlightManifest_fromHeroLocation_FI = result;
        value = result;
      }
      return value;
    },
    get$toHeroLocation() {
      var t1, result, _this = this,
        value = _this.___HeroFlightManifest_toHeroLocation_FI;
      if (value === $) {
        t1 = _this.toHero._framework$_element;
        t1.toString;
        result = A._HeroFlightManifest__boundingBoxFor(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.toRoute._subtreeKey));
        _this.___HeroFlightManifest_toHeroLocation_FI !== $ && C.throwUnnamedLateFieldADI();
        _this.___HeroFlightManifest_toHeroLocation_FI = result;
        value = result;
      }
      return value;
    },
    get$isValid() {
      var t1, result, _this = this,
        value = _this.___HeroFlightManifest_isValid_FI;
      if (value === $) {
        t1 = _this.get$toHeroLocation();
        if (t1.get$isFinite(t1))
          if (!_this.isDiverted) {
            t1 = _this.get$fromHeroLocation();
            t1 = t1.get$isFinite(t1);
            result = t1;
          } else
            result = true;
        else
          result = false;
        _this.___HeroFlightManifest_isValid_FI !== $ && C.throwUnnamedLateFieldADI();
        value = _this.___HeroFlightManifest_isValid_FI = result;
      }
      return value;
    },
    toString$0(_) {
      var t6, t7, _this = this,
        t1 = _this.type.toString$0(0),
        t2 = _this.fromHero,
        t3 = t2._widget.tag.toString$0(0),
        t4 = _this.fromRoute._settings.toString$0(0),
        t5 = _this.toRoute._settings.toString$0(0);
      t2 = t2.toString$0(0);
      t6 = _this.toHero.toString$0(0);
      t7 = _this.get$isValid() ? "" : ", INVALID";
      return "_HeroFlightManifest(" + t1 + " tag: " + t3 + " from route: " + t4 + " to route: " + t5 + " with hero: " + t2 + " to " + t6 + ")" + t7;
    }
  };
  A._HeroFlight.prototype = {
    _buildOverlay$1(context) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.shuttle;
      if (t1 == null) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t2 = t1.get$animation(t1);
        t3 = _this.___HeroFlight_manifest_A;
        t4 = t3.fromHero._framework$_element;
        t4.toString;
        t5 = t3.toHero._framework$_element;
        t5.toString;
        t5 = _this.shuttle = t1.shuttleBuilder.call$5(context, t2, t3.type, t4, t5);
        t1 = t5;
      }
      t2 = _this.___HeroFlight__proxyAnimation_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      return D.AnimatedBuilder$(t2, new A._HeroFlight__buildOverlay_closure(_this), t1);
    },
    _performAnimationUpdate$1($status) {
      var t2, _this = this,
        t1 = $status === G.AnimationStatus_3;
      if (t1 || $status === G.AnimationStatus_0) {
        t2 = _this.___HeroFlight__proxyAnimation_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        t2.set$parent(0, null);
        _this.overlayEntry.remove$0(0);
        _this.overlayEntry = null;
        t2 = _this.___HeroFlight_manifest_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        t2.fromHero.endFlight$1$keepPlaceholder(t1);
        _this.___HeroFlight_manifest_A.toHero.endFlight$1$keepPlaceholder($status === G.AnimationStatus_0);
        _this.onFlightEnded.call$1(_this);
        _this.___HeroFlight__proxyAnimation_A.removeListener$1(0, _this.get$onTick());
      }
    },
    _handleAnimationUpdate$1($status) {
      var _this = this,
        t1 = _this.___HeroFlight_manifest_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1 = t1.fromRoute._navigator;
      if ((t1 == null ? null : t1.userGestureInProgressNotifier._change_notifier$_value) !== true) {
        _this._performAnimationUpdate$1($status);
        return;
      }
      if (_this._scheduledPerformAnimationUpdate)
        return;
      t1.toString;
      _this._scheduledPerformAnimationUpdate = true;
      t1.userGestureInProgressNotifier.addListener$1(0, new A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate(_this, t1));
    },
    onTick$0() {
      var t1, toHeroBox, toHeroOrigin, t2, t3, t4, t5, t6, t7, t8, t9, _this = this;
      if (!_this._aborted) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1 = t1.toHero._framework$_element != null;
      } else
        t1 = false;
      if (t1) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        toHeroBox = type$.nullable_RenderBox._as(t1.toHero._framework$_element.get$renderObject());
      } else
        toHeroBox = null;
      if (toHeroBox != null && toHeroBox._node$_owner != null && toHeroBox._size != null) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1.toRoute._subtreeKey);
        t1 = t1 == null ? null : t1.get$renderObject();
        toHeroOrigin = C.MatrixUtils_transformPoint(toHeroBox.getTransformTo$1(0, type$.nullable_RenderBox._as(t1)), E.Offset_0_0);
      } else
        toHeroOrigin = null;
      t1 = toHeroOrigin != null;
      if (t1 && isFinite(toHeroOrigin._dx) && isFinite(toHeroOrigin._dy)) {
        t2 = _this.___HeroFlight_heroRectTween_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        t2 = t2.end;
        if (!J.$eq$(toHeroOrigin, new C.Offset(t2.left, t2.top))) {
          t2 = _this.___HeroFlight_heroRectTween_A;
          t3 = t2.end;
          t4 = t3.right;
          t5 = t3.left;
          t6 = t3.bottom;
          t3 = t3.top;
          t7 = toHeroOrigin._dx;
          t8 = toHeroOrigin._dy;
          t9 = _this.___HeroFlight_manifest_A;
          t9 === $ && C.throwUnnamedLateFieldNI();
          _this.___HeroFlight_heroRectTween_A = t9.createHeroRectTween$2$begin$end(t2.begin, new C.Rect(t7, t8, t7 + (t4 - t5), t8 + (t6 - t3)));
        }
      } else {
        t2 = _this._heroOpacity;
        if (t2.get$status(t2) === G.AnimationStatus_3) {
          t2 = _this.___HeroFlight__proxyAnimation_A;
          t2 === $ && C.throwUnnamedLateFieldNI();
          t3 = $.$get$_HeroFlight__reverseTween();
          t4 = t2.get$value(t2);
          t5 = C._instanceType(t3)._eval$1("_ChainedEvaluation<Animatable.T>");
          _this._heroOpacity = new D._AnimatedEvaluation(type$.Animation_double._as(t2), new D._ChainedEvaluation(new D.CurveTween(new D.Interval(t4, 1, G.C__Linear)), t3, t5), t5._eval$1("_AnimatedEvaluation<Animatable.T>"));
        }
      }
      if (t1)
        t1 = !(isFinite(toHeroOrigin._dx) && isFinite(toHeroOrigin._dy));
      else
        t1 = true;
      _this._aborted = t1;
    },
    toString$0(_) {
      var from, to, t2, t3, t4,
        t1 = this.___HeroFlight_manifest_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      from = t1.fromRoute._settings;
      to = t1.toRoute._settings;
      t1 = t1.fromHero._widget.tag.toString$0(0);
      t2 = from.toString$0(0);
      t3 = to.toString$0(0);
      t4 = this.___HeroFlight__proxyAnimation_A;
      t4 === $ && C.throwUnnamedLateFieldNI();
      return "HeroFlight(for: " + t1 + ", from: " + t2 + ", to: " + t3 + " " + C.S(t4._animations$_parent) + ")";
    }
  };
  A.HeroController.prototype = {
    didStopUserGesture$0() {
      var t1, t2, invalidFlights, _i;
      if (this._navigator.userGestureInProgressNotifier._change_notifier$_value)
        return;
      t1 = this._flights;
      t1 = t1.get$values(t1);
      t2 = C._instanceType(t1)._eval$1("WhereIterable<Iterable.E>");
      invalidFlights = C.List_List$of(new C.WhereIterable(t1, new A.HeroController_didStopUserGesture_isInvalidFlight(), t2), false, t2._eval$1("Iterable.E"));
      for (t1 = invalidFlights.length, _i = 0; _i < t1; ++_i)
        invalidFlights[_i]._handleAnimationUpdate$1(G.AnimationStatus_0);
    },
    _maybeStartHeroTransition$4(fromRoute, toRoute, flightType, isUserGestureTransition) {
      var t1;
      if (toRoute != fromRoute && toRoute instanceof A.PageRoute && fromRoute instanceof A.PageRoute) {
        switch (flightType.index) {
          case 1:
            t1 = fromRoute._animationProxy;
            if (t1.get$value(t1) === 0)
              return;
            break;
          case 0:
            t1 = toRoute._animationProxy;
            if (t1.get$value(t1) === 1)
              return;
            break;
        }
        if (isUserGestureTransition && flightType === B.HeroFlightDirection_1 && true)
          this._startHeroTransition$4(fromRoute, toRoute, flightType, isUserGestureTransition);
        else {
          t1 = toRoute._animationProxy;
          toRoute.set$offstage(t1.get$value(t1) === 0);
          $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.HeroController__maybeStartHeroTransition_closure(this, fromRoute, toRoute, flightType, isUserGestureTransition));
        }
      }
    },
    _startHeroTransition$4(from, to, flightType, isUserGestureTransition) {
      var $navigator, t1, overlay, t2, navigatorRenderObject, fromSubtreeContext, fromHeroes, toSubtreeContext, toHeroes, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, tag, fromHero, toHero, existingFlight, manifest, t16, t17, t18, shouldIncludeChildInPlaceholder, _this = this, _null = null;
      to.set$offstage(false);
      $navigator = _this._navigator;
      t1 = $navigator == null;
      if (t1)
        overlay = _null;
      else {
        t2 = $navigator.__NavigatorState__overlayKey_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        overlay = t2.get$currentState();
      }
      if (t1 || overlay == null)
        return;
      navigatorRenderObject = $navigator._framework$_element.get$renderObject();
      if (!(navigatorRenderObject instanceof C.RenderBox))
        return;
      fromSubtreeContext = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, from._subtreeKey);
      fromHeroes = fromSubtreeContext != null ? A.Hero__allHeroesFor(fromSubtreeContext, isUserGestureTransition, $navigator) : B.Map_empty6;
      toSubtreeContext = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, to._subtreeKey);
      toHeroes = toSubtreeContext != null ? A.Hero__allHeroesFor(toSubtreeContext, isUserGestureTransition, $navigator) : B.Map_empty6;
      for (t1 = fromHeroes.get$entries(fromHeroes), t1 = t1.get$iterator(t1), t2 = _this.get$_defaultHeroFlightShuttleBuilder(), t3 = _this.createRectTween, t4 = _this._flights, t5 = type$.LabeledGlobalKey__OverlayEntryWidgetState, t6 = _this.get$_handleFlightEnded(), t7 = type$.JSArray_of_void_Function_AnimationStatus, t8 = type$.ObserverList_of_void_Function_AnimationStatus, t9 = type$.JSArray_of_void_Function, t10 = type$.ObserverList_of_void_Function, t11 = type$.Tween_double, t12 = type$.Animation_double, t13 = t11._eval$1("_AnimatedEvaluation<Animatable.T>"), t14 = type$.ReverseTween_nullable_Rect; t1.moveNext$0();) {
        t15 = t1.get$current(t1);
        tag = t15.get$key(t15);
        fromHero = t15.get$value(t15);
        toHero = toHeroes.$index(0, tag);
        existingFlight = t4.$index(0, tag);
        if (toHero == null)
          manifest = _null;
        else {
          t15 = navigatorRenderObject._size;
          t15.toString;
          toHero._widget.toString;
          fromHero._widget.toString;
          manifest = new A._HeroFlightManifest(flightType, overlay, t15, from, to, fromHero, toHero, t3, t2, isUserGestureTransition, existingFlight != null);
        }
        if (manifest != null && manifest.get$isValid()) {
          toHeroes.remove$1(0, tag);
          if (existingFlight != null) {
            t15 = existingFlight.___HeroFlight_manifest_A;
            t15 === $ && C.throwUnnamedLateFieldNI();
            t16 = t15.type;
            if (t16 === B.HeroFlightDirection_0 && manifest.type === B.HeroFlightDirection_1) {
              t15 = existingFlight.___HeroFlight__proxyAnimation_A;
              t15 === $ && C.throwUnnamedLateFieldNI();
              t15.set$parent(0, new D.ReverseAnimation(manifest.get$animation(manifest), new D.ObserverList(C._setArrayType([], t7), t8), 0));
              t15 = existingFlight.___HeroFlight_heroRectTween_A;
              t15 === $ && C.throwUnnamedLateFieldNI();
              existingFlight.___HeroFlight_heroRectTween_A = new A.ReverseTween(t15, t15.end, t15.begin, t14);
            } else {
              t16 = t16 === B.HeroFlightDirection_1 && manifest.type === B.HeroFlightDirection_0;
              t17 = existingFlight.___HeroFlight__proxyAnimation_A;
              if (t16) {
                t17 === $ && C.throwUnnamedLateFieldNI();
                t15 = manifest.get$animation(manifest);
                t16 = existingFlight.___HeroFlight_manifest_A;
                t16 = t16.get$animation(t16);
                t16 = t16.get$value(t16);
                t17.set$parent(0, new D._AnimatedEvaluation(t12._as(t15), new D.Tween(t16, 1, t11), t13));
                t15 = existingFlight.___HeroFlight_manifest_A;
                t16 = t15.fromHero;
                t17 = manifest.toHero;
                if (t16 !== t17) {
                  t16.endFlight$1$keepPlaceholder(true);
                  t17.startFlight$0();
                  t15 = existingFlight.___HeroFlight_manifest_A;
                  t16 = existingFlight.___HeroFlight_heroRectTween_A;
                  t16 === $ && C.throwUnnamedLateFieldNI();
                  existingFlight.___HeroFlight_heroRectTween_A = t15.createHeroRectTween$2$begin$end(t16.end, manifest.get$toHeroLocation());
                } else {
                  t16 = existingFlight.___HeroFlight_heroRectTween_A;
                  t16 === $ && C.throwUnnamedLateFieldNI();
                  existingFlight.___HeroFlight_heroRectTween_A = t15.createHeroRectTween$2$begin$end(t16.end, t16.begin);
                }
              } else {
                t16 = existingFlight.___HeroFlight_heroRectTween_A;
                t16 === $ && C.throwUnnamedLateFieldNI();
                t17 === $ && C.throwUnnamedLateFieldNI();
                existingFlight.___HeroFlight_heroRectTween_A = t15.createHeroRectTween$2$begin$end(t16.transform$1(0, t17.get$value(t17)), manifest.get$toHeroLocation());
                existingFlight.shuttle = null;
                t15 = manifest.type;
                t16 = existingFlight.___HeroFlight__proxyAnimation_A;
                if (t15 === B.HeroFlightDirection_1)
                  t16.set$parent(0, new D.ReverseAnimation(manifest.get$animation(manifest), new D.ObserverList(C._setArrayType([], t7), t8), 0));
                else
                  t16.set$parent(0, manifest.get$animation(manifest));
                existingFlight.___HeroFlight_manifest_A.fromHero.endFlight$1$keepPlaceholder(true);
                existingFlight.___HeroFlight_manifest_A.toHero.endFlight$1$keepPlaceholder(true);
                manifest.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(t15 === B.HeroFlightDirection_0);
                manifest.toHero.startFlight$0();
                t15 = existingFlight.overlayEntry._key.get$currentState();
                if (t15 != null)
                  t15._overlay$_markNeedsBuild$0();
              }
            }
            existingFlight.___HeroFlight_manifest_A = manifest;
          } else {
            t15 = new A._HeroFlight(t6, G.C__AlwaysCompleteAnimation);
            t16 = C._setArrayType([], t7);
            t17 = new D.ObserverList(t16, t8);
            t18 = new D.ProxyAnimation(t17, new D.ObserverList(C._setArrayType([], t9), t10), 0);
            t18._status = G.AnimationStatus_0;
            t18._animations$_value = 0;
            t18.didRegisterListener$0();
            t17._isDirty = true;
            t16.push(t15.get$_handleAnimationUpdate());
            t15.___HeroFlight__proxyAnimation_A = t18;
            t15.___HeroFlight_manifest_A = manifest;
            switch (manifest.type.index) {
              case 1:
                t18.set$parent(0, new D.ReverseAnimation(manifest.get$animation(manifest), new D.ObserverList(C._setArrayType([], t7), t8), 0));
                shouldIncludeChildInPlaceholder = false;
                break;
              case 0:
                t18.set$parent(0, manifest.get$animation(manifest));
                shouldIncludeChildInPlaceholder = true;
                break;
              default:
                shouldIncludeChildInPlaceholder = _null;
            }
            t16 = t15.___HeroFlight_manifest_A;
            t15.___HeroFlight_heroRectTween_A = t16.createHeroRectTween$2$begin$end(t16.get$fromHeroLocation(), t15.___HeroFlight_manifest_A.get$toHeroLocation());
            t15.___HeroFlight_manifest_A.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(shouldIncludeChildInPlaceholder);
            t15.___HeroFlight_manifest_A.toHero.startFlight$0();
            t16 = t15.___HeroFlight_manifest_A;
            t17 = new F.OverlayEntry(t15.get$_buildOverlay(), false, new D.ValueNotifier(false, $.$get$ChangeNotifier__emptyListeners()), new D.LabeledGlobalKey(_null, t5));
            t15.overlayEntry = t17;
            t16.overlay.insert$1(0, t17);
            t17 = t15.___HeroFlight__proxyAnimation_A;
            t17.didRegisterListener$0();
            t17 = t17.AnimationLocalListenersMixin__listeners;
            t17._isDirty = true;
            t17._list.push(t15.get$onTick());
            t4.$indexSet(0, tag, t15);
          }
        } else if (existingFlight != null)
          existingFlight._aborted = true;
      }
      for (t1 = toHeroes.get$values(toHeroes), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).endFlight$0();
    },
    _handleFlightEnded$1(flight) {
      var t1 = flight.___HeroFlight_manifest_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      this._flights.remove$1(0, t1.fromHero._widget.tag);
    },
    _defaultHeroFlightShuttleBuilder$5(flightContext, animation, flightDirection, fromHeroContext, toHeroContext) {
      var toMediaQueryData, fromMediaQueryData,
        t1 = toHeroContext._widget;
      t1.toString;
      type$.Hero._as(t1);
      toMediaQueryData = D.MediaQuery_maybeOf(toHeroContext);
      fromMediaQueryData = D.MediaQuery_maybeOf(fromHeroContext);
      if (toMediaQueryData == null || fromMediaQueryData == null)
        return t1.child;
      return D.AnimatedBuilder$(animation, new A.HeroController__defaultHeroFlightShuttleBuilder_closure(toMediaQueryData, flightDirection, fromMediaQueryData.padding, toMediaQueryData.padding, animation, t1), null);
    }
  };
  A.EdgeInsetsTween.prototype = {
    lerp$1(t) {
      var t1 = F.EdgeInsets_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.InheritedModel.prototype = {
    createElement$0(_) {
      return new A.InheritedModelElement(C.HashMap_HashMap(type$.Element, type$.nullable_Object), this, E._ElementLifecycle_0, C._instanceType(this)._eval$1("InheritedModelElement<InheritedModel.T>"));
    }
  };
  A.InheritedModelElement.prototype = {
    updateDependencies$2(dependent, aspect) {
      var t1 = this._dependents,
        t2 = this.$ti,
        dependencies = t2._eval$1("Set<1>?")._as(t1.$index(0, dependent));
      if (dependencies != null && dependencies.get$isEmpty(dependencies))
        return;
      t1.$indexSet(0, dependent, C.HashSet_HashSet(t2._precomputed1));
    },
    notifyDependent$2(oldWidget, dependent) {
      var t2,
        t1 = this.$ti,
        dependencies = t1._eval$1("Set<1>?")._as(this._dependents.$index(0, dependent));
      if (dependencies == null)
        return;
      if (!dependencies.get$isEmpty(dependencies)) {
        t2 = this._widget;
        t2.toString;
        t2 = t1._eval$1("InheritedModel<1>")._as(t2).updateShouldNotifyDependent$2(oldWidget, dependencies);
        t1 = t2;
      } else
        t1 = true;
      if (t1)
        dependent.didChangeDependencies$0();
    }
  };
  A._Pending.prototype = {};
  A.LocalizationsDelegate.prototype = {
    toString$0(_) {
      return "LocalizationsDelegate[" + C.createRuntimeType(C._instanceType(this)._eval$1("LocalizationsDelegate.T")).toString$0(0) + "]";
    }
  };
  A._WidgetsLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return true;
    },
    load$1(_, locale) {
      return new C.SynchronousFuture(B.C_DefaultWidgetsLocalizations, type$.SynchronousFuture_WidgetsLocalizations);
    },
    shouldReload$1(old) {
      return false;
    },
    toString$0(_) {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  A.DefaultWidgetsLocalizations.prototype = {$isWidgetsLocalizations: 1};
  A._LocalizationsScope.prototype = {
    updateShouldNotify$1(old) {
      return this.typeToResources !== old.typeToResources;
    }
  };
  A.Localizations.prototype = {
    createState$0() {
      return new A._LocalizationsState(new D.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), C.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.dynamic), G._StateLifecycle_0);
    }
  };
  A._LocalizationsState.prototype = {
    get$locale(_) {
      return this._localizations$_locale;
    },
    initState$0() {
      this.super$State$initState();
      this.load$1(0, this._widget.locale);
    },
    _anyDelegatesShouldReload$1(old) {
      var delegates, oldDelegates, i, delegate, oldDelegate, rti,
        t1 = this._widget.delegates,
        t2 = old.delegates;
      if (t1.length !== t2.length)
        return true;
      delegates = C._setArrayType(t1.slice(0), C._arrayInstanceType(t1));
      oldDelegates = C._setArrayType(t2.slice(0), C._arrayInstanceType(t2));
      for (i = 0; i < delegates.length; ++i) {
        delegate = delegates[i];
        oldDelegate = oldDelegates[i];
        rti = delegate instanceof C.Closure ? C.closureFunctionType(delegate) : null;
        t1 = C.createRuntimeType(rti == null ? C.instanceType(delegate) : rti);
        rti = oldDelegate instanceof C.Closure ? C.closureFunctionType(oldDelegate) : null;
        if (t1 === C.createRuntimeType(rti == null ? C.instanceType(oldDelegate) : rti)) {
          delegate.shouldReload$1(oldDelegate);
          t1 = false;
        } else
          t1 = true;
        if (t1)
          return true;
      }
      return false;
    },
    didUpdateWidget$1(old) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(old);
      if (_this._widget.locale.$eq(0, old.locale)) {
        _this._widget.toString;
        t1 = _this._anyDelegatesShouldReload$1(old);
      } else
        t1 = true;
      if (t1)
        _this.load$1(0, _this._widget.locale);
    },
    load$1(_, locale) {
      var typeToResourcesFuture, _this = this, t1 = {},
        delegates = _this._widget.delegates,
        t2 = delegates.length;
      if (t2 === 0) {
        _this._localizations$_locale = locale;
        return;
      }
      t1.typeToResources = null;
      typeToResourcesFuture = A._loadAll(locale, delegates).then$1$1(new A._LocalizationsState_load_closure(t1), type$.Map_Type_dynamic);
      t1 = t1.typeToResources;
      if (t1 != null) {
        _this._typeToResources = t1;
        _this._localizations$_locale = locale;
      } else {
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        typeToResourcesFuture.then$1$1(new A._LocalizationsState_load_closure0(_this, locale), type$.void);
      }
    },
    resourcesFor$1$1(type, $T) {
      return $T._as(J.$index$asx(this._typeToResources, type));
    },
    get$_localizations$_textDirection() {
      type$.WidgetsLocalizations._as(J.$index$asx(this._typeToResources, B.Type_WidgetsLocalizations_43h));
      return E.TextDirection_1;
    },
    build$1(context) {
      var t1, t2, t3, _this = this, _null = null;
      if (_this._localizations$_locale == null)
        return D.Container$(_null, _null, _null, _null, _null, _null, _null, _null, _null);
      t1 = _this.get$_localizations$_textDirection();
      _this._localizations$_locale.toString;
      t2 = _this._typeToResources;
      t3 = _this.get$_localizations$_textDirection();
      return D.Semantics$(_null, new A._LocalizationsScope(_this, t2, F.Directionality$(_this._widget.child, t3), _this._localizedResourcesScopeKey), false, _null, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1, _null, _null);
    }
  };
  A.MediaQueryData.prototype = {
    get$orientation(_) {
      var t1 = this.size;
      return t1._dx > t1._dy ? H.Orientation_1 : H.Orientation_0;
    },
    copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(displayFeatures, padding, platformBrightness, textScaleFactor, viewInsets, viewPadding) {
      var _this = this,
        t1 = textScaleFactor == null ? _this.textScaleFactor : textScaleFactor,
        t2 = padding == null ? _this.padding : padding,
        t3 = viewPadding == null ? _this.viewPadding : viewPadding,
        t4 = viewInsets == null ? _this.viewInsets : viewInsets,
        t5 = displayFeatures == null ? _this.displayFeatures : displayFeatures;
      return new A.MediaQueryData(_this.size, _this.devicePixelRatio, t1, _this.platformBrightness, t4, t2, t3, _this.systemGestureInsets, false, _this.accessibleNavigation, _this.invertColors, _this.highContrast, _this.disableAnimations, _this.boldText, _this.navigationMode, _this.gestureSettings, t5);
    },
    copyWith$1$textScaleFactor(textScaleFactor) {
      return this.copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(null, null, null, textScaleFactor, null, null);
    },
    copyWith$1$platformBrightness(platformBrightness) {
      return this.copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(null, null, platformBrightness, null, null, null);
    },
    copyWith$2$padding$viewPadding(padding, viewPadding) {
      return this.copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(null, padding, null, null, null, viewPadding);
    },
    copyWith$1$padding(padding) {
      return this.copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(null, padding, null, null, null, null);
    },
    copyWith$4$displayFeatures$padding$viewInsets$viewPadding(displayFeatures, padding, viewInsets, viewPadding) {
      return this.copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(displayFeatures, padding, null, null, viewInsets, viewPadding);
    },
    copyWith$2$viewInsets$viewPadding(viewInsets, viewPadding) {
      return this.copyWith$6$displayFeatures$padding$platformBrightness$textScaleFactor$viewInsets$viewPadding(null, null, null, null, viewInsets, viewPadding);
    },
    removePadding$4$removeBottom$removeLeft$removeRight$removeTop(removeBottom, removeLeft, removeRight, removeTop) {
      var t1, t2, t3, t4, t5, t6, _this = this, _null = null;
      if (!(removeLeft || removeTop || removeRight || removeBottom))
        return _this;
      t1 = _this.padding;
      t2 = removeLeft ? 0 : _null;
      t3 = removeTop ? 0 : _null;
      t4 = removeRight ? 0 : _null;
      t2 = t1.copyWith$4$bottom$left$right$top(removeBottom ? 0 : _null, t2, t4, t3);
      t3 = _this.viewPadding;
      t4 = removeLeft ? Math.max(0, t3.left - t1.left) : _null;
      t5 = removeTop ? Math.max(0, t3.top - t1.top) : _null;
      t6 = removeRight ? Math.max(0, t3.right - t1.right) : _null;
      return _this.copyWith$2$padding$viewPadding(t2, t3.copyWith$4$bottom$left$right$top(removeBottom ? Math.max(0, t3.bottom - t1.bottom) : _null, t4, t6, t5));
    },
    removeViewInsets$4$removeBottom$removeLeft$removeRight$removeTop(removeBottom, removeLeft, removeRight, removeTop) {
      var t1, t2, t3, t4, t5, t6, _this = this, _null = null;
      if (!removeLeft)
        !removeTop;
      t1 = _this.viewPadding;
      t2 = removeLeft ? Math.max(0, t1.left - _this.viewInsets.left) : _null;
      t3 = removeTop ? Math.max(0, t1.top - _this.viewInsets.top) : _null;
      t4 = removeRight ? Math.max(0, t1.right - _this.viewInsets.right) : _null;
      t5 = _this.viewInsets;
      t6 = Math.max(0, t1.bottom - t5.bottom);
      t1 = t1.copyWith$4$bottom$left$right$top(t6, t2, t4, t3);
      t2 = removeLeft ? 0 : _null;
      t3 = removeTop ? 0 : _null;
      t4 = removeRight ? 0 : _null;
      return _this.copyWith$2$viewInsets$viewPadding(t5.copyWith$4$bottom$left$right$top(0, t2, t4, t3), t1);
    },
    removeViewInsets$1$removeBottom(removeBottom) {
      return this.removeViewInsets$4$removeBottom$removeLeft$removeRight$removeTop(removeBottom, false, false, false);
    },
    removeDisplayFeatures$1(subScreen) {
      var rightInset, bottomInset, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this,
        t1 = subScreen.right,
        t2 = subScreen.left,
        t3 = subScreen.bottom,
        t4 = subScreen.top,
        t5 = _this.size;
      if (new C.Size(t1 - t2, t3 - t4).$eq(0, t5) && new C.Offset(t2, t4).$eq(0, E.Offset_0_0))
        return _this;
      rightInset = t5._dx - t1;
      bottomInset = t5._dy - t3;
      t1 = _this.padding;
      t3 = Math.max(0, t1.left - t2);
      t5 = Math.max(0, t1.top - t4);
      t6 = Math.max(0, t1.right - rightInset);
      t1 = Math.max(0, t1.bottom - bottomInset);
      t7 = _this.viewPadding;
      t8 = Math.max(0, t7.left - t2);
      t9 = Math.max(0, t7.top - t4);
      t10 = Math.max(0, t7.right - rightInset);
      t7 = Math.max(0, t7.bottom - bottomInset);
      t11 = _this.viewInsets;
      t2 = Math.max(0, t11.left - t2);
      t4 = Math.max(0, t11.top - t4);
      t12 = Math.max(0, t11.right - rightInset);
      t11 = Math.max(0, t11.bottom - bottomInset);
      t13 = _this.displayFeatures;
      t14 = C._arrayInstanceType(t13)._eval$1("WhereIterable<1>");
      return _this.copyWith$4$displayFeatures$padding$viewInsets$viewPadding(C.List_List$of(new C.WhereIterable(t13, new A.MediaQueryData_removeDisplayFeatures_closure(subScreen), t14), true, t14._eval$1("Iterable.E")), new C.EdgeInsets(t3, t5, t6, t1), new C.EdgeInsets(t2, t4, t12, t11), new C.EdgeInsets(t8, t9, t10, t7));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeType(_this))
        return false;
      return other instanceof A.MediaQueryData && other.size.$eq(0, _this.size) && other.devicePixelRatio === _this.devicePixelRatio && other.textScaleFactor === _this.textScaleFactor && other.platformBrightness === _this.platformBrightness && other.padding.$eq(0, _this.padding) && other.viewPadding.$eq(0, _this.viewPadding) && other.viewInsets.$eq(0, _this.viewInsets) && other.highContrast === _this.highContrast && other.disableAnimations === _this.disableAnimations && other.invertColors === _this.invertColors && other.accessibleNavigation === _this.accessibleNavigation && other.boldText === _this.boldText && other.navigationMode === _this.navigationMode && other.gestureSettings.$eq(0, _this.gestureSettings) && C.listEquals0(other.displayFeatures, _this.displayFeatures);
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.size, _this.devicePixelRatio, _this.textScaleFactor, _this.platformBrightness, _this.padding, _this.viewPadding, _this.viewInsets, false, _this.highContrast, _this.disableAnimations, _this.invertColors, _this.accessibleNavigation, _this.boldText, _this.navigationMode, _this.gestureSettings, C.Object_hashAll(_this.displayFeatures), E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue, E.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "MediaQueryData(" + E.JSArray_methods.join$1(C._setArrayType(["size: " + _this.size.toString$0(0), "devicePixelRatio: " + E.JSNumber_methods.toStringAsFixed$1(_this.devicePixelRatio, 1), "textScaleFactor: " + E.JSNumber_methods.toStringAsFixed$1(_this.textScaleFactor, 1), "platformBrightness: " + _this.platformBrightness.toString$0(0), "padding: " + _this.padding.toString$0(0), "viewPadding: " + _this.viewPadding.toString$0(0), "viewInsets: " + _this.viewInsets.toString$0(0), "alwaysUse24HourFormat: false", "accessibleNavigation: " + _this.accessibleNavigation, "highContrast: " + _this.highContrast, "disableAnimations: " + _this.disableAnimations, "invertColors: " + _this.invertColors, "boldText: " + _this.boldText, "navigationMode: " + _this.navigationMode._core$_name, "gestureSettings: " + _this.gestureSettings.toString$0(0), "displayFeatures: " + C.S(_this.displayFeatures)], type$.JSArray_String), ", ") + ")";
    }
  };
  A._MediaQueryFromWindow.prototype = {
    createState$0() {
      return new A._MediaQueryFromWindowState(G._StateLifecycle_0);
    }
  };
  A._MediaQueryFromWindowState.prototype = {
    initState$0() {
      this.super$State$initState();
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(this);
    },
    didChangeMetrics$0() {
      this.setState$1(new A._MediaQueryFromWindowState_didChangeMetrics_closure());
    },
    didChangeTextScaleFactor$0() {
      this.setState$1(new A._MediaQueryFromWindowState_didChangeTextScaleFactor_closure());
    },
    didChangePlatformBrightness$0() {
      this.setState$1(new A._MediaQueryFromWindowState_didChangePlatformBrightness_closure());
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, data;
      $.WidgetsBinding__instance.toString;
      t1 = $.$get$window();
      t2 = t1.get$physicalSize();
      t3 = t1._debugDevicePixelRatio;
      t2 = t2.$div(0, t3 == null ? C.EnginePlatformDispatcher_browserDevicePixelRatio() : t3);
      t3 = t1._debugDevicePixelRatio;
      if (t3 == null)
        t3 = C.EnginePlatformDispatcher_browserDevicePixelRatio();
      t4 = t1.platformDispatcher;
      t5 = t4.configuration;
      t1.get$viewConfiguration();
      t6 = t1._debugDevicePixelRatio;
      t6 = A.EdgeInsets$fromWindowPadding(E.WindowPadding_0_0_0_0, t6 == null ? C.EnginePlatformDispatcher_browserDevicePixelRatio() : t6);
      t1.get$viewConfiguration();
      t7 = t1._debugDevicePixelRatio;
      t7 = A.EdgeInsets$fromWindowPadding(E.WindowPadding_0_0_0_0, t7 == null ? C.EnginePlatformDispatcher_browserDevicePixelRatio() : t7);
      t8 = t1._viewInsets;
      t9 = t1._debugDevicePixelRatio;
      t8 = A.EdgeInsets$fromWindowPadding(t8, t9 == null ? C.EnginePlatformDispatcher_browserDevicePixelRatio() : t9);
      t1.get$viewConfiguration();
      t9 = t1._debugDevicePixelRatio;
      t9 = A.EdgeInsets$fromWindowPadding(E.WindowPadding_0_0_0_0, t9 == null ? C.EnginePlatformDispatcher_browserDevicePixelRatio() : t9);
      t4 = t4.configuration.accessibilityFeatures.__engine$_index;
      t1.get$viewConfiguration();
      t1.get$viewConfiguration();
      data = new A.MediaQueryData(t2, t3, t5.textScaleFactor, t5.platformBrightness, t8, t6, t7, t9, false, (t4 & 1) !== 0, (t4 & 2) !== 0, (t4 & 32) !== 0, (t4 & 4) !== 0, (t4 & 8) !== 0, H.NavigationMode_0, new A.DeviceGestureSettings(null), E.List_empty15).copyWith$1$platformBrightness($.debugBrightnessOverride);
      return new D.MediaQuery(data, this._widget.child, null);
    },
    dispose$0() {
      E.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      this.super$State$dispose();
    }
  };
  A.__MediaQueryFromWindowState_State_WidgetsBindingObserver.prototype = {};
  A.NavigationToolbar.prototype = {
    build$1(context) {
      var t2, t3, _this = this,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      t2 = C._setArrayType([], type$.JSArray_Widget);
      t3 = _this.leading;
      if (t3 != null)
        t2.push(A.LayoutId$(t3, B._ToolbarSlot_0));
      t3 = _this.middle;
      if (t3 != null)
        t2.push(A.LayoutId$(t3, B._ToolbarSlot_1));
      t3 = _this.trailing;
      if (t3 != null)
        t2.push(A.LayoutId$(t3, B._ToolbarSlot_2));
      return new A.CustomMultiChildLayout(new A._ToolbarLayout(_this.centerMiddle, _this.middleSpacing, t1.textDirection), t2, null);
    }
  };
  A._ToolbarSlot.prototype = {
    toString$0(_) {
      return "_ToolbarSlot." + this._core$_name;
    }
  };
  A._ToolbarLayout.prototype = {
    performLayout$1(size) {
      var t1, t2, leadingWidth, leadingX, trailingSize, trailingX, trailingWidth, maxWidth, middleSize, middleStartMargin, middleStart, t3, middleX, _this = this;
      if (_this._idToChild.$index(0, B._ToolbarSlot_0) != null) {
        t1 = size._dx;
        t2 = size._dy;
        leadingWidth = _this.layoutChild$2(B._ToolbarSlot_0, new C.BoxConstraints(0, t1 / 3, t2, t2))._dx;
        switch (_this.textDirection.index) {
          case 0:
            leadingX = t1 - leadingWidth;
            break;
          case 1:
            leadingX = 0;
            break;
          default:
            leadingX = null;
        }
        _this.positionChild$2(B._ToolbarSlot_0, new C.Offset(leadingX, 0));
      } else
        leadingWidth = 0;
      if (_this._idToChild.$index(0, B._ToolbarSlot_2) != null) {
        trailingSize = _this.layoutChild$2(B._ToolbarSlot_2, F.BoxConstraints$loose(size));
        switch (_this.textDirection.index) {
          case 0:
            trailingX = 0;
            break;
          case 1:
            trailingX = size._dx - trailingSize._dx;
            break;
          default:
            trailingX = null;
        }
        trailingWidth = trailingSize._dx;
        _this.positionChild$2(B._ToolbarSlot_2, new C.Offset(trailingX, (size._dy - trailingSize._dy) / 2));
      } else
        trailingWidth = 0;
      if (_this._idToChild.$index(0, B._ToolbarSlot_1) != null) {
        t1 = size._dx;
        t2 = _this.middleSpacing;
        maxWidth = Math.max(t1 - leadingWidth - trailingWidth - t2 * 2, 0);
        middleSize = _this.layoutChild$2(B._ToolbarSlot_1, F.BoxConstraints$loose(size).copyWith$1$maxWidth(maxWidth));
        middleStartMargin = leadingWidth + t2;
        if (_this.centerMiddle) {
          t2 = middleSize._dx;
          middleStart = (t1 - t2) / 2;
          t3 = t1 - trailingWidth;
          if (middleStart + t2 > t3)
            middleStart = t3 - t2;
          else if (middleStart < middleStartMargin)
            middleStart = middleStartMargin;
        } else
          middleStart = middleStartMargin;
        switch (_this.textDirection.index) {
          case 0:
            middleX = t1 - middleSize._dx - middleStart;
            break;
          case 1:
            middleX = middleStart;
            break;
          default:
            middleX = null;
        }
        _this.positionChild$2(B._ToolbarSlot_1, new C.Offset(middleX, (size._dy - middleSize._dy) / 2));
      }
    },
    shouldRelayout$1(oldDelegate) {
      return oldDelegate.centerMiddle !== this.centerMiddle || oldDelegate.middleSpacing !== this.middleSpacing || oldDelegate.textDirection !== this.textDirection;
    }
  };
  A.NavigatorObserver.prototype = {};
  A.HeroControllerScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return oldWidget.controller != this.controller;
    }
  };
  A.RouteTransitionRecord.prototype = {};
  A.TransitionDelegate.prototype = {};
  A.DefaultTransitionDelegate.prototype = {};
  A.Navigator.prototype = {
    createState$0() {
      var _null = null,
        t1 = C._setArrayType([], type$.JSArray__RouteEntry),
        t2 = $.$get$ChangeNotifier__emptyListeners(),
        t3 = type$._NavigatorObservation;
      return new A.NavigatorState(t1, new A._HistoryProperty(t2), C.ListQueue$(_null, t3), C.ListQueue$(_null, t3), C.FocusScopeNode$(true, "Navigator Scope", false), new A.RestorableNum(0, t2, type$.RestorableNum_int), new D.ValueNotifier(false, t2), C.LinkedHashSet_LinkedHashSet$_empty(type$.int), _null, C.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null, G._StateLifecycle_0);
    },
    onGenerateInitialRoutes$2(arg0, arg1) {
      return this.onGenerateInitialRoutes.call$2(arg0, arg1);
    }
  };
  A._RouteLifecycle.prototype = {
    toString$0(_) {
      return "_RouteLifecycle." + this._core$_name;
    }
  };
  A._NotAnnounced.prototype = {};
  A._RouteEntry.prototype = {
    get$restorationId() {
      var t1 = this.restorationInformation;
      if (t1 != null)
        return "r+" + t1.get$restorationScopeId();
      return null;
    },
    handlePush$4$isNewFirst$navigator$previous$previousPresent(isNewFirst, $navigator, previous, previousPresent) {
      var t2, routeFuture, t3, _this = this,
        previousState = _this.currentState,
        t1 = _this.route;
      t1._navigator = $navigator;
      t1.install$0();
      t2 = _this.currentState;
      if (t2 === B._RouteLifecycle_3 || t2 === B._RouteLifecycle_4) {
        routeFuture = t1.didPush$0();
        _this.currentState = B._RouteLifecycle_5;
        routeFuture.whenCompleteOrCancel$1(new A._RouteEntry_handlePush_closure(_this, $navigator));
      } else {
        t1.didReplace$1(previous);
        _this.currentState = B._RouteLifecycle_7;
      }
      if (isNewFirst)
        t1.didChangeNext$1(null);
      t2 = previousState === B._RouteLifecycle_6 || previousState === B._RouteLifecycle_4;
      t3 = $navigator._observedRouteAdditions;
      if (t2)
        t3._add$1(0, new A._NavigatorReplaceObservation(t1, previousPresent));
      else
        t3._add$1(0, new A._NavigatorPushObservation(t1, previousPresent));
    },
    handlePop$2$navigator$previousPresent($navigator, previousPresent) {
      var t1, _this = this;
      _this.currentState = B._RouteLifecycle_11;
      t1 = _this.route;
      if ((t1._popCompleter.future._state & 30) !== 0)
        return true;
      if (!t1.didPop$1(_this.pendingResult)) {
        _this.currentState = B._RouteLifecycle_7;
        return false;
      }
      _this.pendingResult = null;
      return true;
    },
    remove$0(_) {
      if (this.currentState.index >= 10)
        return;
      this._reportRemovalToObserver = true;
      this.currentState = B._RouteLifecycle_10;
    },
    dispose$0() {
      var t1, t2, t3, mountedEntries, listener, t4, _box_0 = {};
      this.currentState = B._RouteLifecycle_14;
      t1 = this.route;
      t2 = t1.get$overlayEntries();
      t3 = new A._RouteEntry_dispose_closure();
      mountedEntries = new C.WhereIterable(t2, t3, C._arrayInstanceType(t2)._eval$1("WhereIterable<1>"));
      if (!mountedEntries.get$iterator(mountedEntries).moveNext$0())
        t1.dispose$0();
      else {
        _box_0.mounted = mountedEntries.get$length(mountedEntries);
        for (t1 = E.JSArray_methods.get$iterator(t2), t3 = new C.WhereIterator(t1, t3); t3.moveNext$0();) {
          t2 = t1.get$current(t1);
          listener = C._Cell$named("listener");
          t4 = new A._RouteEntry_dispose_closure0(_box_0, this, t2, listener);
          listener.__late_helper$_value = t4;
          t2._overlayStateMounted.addListener$1(0, t4);
        }
      }
    },
    get$willBePresent() {
      var t1 = this.currentState.index;
      return t1 <= 7 && t1 >= 1;
    },
    get$isPresent() {
      var t1 = this.currentState.index;
      return t1 <= 10 && t1 >= 1;
    }
  };
  A._NavigatorObservation.prototype = {};
  A._NavigatorPushObservation.prototype = {
    notify$1(observer) {
      observer._maybeStartHeroTransition$4(this.secondaryRoute, this.primaryRoute, B.HeroFlightDirection_0, false);
    }
  };
  A._NavigatorPopObservation.prototype = {
    notify$1(observer) {
      if (!observer._navigator.userGestureInProgressNotifier._change_notifier$_value)
        observer._maybeStartHeroTransition$4(this.primaryRoute, this.secondaryRoute, B.HeroFlightDirection_1, false);
    }
  };
  A._NavigatorRemoveObservation.prototype = {
    notify$1(observer) {
    }
  };
  A._NavigatorReplaceObservation.prototype = {
    notify$1(observer) {
      var t1 = this.primaryRoute,
        t2 = t1.get$isCurrent();
      if (t2)
        observer._maybeStartHeroTransition$4(this.secondaryRoute, t1, B.HeroFlightDirection_0, false);
    }
  };
  A.NavigatorState.prototype = {
    initState$0() {
      var t1, _i, _this = this;
      _this.super$State$initState();
      for (t1 = _this._widget.observers, _i = 0; false; ++_i)
        t1[_i]._navigator = _this;
      _this.__NavigatorState__effectiveObservers_A = _this._widget.observers;
      t1 = _this._framework$_element.getElementForInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._widget;
        t1.toString;
      }
      type$.nullable_HeroControllerScope._as(t1);
      _this._updateHeroController$1(t1 == null ? null : t1.controller);
      _this._widget.toString;
      E.OptionalMethodChannel_urv.invokeMethod$1$1("selectSingleEntryHistory", type$.void);
    },
    restoreState$2(oldBucket, initialRestore) {
      var t1, t2, _i, page, t3, entry, _this = this;
      _this.registerForRestoration$2(_this._rawNextPagelessRestorationScopeId, "id");
      t1 = _this._serializableHistory;
      _this.registerForRestoration$2(t1, "history");
      for (; t2 = _this._history, t2.length !== 0;)
        t2.pop().dispose$0();
      _this.__NavigatorState__overlayKey_A = new D.LabeledGlobalKey(null, type$.LabeledGlobalKey_OverlayState);
      E.JSArray_methods.addAll$1(t2, t1.restoreEntriesForPage$2(null, _this));
      _this._widget.toString;
      _i = 0;
      for (; false; ++_i) {
        page = B.List_empty16[_i];
        t2 = _this._framework$_element;
        t2.toString;
        t2 = page.createRoute$1(t2);
        t3 = $.$get$_RouteEntry_notAnnounced();
        entry = new A._RouteEntry(t2, null, B._RouteLifecycle_1, t3, t3, t3);
        _this._history.push(entry);
        E.JSArray_methods.addAll$1(_this._history, t1.restoreEntriesForPage$2(entry, _this));
      }
      if (t1._pageToPagelessRoutes == null) {
        t1 = _this._widget;
        t2 = _this._history;
        t3 = t1.initialRoute;
        E.JSArray_methods.addAll$1(t2, J.map$1$1$ax(t1.onGenerateInitialRoutes$2(_this, t3), new A.NavigatorState_restoreState_closure(_this), type$._RouteEntry));
      }
      _this._flushHistoryUpdates$0();
    },
    didToggleBucket$1(oldBucket) {
      var t1, _this = this;
      _this.super$RestorationMixin$didToggleBucket(oldBucket);
      t1 = _this._serializableHistory;
      if (_this.RestorationMixin__bucket != null)
        t1.update$1(0, _this._history);
      else
        t1.clear$0(0);
    },
    get$restorationId() {
      return this._widget.restorationScopeId;
    },
    didChangeDependencies$0() {
      var host, t1, t2, _i, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
      host = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      _this._updateHeroController$1(host == null ? null : host.controller);
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].route.changedExternalState$0();
    },
    _updateHeroController$1(newHeroController) {
      var t2, _this = this,
        t1 = _this._heroControllerFromScope;
      if (t1 != newHeroController) {
        if (newHeroController != null)
          newHeroController._navigator = _this;
        t2 = t1 == null;
        if ((t2 ? null : t1._navigator) === _this)
          if (!t2)
            t1._navigator = null;
        _this._heroControllerFromScope = newHeroController;
        _this._updateEffectiveObservers$0();
      }
    },
    _updateEffectiveObservers$0() {
      var _this = this,
        t1 = _this._heroControllerFromScope,
        t2 = _this._widget;
      if (t1 != null)
        _this.__NavigatorState__effectiveObservers_A = E.JSArray_methods.$add(t2.observers, C._setArrayType([t1], type$.JSArray_NavigatorObserver));
      else
        _this.__NavigatorState__effectiveObservers_A = t2.observers;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _i, t2, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = oldWidget.observers;
      if (t1 !== _this._widget.observers) {
        for (_i = 0; false; ++_i)
          t1[_i]._navigator = null;
        for (t1 = _this._widget.observers, _i = 0; false; ++_i)
          t1[_i]._navigator = _this;
        _this._updateEffectiveObservers$0();
      }
      _this._widget.toString;
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].route.changedExternalState$0();
    },
    deactivate$0() {
      var t2, _i,
        t1 = this.__NavigatorState__effectiveObservers_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t2 = t1.length;
      _i = 0;
      for (; _i < t2; ++_i)
        t1[_i]._navigator = null;
      this.super$State$deactivate();
    },
    activate$0() {
      var t1, t2, _i;
      this.super$_NavigatorState_State_TickerProviderStateMixin$activate();
      t1 = this.__NavigatorState__effectiveObservers_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t2 = t1.length;
      _i = 0;
      for (; _i < t2; ++_i)
        t1[_i]._navigator = this;
    },
    dispose$0() {
      var t1, t2, _i, _this = this;
      _this._updateHeroController$1(null);
      _this.focusScopeNode.dispose$0();
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].dispose$0();
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    get$_allRouteOverlayEntries() {
      var t2, t3, _i,
        t1 = C._setArrayType([], type$.JSArray_OverlayEntry);
      for (t2 = this._history, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i)
        E.JSArray_methods.addAll$1(t1, t2[_i].route.get$overlayEntries());
      return t1;
    },
    _flushHistoryUpdates$1$rearrangeOverlay(rearrangeOverlay) {
      var t1, index, entry, previous, toBeDisposed, t2, poppedRoute, next, canRemoveOrAdd, seenTopActiveRoute, index0, t3, t4, previous0, lastEntry, routeName, _i, _i0, _this = this, _null = null;
      _this._flushingHistory = true;
      t1 = _this._history;
      index = t1.length - 1;
      entry = t1[index];
      previous = index > 0 ? t1[index - 1] : _null;
      toBeDisposed = C._setArrayType([], type$.JSArray__RouteEntry);
      for (t1 = _this._observedRouteDeletions, t2 = _this._observedRouteAdditions, poppedRoute = _null, next = poppedRoute, canRemoveOrAdd = false, seenTopActiveRoute = false; index >= 0;) {
        switch (entry.currentState.index) {
          case 1:
            index0 = _this._getIndexBefore$2(index - 1, F.navigator__RouteEntry_isPresentPredicate$closure());
            t3 = index0 >= 0 ? _this._history[index0] : _null;
            t3 = t3 == null ? _null : t3.route;
            t4 = entry.route;
            t4._navigator = _this;
            t4.install$0();
            entry.currentState = B._RouteLifecycle_2;
            t2._add$1(0, new A._NavigatorPushObservation(t4, t3));
            continue;
          case 2:
            if (canRemoveOrAdd || next == null) {
              t3 = entry.route;
              t3.didAdd$0();
              entry.currentState = B._RouteLifecycle_7;
              if (next == null)
                t3.didChangeNext$1(_null);
              continue;
            }
            break;
          case 3:
          case 4:
          case 6:
            t3 = previous == null ? _null : previous.route;
            index0 = _this._getIndexBefore$2(index - 1, F.navigator__RouteEntry_isPresentPredicate$closure());
            t4 = index0 >= 0 ? _this._history[index0] : _null;
            t4 = t4 == null ? _null : t4.route;
            entry.handlePush$4$isNewFirst$navigator$previous$previousPresent(next == null, _this, t3, t4);
            if (entry.currentState === B._RouteLifecycle_7)
              continue;
            break;
          case 5:
            if (!seenTopActiveRoute && poppedRoute != null) {
              entry.route.didPopNext$1(poppedRoute);
              entry.lastAnnouncedPoppedNextRoute = poppedRoute;
            }
            seenTopActiveRoute = true;
            break;
          case 7:
            if (!seenTopActiveRoute && poppedRoute != null) {
              entry.route.didPopNext$1(poppedRoute);
              entry.lastAnnouncedPoppedNextRoute = poppedRoute;
            }
            canRemoveOrAdd = true;
            seenTopActiveRoute = true;
            break;
          case 8:
            index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
            t3 = index0 >= 0 ? _this._history[index0] : _null;
            if (!entry.handlePop$2$navigator$previousPresent(_this, t3 == null ? _null : t3.route))
              continue;
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) {
                entry.route.didPopNext$1(poppedRoute);
                entry.lastAnnouncedPoppedNextRoute = poppedRoute;
              }
              poppedRoute = entry.route;
            }
            t3 = entry.route;
            index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
            t4 = index0 >= 0 ? _this._history[index0] : _null;
            t1._add$1(0, new A._NavigatorPopObservation(t3, t4 == null ? _null : t4.route));
            if (entry.currentState === B._RouteLifecycle_13)
              continue;
            canRemoveOrAdd = true;
            break;
          case 11:
            break;
          case 9:
            t3 = entry.route;
            t4 = entry.pendingResult;
            if (t4 == null)
              t4 = _null;
            t3 = t3._popCompleter.future;
            if ((t3._state & 30) !== 0)
              C.throwExpression(C.StateError$("Future already completed"));
            t3._asyncComplete$1(t4);
            entry.pendingResult = null;
            entry.currentState = B._RouteLifecycle_10;
            continue;
          case 10:
            if (!seenTopActiveRoute) {
              if (poppedRoute != null)
                entry.route.didPopNext$1(poppedRoute);
              poppedRoute = _null;
            }
            index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
            t3 = index0 >= 0 ? _this._history[index0] : _null;
            t3 = t3 == null ? _null : t3.route;
            entry.currentState = B._RouteLifecycle_12;
            if (entry._reportRemovalToObserver)
              t1._add$1(0, new A._NavigatorRemoveObservation(entry.route, t3));
            continue;
          case 12:
            if (!canRemoveOrAdd && next != null)
              break;
            entry.currentState = B._RouteLifecycle_13;
            continue;
          case 13:
            toBeDisposed.push(E.JSArray_methods.removeAt$1(_this._history, index));
            entry = next;
            break;
          case 14:
          case 0:
            break;
        }
        --index;
        previous0 = index > 0 ? _this._history[index - 1] : _null;
        next = entry;
        entry = previous;
        previous = previous0;
      }
      _this._flushObserverNotifications$0();
      _this._flushRouteAnnouncement$0();
      _this._widget.toString;
      t1 = _this._history;
      t1 = new C.CastList(t1, C._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      lastEntry = t1.lastWhere$2$orElse(t1, new A.NavigatorState__flushHistoryUpdates_closure(), new A.NavigatorState__flushHistoryUpdates_closure0());
      routeName = lastEntry == null ? _null : lastEntry.route._settings.name;
      if (routeName != null && routeName !== _this._lastAnnouncedRouteName) {
        A.SystemNavigator_routeInformationUpdated(routeName, false, _null);
        _this._lastAnnouncedRouteName = routeName;
      }
      for (t1 = toBeDisposed.length, _i = 0; _i < toBeDisposed.length; toBeDisposed.length === t1 || (0, C.throwConcurrentModificationError)(toBeDisposed), ++_i) {
        entry = toBeDisposed[_i];
        for (t2 = entry.route.get$overlayEntries(), t3 = t2.length, _i0 = 0; _i0 < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i0)
          J.remove$0$ax(t2[_i0]);
        entry.dispose$0();
      }
      if (rearrangeOverlay) {
        t1 = _this.__NavigatorState__overlayKey_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1 = t1.get$currentState();
        if (t1 != null)
          t1.rearrange$1(_this.get$_allRouteOverlayEntries());
      }
      if (_this.RestorationMixin__bucket != null)
        _this._serializableHistory.update$1(0, _this._history);
      _this._flushingHistory = false;
    },
    _flushHistoryUpdates$0() {
      return this._flushHistoryUpdates$1$rearrangeOverlay(true);
    },
    _flushObserverNotifications$0() {
      var observation, _this = this,
        t1 = _this.__NavigatorState__effectiveObservers_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1.length === 0) {
        _this._observedRouteDeletions.clear$0(0);
        _this._observedRouteAdditions.clear$0(0);
        return;
      }
      for (t1 = _this._observedRouteAdditions; !t1.get$isEmpty(t1);) {
        observation = t1.removeLast$0(0);
        E.JSArray_methods.forEach$1(_this.__NavigatorState__effectiveObservers_A, observation.get$notify());
      }
      for (t1 = _this._observedRouteDeletions; !t1.get$isEmpty(t1);) {
        observation = t1.removeFirst$0();
        E.JSArray_methods.forEach$1(_this.__NavigatorState__effectiveObservers_A, observation.get$notify());
      }
    },
    _flushRouteAnnouncement$0() {
      var entry, t1, next, t2, t3, index0, _this = this, _null = null,
        index = _this._history.length - 1;
      for (; index >= 0;) {
        entry = _this._history[index];
        t1 = entry.currentState.index;
        if (!(t1 <= 12 && t1 >= 3)) {
          --index;
          continue;
        }
        next = _this._getRouteAfter$2(index + 1, A.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t1 = next == null;
        t2 = t1 ? _null : next.route;
        t3 = entry.lastAnnouncedNextRoute;
        if (t2 != t3) {
          if ((t1 ? _null : next.route) == null) {
            t2 = entry.lastAnnouncedPoppedNextRoute;
            t2 = t2 != null && t2 === t3;
          } else
            t2 = false;
          if (!t2) {
            t2 = entry.route;
            t2.didChangeNext$1(t1 ? _null : next.route);
          }
          entry.lastAnnouncedNextRoute = t1 ? _null : next.route;
        }
        --index;
        index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t1 = index0 >= 0 ? _this._history[index0] : _null;
        t2 = t1 == null;
        t3 = t2 ? _null : t1.route;
        if (t3 != entry.lastAnnouncedPreviousRoute) {
          t3 = entry.route;
          t3.didChangePrevious$1(t2 ? _null : t1.route);
          entry.lastAnnouncedPreviousRoute = t2 ? _null : t1.route;
        }
      }
    },
    _getRouteBefore$2(index, predicate) {
      index = this._getIndexBefore$2(index, predicate);
      return index >= 0 ? this._history[index] : null;
    },
    _getIndexBefore$2(index, predicate) {
      while (true) {
        if (!(index >= 0 && !predicate.call$1(this._history[index])))
          break;
        --index;
      }
      return index;
    },
    _getRouteAfter$2(index, predicate) {
      var t1;
      while (true) {
        t1 = this._history;
        if (!(index < t1.length && !predicate.call$1(t1[index])))
          break;
        ++index;
      }
      t1 = this._history;
      return index < t1.length ? t1[index] : null;
    },
    _routeNamed$1$3$allowNull$arguments($name, allowNull, $arguments, $T) {
      var settings, t1, route;
      if (allowNull)
        this._widget.toString;
      settings = new F.RouteSettings($name, $arguments);
      t1 = $T._eval$1("Route<0>?");
      route = t1._as(this._widget.onGenerateRoute.call$1(settings));
      return route == null && !allowNull ? t1._as(this._widget.onUnknownRoute.call$1(settings)) : route;
    },
    _routeNamed$1$2$arguments($name, $arguments, $T) {
      return this._routeNamed$1$3$allowNull$arguments($name, false, $arguments, $T);
    },
    push$1$1(route) {
      var t1 = A._RouteEntry$(route, B._RouteLifecycle_3, null);
      this._history.push(t1);
      this._flushHistoryUpdates$0();
      this._afterNavigation$1(t1.route);
      return route._popCompleter.future;
    },
    push$1(route) {
      return this.push$1$1(route, type$.nullable_Object);
    },
    _afterNavigation$1(route) {
      var t1, t2, routeJsonable, settings, settingsJsonable;
      if (route != null) {
        t1 = type$.String;
        t2 = type$.dynamic;
        routeJsonable = C.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
        routeJsonable.$indexSet(0, "description", route instanceof F.TransitionRoute ? route.get$debugLabel() : route.toString$0(0));
        settings = route._settings;
        settingsJsonable = C.LinkedHashMap_LinkedHashMap$_literal(["name", settings.name], t1, t2);
        t1 = settings.$arguments;
        if (t1 != null)
          settingsJsonable.$indexSet(0, "arguments", E.C_JsonCodec.encode$2$toEncodable(t1, new A.NavigatorState__afterNavigation_closure()));
        routeJsonable.$indexSet(0, "settings", settingsJsonable);
      } else
        routeJsonable = null;
      C.postEvent("Flutter.Navigation", C.LinkedHashMap_LinkedHashMap$_literal(["route", routeJsonable], type$.String, type$.dynamic));
      this._cancelActivePointers$0();
    },
    maybePop$1$1(result) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, lastEntry, disposition, t1;
      var $async$maybePop$1$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._history;
                t1 = new C.CastList(t1, C._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
                lastEntry = t1.lastWhere$2$orElse(t1, new A.NavigatorState_maybePop_closure(), new A.NavigatorState_maybePop_closure0());
                if (lastEntry == null) {
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 3;
                return C._asyncAwait(lastEntry.route.willPop$0(), $async$maybePop$1$1);
              case 3:
                // returning from await.
                disposition = $async$result;
                if ($async$self._framework$_element == null) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = $async$self._history;
                t1 = new C.CastList(t1, C._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
                if (lastEntry !== t1.lastWhere$2$orElse(t1, new A.NavigatorState_maybePop_closure1(), new A.NavigatorState_maybePop_closure2())) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                switch (disposition.index) {
                  case 2:
                    $async$returnValue = false;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case 0:
                    $async$self.pop$1(result);
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case 1:
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return C._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return C._asyncStartSync($async$maybePop$1$1, $async$completer);
    },
    maybePop$1(result) {
      return this.maybePop$1$1(result, type$.nullable_Object);
    },
    maybePop$0() {
      return this.maybePop$1$1(null, type$.nullable_Object);
    },
    pop$1$1(result) {
      var entry = E.JSArray_methods.lastWhere$1(this._history, F.navigator__RouteEntry_isPresentPredicate$closure());
      entry.pendingResult = result;
      entry.currentState = B._RouteLifecycle_8;
      this._flushHistoryUpdates$1$rearrangeOverlay(false);
      this._afterNavigation$1(entry.route);
    },
    pop$0() {
      return this.pop$1$1(null, type$.nullable_Object);
    },
    pop$1(result) {
      return this.pop$1$1(result, type$.nullable_Object);
    },
    removeRoute$1(route) {
      var t1, _this = this,
        wasCurrent = route.get$isCurrent();
      E.JSArray_methods.firstWhere$1(_this._history, F._RouteEntry_isRoutePredicate(route)).remove$0(0);
      _this._flushHistoryUpdates$1$rearrangeOverlay(false);
      if (wasCurrent) {
        t1 = _this._history;
        t1 = new C.CastList(t1, C._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
        t1 = t1.lastWhere$2$orElse(t1, new A.NavigatorState_removeRoute_closure(), new A.NavigatorState_removeRoute_closure0());
        _this._afterNavigation$1(t1 == null ? null : t1.route);
      }
    },
    finalizeRoute$1(route) {
      var _this = this,
        index = E.JSArray_methods.indexWhere$1(_this._history, F._RouteEntry_isRoutePredicate(route)),
        entry = _this._history[index];
      entry.currentState = B._RouteLifecycle_13;
      if (!_this._flushingHistory)
        _this._flushHistoryUpdates$1$rearrangeOverlay(false);
    },
    set$_userGesturesInProgress(value) {
      this._userGesturesInProgressCount = value;
      this.userGestureInProgressNotifier.set$value(0, value > 0);
    },
    get$userGestureInProgress() {
      return this.userGestureInProgressNotifier._change_notifier$_value;
    },
    didStartUserGesture$0() {
      var routeIndex, route, previousRoute, t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount + 1);
      if (_this._userGesturesInProgressCount === 1) {
        routeIndex = _this._getIndexBefore$2(_this._history.length - 1, A.navigator__RouteEntry_willBePresentPredicate$closure());
        route = _this._history[routeIndex].route;
        previousRoute = !route.get$willHandlePopInternally() && routeIndex > 0 ? _this._getRouteBefore$2(routeIndex - 1, A.navigator__RouteEntry_willBePresentPredicate$closure()).route : null;
        t1 = _this.__NavigatorState__effectiveObservers_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t2 = t1.length;
        _i = 0;
        for (; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
          t1[_i]._maybeStartHeroTransition$4(route, previousRoute, B.HeroFlightDirection_1, true);
      }
    },
    didStopUserGesture$0() {
      var t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount - 1);
      if (_this._userGesturesInProgressCount === 0) {
        t1 = _this.__NavigatorState__effectiveObservers_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t2 = t1.length;
        _i = 0;
        for (; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].didStopUserGesture$0();
      }
    },
    _navigator$_handlePointerDown$1($event) {
      this._activePointers.add$1(0, $event.get$pointer());
    },
    _handlePointerUpOrCancel$1($event) {
      this._activePointers.remove$1(0, $event.get$pointer());
    },
    _cancelActivePointers$0() {
      if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase === E.SchedulerPhase_0) {
        var t1 = this.__NavigatorState__overlayKey_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
        this.setState$1(new A.NavigatorState__cancelActivePointers_closure(t1 == null ? null : t1.findAncestorRenderObjectOfType$1$0(type$.RenderAbsorbPointer)));
      }
      t1 = this._activePointers;
      E.JSArray_methods.forEach$1(C.List_List$of(t1, true, C._instanceType(t1)._precomputed1), $.WidgetsBinding__instance.get$cancelPointer());
    },
    build$1(context) {
      var t4, _this = this, _null = null,
        t1 = _this.get$_handlePointerUpOrCancel(),
        t2 = _this.RestorationMixin__bucket,
        t3 = _this.__NavigatorState__overlayKey_A;
      t3 === $ && C.throwUnnamedLateFieldNI();
      if (t3.get$currentState() == null) {
        t4 = _this.get$_allRouteOverlayEntries();
        t4 = J.JSArray_JSArray$markFixed(t4.slice(0), C._arrayInstanceType(t4)._precomputed1);
      } else
        t4 = H.List_empty12;
      return new A.HeroControllerScope(_null, D.Listener$(G.HitTestBehavior_0, new A.AbsorbPointer(false, F.FocusScope$(true, F.UnmanagedRestorationScope$(t2, new A.Overlay(t4, t3)), _null, _this.focusScopeNode), _null), t1, _this.get$_navigator$_handlePointerDown(), _null, _null, t1), _null);
    }
  };
  A._RouteRestorationType.prototype = {
    toString$0(_) {
      return "_RouteRestorationType." + this._core$_name;
    }
  };
  A._RestorationInformation.prototype = {
    get$isRestorable() {
      return true;
    },
    computeSerializableData$0() {
      return C._setArrayType([this.type.index], type$.JSArray_Object);
    }
  };
  A._NamedRestorationInformation.prototype = {
    computeSerializableData$0() {
      var _this = this,
        t1 = _this.super$_RestorationInformation$computeSerializableData(),
        t2 = C._setArrayType([_this.restorationScopeId, _this.name], type$.JSArray_Object),
        t3 = _this.$arguments;
      if (t3 != null)
        t2.push(t3);
      E.JSArray_methods.addAll$1(t1, t2);
      return t1;
    },
    createRoute$1($navigator) {
      var t1 = $navigator._routeNamed$1$2$arguments(this.name, this.$arguments, type$.dynamic);
      t1.toString;
      return t1;
    },
    get$restorationScopeId() {
      return this.restorationScopeId;
    }
  };
  A._AnonymousRestorationInformation.prototype = {
    get$isRestorable() {
      return false;
    },
    computeSerializableData$0() {
      A.PluginUtilities_getCallbackHandle(this.routeBuilder);
    },
    createRoute$1($navigator) {
      var t1 = $navigator._framework$_element;
      t1.toString;
      return this.routeBuilder.call$2(t1, this.$arguments);
    },
    get$restorationScopeId() {
      return this.restorationScopeId;
    }
  };
  A._HistoryProperty.prototype = {
    update$1(_, $history) {
      var newRoutesForCurrentPage, t1, oldRoutesForCurrentPage, newMap, removedPages, currentPage, needsSerialization, restorationEnabled, _i, entry, t2, t3, t4, t5, _this = this, _null = null,
        wasUninitialized = _this._pageToPagelessRoutes == null;
      if (wasUninitialized)
        _this._pageToPagelessRoutes = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_Object);
      newRoutesForCurrentPage = C._setArrayType([], type$.JSArray_Object);
      t1 = _this._pageToPagelessRoutes;
      t1.toString;
      oldRoutesForCurrentPage = J.$index$asx(t1, null);
      if (oldRoutesForCurrentPage == null)
        oldRoutesForCurrentPage = B.List_empty13;
      newMap = C.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_String, type$.List_Object);
      t1 = _this._pageToPagelessRoutes;
      t1.toString;
      removedPages = J.toSet$0$ax(J.get$keys$x(t1));
      for (t1 = $history.length, currentPage = _null, needsSerialization = wasUninitialized, restorationEnabled = true, _i = 0; _i < $history.length; $history.length === t1 || (0, C.throwConcurrentModificationError)($history), ++_i) {
        entry = $history[_i];
        if (entry.currentState.index > 7) {
          t2 = entry.route;
          t2._restorationScopeId.set$value(0, _null);
          continue;
        }
        if (restorationEnabled) {
          t2 = entry.restorationInformation;
          t2 = t2 == null ? _null : t2.get$isRestorable();
          restorationEnabled = t2 === true;
        } else
          restorationEnabled = false;
        t2 = entry.route;
        t3 = restorationEnabled ? entry.get$restorationId() : _null;
        t2._restorationScopeId.set$value(0, t3);
        if (restorationEnabled) {
          t2 = entry.restorationInformation;
          t3 = t2._serializableData;
          t2 = t3 == null ? t2._serializableData = t2.computeSerializableData$0() : t3;
          if (!needsSerialization) {
            t3 = J.getInterceptor$asx(oldRoutesForCurrentPage);
            t4 = t3.get$length(oldRoutesForCurrentPage);
            t5 = newRoutesForCurrentPage.length;
            needsSerialization = t4 <= t5 || !J.$eq$(t3.$index(oldRoutesForCurrentPage, t5), t2);
          } else
            needsSerialization = true;
          newRoutesForCurrentPage.push(t2);
        }
      }
      needsSerialization = needsSerialization || newRoutesForCurrentPage.length !== J.get$length$asx(oldRoutesForCurrentPage);
      _this._finalizePage$4(newRoutesForCurrentPage, currentPage, newMap, removedPages);
      if (needsSerialization || removedPages.get$isNotEmpty(removedPages)) {
        _this._pageToPagelessRoutes = newMap;
        _this.notifyListeners$0();
      }
    },
    _finalizePage$4(routes, page, pageToRoutes, pagesToRemove) {
      var restorationId,
        t1 = routes.length;
      if (t1 !== 0) {
        restorationId = page == null ? null : page.get$restorationId();
        pageToRoutes.$indexSet(0, restorationId, routes);
        pagesToRemove.remove$1(0, restorationId);
      }
    },
    clear$0(_) {
      if (this._pageToPagelessRoutes == null)
        return;
      this._pageToPagelessRoutes = null;
      this.notifyListeners$0();
    },
    restoreEntriesForPage$2(page, $navigator) {
      var t1, serializedData, t2, route, t3,
        result = C._setArrayType([], type$.JSArray__RouteEntry);
      if (this._pageToPagelessRoutes != null)
        t1 = page != null && page.get$restorationId() == null;
      else
        t1 = true;
      if (t1)
        return result;
      t1 = this._pageToPagelessRoutes;
      t1.toString;
      serializedData = J.$index$asx(t1, page == null ? null : page.get$restorationId());
      if (serializedData == null)
        return result;
      for (t1 = J.get$iterator$ax(serializedData); t1.moveNext$0();) {
        t2 = A._RestorationInformation__RestorationInformation$fromSerializableData(t1.get$current(t1));
        route = t2.createRoute$1($navigator);
        t3 = $.$get$_RouteEntry_notAnnounced();
        result.push(new A._RouteEntry(route, t2, B._RouteLifecycle_1, t3, t3, t3));
      }
      return result;
    },
    createDefaultValue$0() {
      return null;
    },
    fromPrimitives$1(data) {
      data.toString;
      return J.map$2$1$ax(type$.Map_dynamic_dynamic._as(data), new A._HistoryProperty_fromPrimitives_closure(), type$.nullable_String, type$.List_Object);
    },
    initWithValue$1(value) {
      this._pageToPagelessRoutes = value;
    },
    toPrimitives$0() {
      return this._pageToPagelessRoutes;
    },
    get$enabled(_) {
      return this._pageToPagelessRoutes != null;
    }
  };
  A._NavigatorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._framework$_element;
      t1.toString;
      t1 = D.RestorationScope_of(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_NavigatorState_State_TickerProviderStateMixin$dispose();
    }
  };
  A._OverlayEntryWidget.prototype = {
    createState$0() {
      return new A._OverlayEntryWidgetState(G._StateLifecycle_0);
    }
  };
  A._OverlayEntryWidgetState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._widget.entry._overlayStateMounted.set$value(0, true);
    },
    dispose$0() {
      this._widget.entry._overlayStateMounted.set$value(0, false);
      var t1 = this._widget.entry;
      if (t1._disposedByOwner) {
        t1 = t1._overlayStateMounted;
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this._widget;
      return new A.TickerMode(t1.tickerEnabled, t1.entry.builder.call$1(context), null);
    },
    _overlay$_markNeedsBuild$0() {
      this.setState$1(new A._OverlayEntryWidgetState__markNeedsBuild_closure());
    }
  };
  A.Overlay.prototype = {
    createState$0() {
      return new A.OverlayState(C._setArrayType([], type$.JSArray_OverlayEntry), null, null, G._StateLifecycle_0);
    }
  };
  A.OverlayState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.insertAll$1(0, this._widget.initialEntries);
    },
    _insertionIndex$2(below, above) {
      return this._overlay$_entries.length;
    },
    insert$1(_, entry) {
      entry._overlay = this;
      this.setState$1(new A.OverlayState_insert_closure(this, null, null, entry));
    },
    insertAll$1(_, entries) {
      var _i,
        t1 = entries.length;
      if (t1 === 0)
        return;
      for (_i = 0; _i < t1; ++_i)
        entries[_i]._overlay = this;
      this.setState$1(new A.OverlayState_insertAll_closure(this, null, null, entries));
    },
    rearrange$1(newEntries) {
      var newEntriesList, t1, old, _i, entry, _this = this;
      if (type$.List_OverlayEntry._is(newEntries))
        newEntriesList = newEntries;
      else
        newEntriesList = J.JSArray_JSArray$markFixed(newEntries.slice(0), C._arrayInstanceType(newEntries)._precomputed1);
      if (newEntriesList.length === 0)
        return;
      t1 = _this._overlay$_entries;
      if (C.listEquals0(t1, newEntriesList))
        return;
      old = C.LinkedHashSet_LinkedHashSet$of(t1, type$.OverlayEntry);
      for (t1 = newEntriesList.length, _i = 0; _i < t1; ++_i) {
        entry = newEntriesList[_i];
        if (entry._overlay == null)
          entry._overlay = _this;
      }
      _this.setState$1(new A.OverlayState_rearrange_closure(_this, newEntriesList, old, null, null));
    },
    _overlay$_markDirty$0() {
      if (this._framework$_element != null)
        this.setState$1(new A.OverlayState__markDirty_closure());
    },
    _didChangeEntryOpacity$0() {
      this.setState$1(new A.OverlayState__didChangeEntryOpacity_closure());
    },
    build$1(context) {
      var t1, i, onstage, onstageCount, entry, t2,
        children = C._setArrayType([], type$.JSArray_Widget);
      for (t1 = this._overlay$_entries, i = t1.length - 1, onstage = true, onstageCount = 0; i >= 0; --i) {
        entry = t1[i];
        if (onstage) {
          ++onstageCount;
          children.push(new A._OverlayEntryWidget(entry, true, entry._key));
          onstage = !entry._opaque || false;
        } else if (entry._maintainState)
          children.push(new A._OverlayEntryWidget(entry, false, entry._key));
      }
      t1 = children.length;
      this._widget.toString;
      t2 = type$.ReversedListIterable_Widget;
      return new A._Theatre(t1 - onstageCount, E.Clip_1, C.List_List$of(new C.ReversedListIterable(children, t2), false, t2._eval$1("ListIterable.E")), null);
    }
  };
  A._Theatre.prototype = {
    createElement$0(_) {
      return new A._TheatreElement(C.HashSet_HashSet(type$.Element), this, E._ElementLifecycle_0);
    },
    createRenderObject$1(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      t1 = new A._RenderTheatre(t1.textDirection, this.skipCount, this.clipBehavior, C.LayerHandle$(), 0, null, null, C.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1 = this.skipCount;
      if (renderObject._overlay$_skipCount !== t1) {
        renderObject._overlay$_skipCount = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      renderObject.set$textDirection(t1.textDirection);
      t1 = this.clipBehavior;
      if (t1 !== renderObject._overlay$_clipBehavior) {
        renderObject._overlay$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  A._TheatreElement.prototype = {
    get$renderObject() {
      return type$._RenderTheatre._as(D.MultiChildRenderObjectElement.prototype.get$renderObject.call(this));
    }
  };
  A._RenderTheatre.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof D.StackParentData))
        child.parentData = new D.StackParentData(null, null, E.Offset_0_0);
    },
    _overlay$_resolve$0() {
      if (this._overlay$_resolvedAlignment != null)
        return;
      this._overlay$_resolvedAlignment = G.AlignmentDirectional_m1_m1.resolve$1(this._overlay$_textDirection);
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._overlay$_textDirection === value)
        return;
      _this._overlay$_textDirection = value;
      _this._overlay$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    get$_firstOnstageChild() {
      var child, toSkip, t1, t2, _this = this;
      if (_this._overlay$_skipCount === D.ContainerRenderObjectMixin.prototype.get$childCount.call(_this))
        return null;
      child = D.ContainerRenderObjectMixin.prototype.get$firstChild.call(_this, _this);
      for (toSkip = _this._overlay$_skipCount, t1 = type$.StackParentData; toSkip > 0; --toSkip) {
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
      return child;
    },
    computeMinIntrinsicWidth$1(height) {
      return D.RenderStack_getIntrinsicDimension(this.get$_firstOnstageChild(), new A._RenderTheatre_computeMinIntrinsicWidth_closure(height));
    },
    computeMaxIntrinsicWidth$1(height) {
      return D.RenderStack_getIntrinsicDimension(this.get$_firstOnstageChild(), new A._RenderTheatre_computeMaxIntrinsicWidth_closure(height));
    },
    computeMinIntrinsicHeight$1(width) {
      return D.RenderStack_getIntrinsicDimension(this.get$_firstOnstageChild(), new A._RenderTheatre_computeMinIntrinsicHeight_closure(width));
    },
    computeMaxIntrinsicHeight$1(width) {
      return D.RenderStack_getIntrinsicDimension(this.get$_firstOnstageChild(), new A._RenderTheatre_computeMaxIntrinsicHeight_closure(width));
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1, result, t2, candidate,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, result = null; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += t2.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(C.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), C.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    performLayout$0() {
      var t1, nonPositionedConstraints, child, t2, t3, t4, t5, t6, _this = this;
      _this._overlay$_hasVisualOverflow = false;
      if (_this.ContainerRenderObjectMixin__childCount - _this._overlay$_skipCount === 0)
        return;
      _this._overlay$_resolve$0();
      t1 = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this));
      nonPositionedConstraints = C.BoxConstraints$tight(new C.Size(C.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), C.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)));
      child = _this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, t2 = type$.Offset; child != null;) {
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        if (!t3.get$isPositioned()) {
          child.layout$2$parentUsesSize(nonPositionedConstraints, true);
          t4 = _this._overlay$_resolvedAlignment;
          t4.toString;
          t5 = _this._size;
          t5.toString;
          t6 = child._size;
          t6.toString;
          t3.offset = t4.alongOffset$1(t2._as(t5.$sub(0, t6)));
        } else {
          t4 = _this._size;
          t4.toString;
          t5 = _this._overlay$_resolvedAlignment;
          t5.toString;
          _this._overlay$_hasVisualOverflow = D.RenderStack_layoutPositionedChild(child, t3, t4, t5) || _this._overlay$_hasVisualOverflow;
        }
        child = t3.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position(result, position) {
      var t2, i, child, _this = this, _box_0 = {},
        t1 = _box_0.child = _this._overlay$_skipCount === D.ContainerRenderObjectMixin.prototype.get$childCount.call(_this) ? null : _this.ContainerRenderObjectMixin__lastChild;
      for (t2 = type$.StackParentData, i = 0; i < _this.ContainerRenderObjectMixin__childCount - _this._overlay$_skipCount; ++i, t1 = child) {
        t1 = t1.parentData;
        t1.toString;
        t2._as(t1);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new A._RenderTheatre_hitTestChildren_closure(_box_0, position, t1), t1.offset, position))
          return true;
        child = t1.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    paintStack$2(context, offset) {
      var t1, t2, t3, t4, t5,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, t2 = offset._dx, t3 = offset._dy; child != null;) {
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        t5 = t4.offset;
        context.paintChild$2(child, new C.Offset(t5._dx + t2, t5._dy + t3));
        child = t4.ContainerParentDataMixin_nextSibling;
      }
    },
    paint$2(context, offset) {
      var t3, _this = this,
        t1 = _this._overlay$_hasVisualOverflow && _this._overlay$_clipBehavior !== E.Clip_0,
        t2 = _this._overlay$_clipRectLayer;
      if (t1) {
        t1 = _this.__RenderObject__needsCompositing_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t3 = _this._size;
        t2.set$layer(0, context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new C.Rect(0, 0, 0 + t3._dx, 0 + t3._dy), _this.get$paintStack(), _this._overlay$_clipBehavior, t2._layer));
      } else {
        t2.set$layer(0, null);
        _this.paintStack$2(context, offset);
      }
    },
    dispose$0() {
      this._overlay$_clipRectLayer.set$layer(0, null);
      this.super$RenderObject$dispose();
    },
    visitChildrenForSemantics$1(visitor) {
      var t1, t2,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData; child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    describeApproximatePaintClip$1(child) {
      var t1;
      switch (this._overlay$_clipBehavior.index) {
        case 0:
          return null;
        case 1:
        case 2:
        case 3:
          if (this._overlay$_hasVisualOverflow) {
            t1 = this._size;
            t1 = new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
          } else
            t1 = null;
          return t1;
      }
    },
    debugDescribeChildren$0() {
      var count, onstage, t2,
        t1 = type$.JSArray_DiagnosticsNode,
        offstageChildren = C._setArrayType([], t1),
        onstageChildren = C._setArrayType([], t1),
        child = this.ContainerRenderObjectMixin__firstChild,
        firstOnstageChild = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, count = 1, onstage = false; child != null;) {
        if (child === firstOnstageChild) {
          count = 1;
          onstage = true;
        }
        t2 = "" + count;
        if (onstage)
          onstageChildren.push(new C.DiagnosticableTreeNode(child, "onstage " + t2, true, true, null, null));
        else
          offstageChildren.push(new C.DiagnosticableTreeNode(child, "offstage " + t2, true, true, null, E.DiagnosticsTreeStyle_2));
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
        ++count;
      }
      t1 = C.List_List$of(onstageChildren, true, type$.DiagnosticsNode);
      if (offstageChildren.length !== 0)
        E.JSArray_methods.addAll$1(t1, offstageChildren);
      else
        t1.push(C.DiagnosticsNode_DiagnosticsNode$message("no offstage children", true, E.DiagnosticsTreeStyle_2));
      return t1;
    }
  };
  A._OverlayState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.__RenderTheatre_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A.PageRoute.prototype = {
    get$opaque() {
      return true;
    },
    get$barrierDismissible() {
      return false;
    },
    canTransitionTo$1(nextRoute) {
      return nextRoute instanceof A.PageRoute;
    },
    canTransitionFrom$1(previousRoute) {
      return previousRoute instanceof A.PageRoute;
    }
  };
  A.PerformanceOverlay.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderPerformanceOverlay(this.optionsMask, 0, false, false, C.LayerHandle$());
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$optionsMask(this.optionsMask);
      renderObject.set$rasterizerThreshold(0);
    }
  };
  A.RootRestorationScope.prototype = {
    createState$0() {
      return new A._RootRestorationScopeState(G._StateLifecycle_0);
    }
  };
  A._RootRestorationScopeState.prototype = {
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._framework$_element;
      t1.toString;
      _this._ancestorBucket = D.RestorationScope_of(t1);
      _this._loadRootBucketIfNecessary$0();
      if (_this._okToRenderBlankContainer == null) {
        _this._widget.toString;
        _this._okToRenderBlankContainer = false;
      }
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._loadRootBucketIfNecessary$0();
    },
    get$_isWaitingForRootBucket() {
      this._widget.toString;
      return false;
    },
    _loadRootBucketIfNecessary$0() {
      var t1, _this = this;
      if (_this.get$_isWaitingForRootBucket() && !_this._isLoadingRootBucket) {
        _this._isLoadingRootBucket = true;
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1.get$rootBucket().then$1$1(new A._RootRestorationScopeState__loadRootBucketIfNecessary_closure(_this), type$.Null);
      }
    },
    _replaceRootBucket$0() {
      var t1, _this = this;
      _this._rootBucketValid = false;
      _this._restoration0$_rootBucket = null;
      t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      t1.removeListener$1(0, _this.get$_replaceRootBucket());
      _this._loadRootBucketIfNecessary$0();
    },
    dispose$0() {
      if (this._rootBucketValid) {
        var t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
        t1 === $ && C.throwUnnamedLateFieldNI();
        t1.removeListener$1(0, this.get$_replaceRootBucket());
      }
      this.super$State$dispose();
    },
    build$1(context) {
      var t2, t3, _this = this,
        t1 = _this._okToRenderBlankContainer;
      t1.toString;
      if (t1 && _this.get$_isWaitingForRootBucket())
        return G.SizedBox_0_0_null_null;
      t1 = _this._ancestorBucket;
      if (t1 == null)
        t1 = _this._restoration0$_rootBucket;
      t2 = _this._widget;
      t3 = t2.restorationId;
      return F.UnmanagedRestorationScope$(t1, new F.RestorationScope(t2.child, t3, null));
    }
  };
  A.RestorableNum.prototype = {};
  A.Router.prototype = {
    createState$0() {
      return new A._RouterState(new A._RestorableRouteInformation($.$get$ChangeNotifier__emptyListeners()), null, C.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), null, true, null, G._StateLifecycle_0, this.$ti._eval$1("_RouterState<1>"));
    }
  };
  A.RouteInformationReportingType.prototype = {
    toString$0(_) {
      return "RouteInformationReportingType." + this._core$_name;
    }
  };
  A._RouterState.prototype = {
    get$restorationId() {
      return this._widget.restorationScopeId;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget.routeInformationProvider;
      if (t1 != null)
        t1.addListener$1(0, _this.get$_handleRouteInformationProviderNotification());
      _this._widget.backButtonDispatcher.addCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      _this._widget.routerDelegate.addListener$1(0, _this.get$_handleRouterDelegateNotification());
    },
    restoreState$2(oldBucket, initialRestore) {
      var t2, t3, _this = this,
        t1 = _this._routeInformation;
      _this.registerForRestoration$2(t1, "route");
      t2 = t1._restoration_properties$_value;
      t3 = t2 == null;
      if ((t3 ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) != null) {
        t1 = t3 ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
        t1.toString;
        _this._processRouteInformation$2(t1, new A._RouterState_restoreState_closure(_this));
      } else {
        t1 = _this._widget.routeInformationProvider;
        if (t1 != null)
          _this._processRouteInformation$2(t1._router$_value, new A._RouterState_restoreState_closure0(_this));
      }
    },
    _scheduleRouteInformationReportingTask$0() {
      var _this = this;
      if (_this._routeInformationReportingTaskScheduled || _this._widget.routeInformationProvider == null)
        return;
      _this._routeInformationReportingTaskScheduled = true;
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(_this.get$_reportRouteInformation());
    },
    _reportRouteInformation$1(timestamp) {
      var t1, t2, t3, replace, _this = this;
      _this._routeInformationReportingTaskScheduled = false;
      t1 = _this._routeInformation;
      t2 = t1._restoration_properties$_value;
      t3 = t2 == null;
      if ((t3 ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) != null) {
        t1 = t3 ? C._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
        t1.toString;
        t2 = _this._widget.routeInformationProvider;
        t2.toString;
        t3 = _this._currentIntentionToReport;
        t3.toString;
        if (t3 !== B.RouteInformationReportingType_1)
          replace = t3 === B.RouteInformationReportingType_0 && t2._valueInEngine.location == t1.location;
        else
          replace = true;
        E.OptionalMethodChannel_urv.invokeMethod$1$1("selectMultiEntryHistory", type$.void);
        t3 = t1.location;
        t3.toString;
        A.SystemNavigator_routeInformationUpdated(t3, replace, t1.state);
        t2._valueInEngine = t2._router$_value = t1;
      }
      _this._currentIntentionToReport = B.RouteInformationReportingType_0;
    },
    _retrieveNewRouteInformation$0() {
      this._widget.routerDelegate.get$currentConfiguration();
      this._widget.toString;
      return null;
    },
    _maybeNeedToReportRouteInformation$0() {
      var _this = this;
      _this._routeInformation.set$value(0, _this._retrieveNewRouteInformation$0());
      if (_this._currentIntentionToReport == null)
        _this._currentIntentionToReport = B.RouteInformationReportingType_0;
      _this._scheduleRouteInformationReportingTask$0();
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.___RouterState__routeParsePending_A = true;
      _this.super$__RouterState_State_RestorationMixin$didChangeDependencies();
      t1 = _this._widget.routeInformationProvider;
      if (t1 != null && _this.___RouterState__routeParsePending_A)
        _this._processRouteInformation$2(t1._router$_value, new A._RouterState_didChangeDependencies_closure(_this));
      _this.___RouterState__routeParsePending_A = false;
      _this._maybeNeedToReportRouteInformation$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      _this.super$__RouterState_State_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t2 = oldWidget.routeInformationProvider;
      t3 = t1.routeInformationProvider == t2;
      if (t3)
        t1.backButtonDispatcher === oldWidget.backButtonDispatcher;
      _this._currentRouterTransaction = new C.Object();
      if (!t3) {
        t1 = t2 == null;
        if (!t1)
          t2.removeListener$1(0, _this.get$_handleRouteInformationProviderNotification());
        t3 = _this._widget.routeInformationProvider;
        if (t3 != null)
          t3.addListener$1(0, _this.get$_handleRouteInformationProviderNotification());
        t1 = t1 ? null : t2._router$_value;
        t2 = _this._widget.routeInformationProvider;
        if (t1 != (t2 == null ? null : t2._router$_value))
          _this._handleRouteInformationProviderNotification$0();
      }
      t1 = oldWidget.backButtonDispatcher;
      if (_this._widget.backButtonDispatcher !== t1) {
        t2 = _this.get$_handleBackButtonDispatcherNotification();
        t1.removeCallback$1(t2);
        _this._widget.backButtonDispatcher.addCallback$1(t2);
      }
      _this._widget.toString;
      t1 = _this.get$_handleRouterDelegateNotification();
      oldWidget.routerDelegate.removeListener$1(0, t1);
      _this._widget.routerDelegate.addListener$1(0, t1);
      _this._maybeNeedToReportRouteInformation$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._widget.routeInformationProvider;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_handleRouteInformationProviderNotification());
      _this._widget.backButtonDispatcher.removeCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      _this._widget.routerDelegate.removeListener$1(0, _this.get$_handleRouterDelegateNotification());
      _this._currentRouterTransaction = null;
      _this.super$__RouterState_State_RestorationMixin$dispose();
    },
    _processRouteInformation$2(information, delegateRouteSetter) {
      var t1, t2, _this = this;
      _this.___RouterState__routeParsePending_A = false;
      _this._currentRouterTransaction = new C.Object();
      t1 = _this._widget.routeInformationParser;
      t1.toString;
      t2 = _this._framework$_element;
      t2.toString;
      t1.parseRouteInformationWithDependencies$2(information, t2).then$1$1(_this._processParsedRouteInformation$2(_this._currentRouterTransaction, delegateRouteSetter), type$.void);
    },
    _processParsedRouteInformation$2(transaction, delegateRouteSetter) {
      return new A._RouterState__processParsedRouteInformation_closure(this, transaction, delegateRouteSetter);
    },
    _handleRouteInformationProviderNotification$0() {
      var _this = this;
      _this.___RouterState__routeParsePending_A = true;
      _this._processRouteInformation$2(_this._widget.routeInformationProvider._router$_value, new A._RouterState__handleRouteInformationProviderNotification_closure(_this));
    },
    _handleBackButtonDispatcherNotification$0() {
      var _this = this;
      _this._currentRouterTransaction = new C.Object();
      return _this._widget.routerDelegate.popRoute$0().then$1$1(_this._handleRoutePopped$1(_this._currentRouterTransaction), type$.bool);
    },
    _handleRoutePopped$1(transaction) {
      return new A._RouterState__handleRoutePopped_closure(this, transaction);
    },
    _router$_rebuild$0() {
      this.setState$1(new A._RouterState__rebuild_closure());
      this._maybeNeedToReportRouteInformation$0();
      return new C.SynchronousFuture(null, type$.SynchronousFuture_void);
    },
    _handleRouterDelegateNotification$0() {
      this.setState$1(new A._RouterState__handleRouterDelegateNotification_closure());
      this._maybeNeedToReportRouteInformation$0();
    },
    build$1(context) {
      var t1 = this.RestorationMixin__bucket,
        t2 = this._widget,
        t3 = t2.routeInformationProvider,
        t4 = t2.backButtonDispatcher,
        t5 = t2.routeInformationParser;
      t2 = t2.routerDelegate;
      return F.UnmanagedRestorationScope$(t1, new A._RouterScope(t3, t4, t5, t2, this, new F.Builder(t2.get$build(), null), null));
    }
  };
  A._RouterScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      if (this.routeInformationProvider == oldWidget.routeInformationProvider)
        this.backButtonDispatcher === oldWidget.backButtonDispatcher;
      return true;
    }
  };
  A._RestorableRouteInformation.prototype = {
    createDefaultValue$0() {
      return null;
    },
    didUpdateValue$1(oldValue) {
      this.notifyListeners$0();
    },
    fromPrimitives$1(data) {
      var t1;
      if (data == null)
        return null;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$ax(data);
      return new C.RouteInformation(C._asStringQ(t1.get$first(data)), t1.get$last(data));
    },
    toPrimitives$0() {
      var t3, _this = this,
        t1 = _this._restoration_properties$_value,
        t2 = t1 == null;
      if ((t2 ? C._instanceType(_this)._eval$1("RestorableValue.T")._as(t1) : t1) == null)
        t1 = null;
      else {
        t3 = (t2 ? C._instanceType(_this)._eval$1("RestorableValue.T")._as(t1) : t1).location;
        t1 = [t3, (t2 ? C._instanceType(_this)._eval$1("RestorableValue.T")._as(t1) : t1).state];
      }
      return t1;
    }
  };
  A.__RouterState_State_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._framework$_element;
      t1.toString;
      t1 = D.RestorationScope_of(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A.__RouterState_State_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$State$dispose();
    }
  };
  A.LocalHistoryEntry.prototype = {
    remove$0(_) {
      var t1 = this._routes$_owner;
      if (t1 != null)
        t1.removeLocalHistoryEntry$1(this);
    },
    _notifyRemoved$0() {
      this.onRemove.call$0();
    }
  };
  A._ScrollNotificationObserverScope.prototype = {
    updateShouldNotify$1(old) {
      return this._scrollNotificationObserverState !== old._scrollNotificationObserverState;
    }
  };
  A._ListenerEntry.prototype = {
    listener$1($receiver, arg0) {
      return this.listener.call$1(arg0);
    }
  };
  A.ScrollNotificationObserver.prototype = {
    createState$0() {
      return new A.ScrollNotificationObserverState(new A.LinkedList(type$.LinkedList__ListenerEntry), G._StateLifecycle_0);
    }
  };
  A.ScrollNotificationObserverState.prototype = {
    removeListener$1(_, listener) {
      var t2, entry, t3,
        t1 = this._scroll_notification_observer$_listeners;
      t1.toString;
      t1 = A._LinkedListIterator$(t1);
      t2 = C._instanceType(t1)._precomputed1;
      for (; t1.moveNext$0();) {
        entry = t1._collection$_current;
        if (entry == null)
          entry = t2._as(entry);
        if (J.$eq$(entry.listener, listener)) {
          t1 = entry._collection$_list;
          t1.toString;
          C._instanceType(entry)._eval$1("LinkedListEntry.E")._as(entry);
          ++t1._modificationCount;
          t2 = entry._collection$_next;
          t2._collection$_previous = entry._collection$_previous;
          entry._collection$_previous._collection$_next = t2;
          t3 = --t1._collection$_length;
          entry._collection$_list = entry._collection$_next = entry._collection$_previous = null;
          if (t3 === 0)
            t1._collection$_first = null;
          else if (entry === t1._collection$_first)
            t1._collection$_first = t2;
          return;
        }
      }
    },
    _notifyListeners$1(notification) {
      var entry, exception, stack, localListeners, _i, exception0, rti, t2, t3, _this = this,
        t1 = _this._scroll_notification_observer$_listeners;
      if (t1._collection$_length === 0)
        return;
      localListeners = C.List_List$of(t1, true, type$._ListenerEntry);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        entry = localListeners[_i];
        try {
          if (entry._collection$_list != null)
            J.listener$1$z(entry, notification);
        } catch (exception0) {
          exception = C.unwrapException(exception0);
          stack = C.getTraceFromException(exception0);
          rti = _this instanceof C.Closure ? C.closureFunctionType(_this) : null;
          t2 = C.ErrorDescription$("while dispatching notifications for " + C.createRuntimeType(rti == null ? C.instanceType(_this) : rti).toString$0(0));
          t3 = $.$get$FlutterError_onError();
          if (t3 != null)
            t3.call$1(new C.FlutterErrorDetails(exception, stack, "widget library", t2, new A.ScrollNotificationObserverState__notifyListeners_closure(_this), false));
        }
      }
    },
    build$1(context) {
      var _this = this;
      return new D.NotificationListener(new A.ScrollNotificationObserverState_build_closure(_this), new D.NotificationListener(new A.ScrollNotificationObserverState_build_closure0(_this), new A._ScrollNotificationObserverScope(_this, _this._widget.child, null), null, type$.NotificationListener_ScrollNotification), null, type$.NotificationListener_ScrollMetricsNotification);
    },
    dispose$0() {
      this._scroll_notification_observer$_listeners = null;
      this.super$State$dispose();
    }
  };
  A._ConvertedScrollMetricsNotification.prototype = {};
  A.ScrollIntent.prototype = {};
  A.ScrollAction.prototype = {
    isEnabled$1(_, intent) {
      var t1, primaryScrollController,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus != null && $focus._context != null) {
        t1 = $focus._context;
        t1.toString;
        if (D.Scrollable_of(t1) != null)
          return true;
        t1 = $focus._context;
        t1.toString;
        primaryScrollController = D.PrimaryScrollController_of(t1);
        return primaryScrollController != null && primaryScrollController._positions.length !== 0;
      }
      return false;
    },
    _calculateScrollIncrement$2$type(state, type) {
      var t1;
      state._widget.toString;
      switch (type.index) {
        case 0:
          return 50;
        case 1:
          t1 = state._scrollable$_position._scroll_position$_viewportDimension;
          t1.toString;
          return 0.8 * t1;
      }
    },
    _getIncrement$2(state, intent) {
      var increment = this._calculateScrollIncrement$2$type(state, intent.type);
      switch (intent.direction.index) {
        case 2:
          switch (state._widget.axisDirection.index) {
            case 0:
              return -increment;
            case 2:
              return increment;
            case 1:
            case 3:
              return 0;
          }
          break;
        case 0:
          switch (state._widget.axisDirection.index) {
            case 0:
              return increment;
            case 2:
              return -increment;
            case 1:
            case 3:
              return 0;
          }
          break;
        case 3:
          switch (state._widget.axisDirection.index) {
            case 1:
              return -increment;
            case 3:
              return increment;
            case 0:
            case 2:
              return 0;
          }
          break;
        case 1:
          switch (state._widget.axisDirection.index) {
            case 1:
              return increment;
            case 3:
              return -increment;
            case 0:
            case 2:
              return 0;
          }
          break;
      }
    },
    invoke$1(intent) {
      var state, t2, increment,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t1.toString;
      state = D.Scrollable_of(t1);
      if (state == null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
        t1.toString;
        t1 = D.PrimaryScrollController_of(t1)._positions;
        t2 = E.JSArray_methods.get$single(t1);
        if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2.context._gestureDetectorKey) == null) {
          t2 = E.JSArray_methods.get$single(t1);
          t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2.context._gestureDetectorKey);
          t2.toString;
          t2 = D.Scrollable_of(t2) == null;
        } else
          t2 = false;
        if (t2)
          return;
        t1 = E.JSArray_methods.get$single(t1);
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1.context._gestureDetectorKey);
        t1.toString;
        state = D.Scrollable_of(t1);
      }
      t1 = state._physics;
      if (t1 != null) {
        t2 = state._scrollable$_position;
        t2.toString;
        t2 = !t1.shouldAcceptUserOffset$1(t2);
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return;
      increment = this._getIncrement$2(state, intent);
      if (increment === 0)
        return;
      t1 = state._scrollable$_position;
      t2 = t1._pixels;
      t2.toString;
      t1.moveTo$3$curve$duration(0, t2 + increment, G.Cubic_xDo, E.Duration_100000);
    }
  };
  A.SharedAppData.prototype = {
    createState$0() {
      return new A._SharedAppDataState(G._StateLifecycle_0);
    }
  };
  A._SharedAppDataState.prototype = {
    get$data(_) {
      var value = this.___SharedAppDataState_data_AI;
      return value === $ ? this.___SharedAppDataState_data_AI = C.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.nullable_Object) : value;
    },
    build$1(context) {
      var t1 = this._widget.child;
      return new A._SharedAppModel(this.get$data(this), t1, null);
    }
  };
  A._SharedAppModel.prototype = {
    updateShouldNotify$1(old) {
      return this.data !== old.data;
    },
    updateShouldNotifyDependent$2(old, keys) {
      var t1, t2, t3, t4;
      for (t1 = keys.get$iterator(keys), t2 = this.data, t3 = old.data; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        if (!J.$eq$(t2.$index(0, t4), t3.$index(0, t4)))
          return true;
      }
      return false;
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A.ShortcutRegistry.prototype = {
    get$shortcuts() {
      var t2, t3,
        t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, type$.Intent);
      for (t2 = this._tokenShortcuts, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.addAll$1(0, t3.get$value(t3));
      }
      return t1;
    },
    $isListenable: 1
  };
  A.ShortcutRegistrar.prototype = {
    createState$0() {
      var t1 = $.$get$ChangeNotifier__emptyListeners();
      return new A._ShortcutRegistrarState(new A.ShortcutRegistry(C.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutRegistryEntry, type$.Map_ShortcutActivator_Intent), t1), new F.ShortcutManager(H.Map_empty5, t1), G._StateLifecycle_0);
    }
  };
  A._ShortcutRegistrarState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.registry.addListener$1(0, this.get$_shortcutsChanged());
    },
    _shortcutsChanged$0() {
      this.manager.set$shortcuts(this.registry.get$shortcuts());
    },
    dispose$0() {
      var t1 = this.registry;
      t1.removeListener$1(0, this.get$_shortcutsChanged());
      t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t1.ChangeNotifier__count = 0;
      this.super$State$dispose();
    },
    build$1(context) {
      return new F.Shortcuts(this.manager, H.Map_empty5, new A._ShortcutRegistrarMarker(this.registry, this._widget.child, null), null, null);
    }
  };
  A._ShortcutRegistrarMarker.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.registry !== oldWidget.registry;
    }
  };
  A._ShortcutRegistry_Object_ChangeNotifier.prototype = {};
  A.DoNothingAndStopPropagationTextIntent.prototype = {};
  A.DirectionalTextEditingIntent.prototype = {};
  A.DeleteCharacterIntent.prototype = {};
  A.DeleteToNextWordBoundaryIntent.prototype = {};
  A.DeleteToLineBreakIntent.prototype = {};
  A.DirectionalCaretMovementIntent.prototype = {};
  A.ExtendSelectionByCharacterIntent.prototype = {};
  A.ExtendSelectionToNextWordBoundaryIntent.prototype = {};
  A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent.prototype = {};
  A.ExpandSelectionToDocumentBoundaryIntent.prototype = {};
  A.ExpandSelectionToLineBreakIntent.prototype = {};
  A.ExtendSelectionToLineBreakIntent.prototype = {};
  A.ExtendSelectionVerticallyToAdjacentLineIntent.prototype = {};
  A.ExtendSelectionToDocumentBoundaryIntent.prototype = {};
  A.ScrollToDocumentBoundaryIntent.prototype = {};
  A.SelectAllTextIntent.prototype = {};
  A.CopySelectionTextIntent.prototype = {};
  A.PasteTextIntent.prototype = {};
  A.RedoTextIntent.prototype = {};
  A.UndoTextIntent.prototype = {};
  A.TransposeCharactersIntent.prototype = {};
  A.TickerMode.prototype = {
    createState$0() {
      return new A._TickerModeState(new D.ValueNotifier(true, $.$get$ChangeNotifier__emptyListeners()), G._StateLifecycle_0);
    }
  };
  A._TickerModeState.prototype = {
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._framework$_element;
      t1.toString;
      _this._ancestorTicketMode = F.TickerMode_of(t1);
      _this._updateEffectiveMode$0();
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateEffectiveMode$0();
    },
    dispose$0() {
      var t1 = this._effectiveMode;
      t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t1.ChangeNotifier__count = 0;
      this.super$State$dispose();
    },
    _updateEffectiveMode$0() {
      var t1 = this._ancestorTicketMode && this._widget.enabled;
      this._effectiveMode.set$value(0, t1);
    },
    build$1(context) {
      var t1 = this._effectiveMode;
      return new A._EffectiveTickerMode(t1._change_notifier$_value, t1, this._widget.child, null);
    }
  };
  A._EffectiveTickerMode.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.enabled !== oldWidget.enabled;
    }
  };
  A.Title.prototype = {
    build$1(context) {
      A.SystemChrome_setApplicationSwitcherDescription(new A.ApplicationSwitcherDescription(this.title, this.color.value));
      return this.child;
    }
  };
  A.RotationTransition.prototype = {
    build$1(context) {
      var t1 = type$.Animation_double._as(this.listenable);
      switch (t1.get$status(t1)) {
        case G.AnimationStatus_0:
        case G.AnimationStatus_3:
          break;
        case G.AnimationStatus_1:
        case G.AnimationStatus_2:
          break;
      }
      t1 = t1.get$value(t1);
      return F.Transform$rotate(G.Alignment_0_0, t1 * 3.141592653589793 * 2, this.child, null);
    }
  };
  A.LaunchMode.prototype = {
    toString$0(_) {
      return "LaunchMode." + this._core$_name;
    }
  };
  A.WebViewConfiguration.prototype = {};
  A.XidianDir.prototype = {
    createState$0() {
      return A._XidianDirState$();
    }
  };
  A._XidianDirState.prototype = {
    changePage$1(current) {
      return this.setState$1(new A._XidianDirState_changePage_closure(this, current));
    },
    initState$0() {
      this.___XidianDirState__toShow_A = this._com_win;
      this.super$State$initState();
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data,
        t2 = _this.get$changePage(),
        t3 = _this._home$_current,
        t4 = _this.buttons,
        t5 = _this.___XidianDirState__toShow_A;
      if (t1.size._dx > 900) {
        t1 = A.AppBar$(t4, D.Text$(t3, _null, _null, _null, _null, _null, _null, _null, _null));
        t5 === $ && C.throwUnnamedLateFieldNI();
        return D.Row$(C._setArrayType([new A.ListDrawer(t2, _null), B.VerticalDivider_null, D.Expanded$(A.Scaffold$(t1, I.SafeArea$(true, t5, G.EdgeInsets_0_0_0_0, true), _null), 1)], type$.JSArray_Widget), G.CrossAxisAlignment_2, G.MainAxisAlignment_0, G.MainAxisSize_1);
      } else {
        t1 = A.AppBar$(t4, D.Text$(t3, _null, _null, _null, _null, _null, _null, _null, _null));
        t5 === $ && C.throwUnnamedLateFieldNI();
        return A.Scaffold$(t1, I.SafeArea$(true, t5, G.EdgeInsets_0_0_0_0, true), new A.ListDrawer(t2, _null));
      }
    }
  };
  A.ListDrawer.prototype = {
    build$1(context) {
      return new A.Drawer(I.SafeArea$(true, D.ListView$(C._setArrayType([B.ListTile_E0K, K.Divider_null_null, A.ListTile$(B.Icon_IconData_58891_false_null, new A.ListDrawer_build_closure(this), B.Text_yHZ), A.ListTile$(L.Icon_IconData_58674_false_null, new A.ListDrawer_build_closure0(this), B.Text_aWd), A.ListTile$(M.Icon_IconData_58530_false_null, new A.ListDrawer_build_closure1(this), B.Text_66y)], type$.JSArray_Widget), null, null, false), G.EdgeInsets_0_0_0_0, true), null);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["double(double)", "~()", "~(AnimationStatus)", "~(NavigatorObserver)", "bool(_RouteEntry?)", "~(RestorableProperty<Object?>,~())", "Widget(BuildContext,AsyncSnapshot<~>)", "bool(_RouteEntry)", "Widget(BuildContext)", "~(ForcePressDetails)", "int(_ReadingOrderSortData,_ReadingOrderSortData)", "~(TextSelection,SelectionChangedCause?)", "Widget(BuildContext,~())", "ListTileTheme(BuildContext)", "~(bool)", "Actions(BuildContext,Widget?)", "Widget(BuildContext,Widget?)", "MaterialPageRoute<0^>(RouteSettings,Widget(BuildContext))<Object?>", "~(LongPressMoveUpdateDetails)", "~(TapUpDetails)", "~(LongPressStartDetails)", "~(ScrollNotification)", "ThemeDataTween(@)", "MapEntry<Object,ThemeExtension<@>>(Object,ThemeExtension<@>)", "bool(MapEntry<Object,ThemeExtension<@>>)", "Paint(BoxShadow)", "Path(BoxShadow)", "Route<@>?(RouteSettings)", "Route<@>(RouteSettings)", "~(_FocusTraversalGroupInfo)", "bool(_DirectionalPolicyDataEntry)", "Set<Directionality>(_ReadingOrderSortData)", "double(_Diagonal)", "List<Directionality>(BuildContext)", "Rect(_ReadingOrderSortData)", "int(_ReadingOrderDirectionalGroupData,_ReadingOrderDirectionalGroupData)", "List<_ReadingOrderSortData>(_ReadingOrderSortData,Iterable<_ReadingOrderSortData>)", "bool(_ReadingOrderSortData)", "Positioned(BuildContext,Widget?)", "~(_HeroFlight)", "Widget(BuildContext,Animation0<double>,HeroFlightDirection,BuildContext,BuildContext)", "IconThemeData(IconThemeData?,IconThemeData?,double)", "MediaQuery(BuildContext,Widget?)", "Future<@>(_Pending)", "bool(Route<@>?)", "bool(OverlayEntry)", "MaterialRectArcTween(Rect?,Rect?)", "~(PointerDownEvent)", "~(PointerEvent)", "_RouteEntry(Route<@>)", "~(DragDownDetails)", "~(PaintingContext,Offset)", "~(Duration)", "Future<bool>()", "bool(ScrollMetricsNotification)", "bool(ScrollNotification)", "~(String)", "~(DragUpdateDetails)", "List<Route<@>>(NavigatorState,String)", "~(DragEndDetails)", "bool?(bool?,bool?,double)", "OutlinedBorder?(OutlinedBorder?,OutlinedBorder?,double)", "bool(_HeroFlight)"]);
  A.MaterialApp_createMaterialHeroController_closure.prototype = {
    call$2(begin, end) {
      return new A.MaterialRectArcTween(begin, end);
    },
    $signature: typesOffset + 46
  };
  A._MaterialAppState__buildWidgetApp_closure.prototype = {
    call$1$2(settings, builder, $T) {
      var _null = null,
        t1 = C._setArrayType([], type$.JSArray_of_Future_bool_Function),
        t2 = $.Zone__current,
        t3 = D.ProxyAnimation$(G.C__AlwaysDismissedAnimation),
        t4 = C._setArrayType([], type$.JSArray_OverlayEntry),
        t5 = $.$get$ChangeNotifier__emptyListeners(),
        t6 = $.Zone__current;
      return new A.MaterialPageRoute(builder, false, _null, t1, new D.LabeledGlobalKey(_null, $T._eval$1("LabeledGlobalKey<_ModalScopeState<0>>")), new D.LabeledGlobalKey(_null, type$.LabeledGlobalKey_State_StatefulWidget), new F.PageStorageBucket(), _null, 0, new C._AsyncCompleter(new C._Future(t2, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), t3, t4, settings, new D.ValueNotifier(_null, t5), new C._AsyncCompleter(new C._Future(t6, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), $T._eval$1("MaterialPageRoute<0>"));
    },
    call$2(settings, builder) {
      return this.call$1$2(settings, builder, type$.dynamic);
    },
    $signature: typesOffset + 17
  };
  A._MaterialAppState_build_closure.prototype = {
    call$2(node, $event) {
      if (!($event instanceof C.RawKeyDownEvent) || !$event.data.get$logicalKey().$eq(0, E.LogicalKeyboardKey_4294967323))
        return E.KeyEventResult_1;
      return A.Tooltip_dismissAllToolTips() ? E.KeyEventResult_0 : E.KeyEventResult_1;
    },
    $signature: 236
  };
  A.AppBar__getEffectiveCenterTitle_platformCenter.prototype = {
    call$0() {
      switch (this.theme.platform.index) {
        case 0:
        case 1:
        case 3:
        case 5:
          return false;
        case 2:
        case 4:
          return false;
      }
    },
    $signature: 62
  };
  A._AppBarState__handleScrollNotification_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.MaterialPointArcTween__initialize_sweepAngle.prototype = {
    call$0() {
      var t1 = this.$this._arc$_radius;
      t1.toString;
      return 2 * Math.asin(this.distanceFromAtoB / (2 * t1));
    },
    $signature: 51
  };
  A.MaterialRectArcTween__initialize_closure.prototype = {
    call$1(d) {
      var t4, delta, $length,
        t1 = this.$this,
        t2 = this.centersVector,
        t3 = t1.begin;
      t3.toString;
      t3 = t1._cornerFor$2(t3, d.endId);
      t4 = t1.begin;
      t4.toString;
      delta = t3.$sub(0, t1._cornerFor$2(t4, d.beginId));
      $length = delta.get$distance();
      return t2._dx * delta._dx / $length + t2._dy * delta._dy / $length;
    },
    $signature: typesOffset + 32
  };
  A.BackButton_build_closure.prototype = {
    call$0() {
      F.Navigator_maybePop(this.context);
    },
    $signature: 0
  };
  A._RenderInputPadding_hitTest_closure0.prototype = {
    call$2(result, position) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, this.center);
    },
    $signature: 7
  };
  A.DrawerControllerState__animationChanged_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RenderListTile_paint_doPaint.prototype = {
    call$1(child) {
      var t1;
      if (child != null) {
        t1 = child.parentData;
        t1.toString;
        this.context.paintChild$2(child, type$.BoxParentData._as(t1).offset.$add(0, this.offset));
      }
    },
    $signature: 94
  };
  A._RenderListTile_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.child.hitTest$2$position(result, transformed);
    },
    $signature: 7
  };
  A.ListTileTheme_merge_closure.prototype = {
    call$1(context) {
      var $parent = A.ListTileTheme_of(context);
      return A.ListTileTheme$(this.child, A.ListTileThemeData$($parent.contentPadding, $parent.dense, $parent.enableFeedback, $parent.horizontalTitleGap, $parent.iconColor, $parent.minLeadingWidth, $parent.minVerticalPadding, null, $parent.selectedColor, $parent.selectedTileColor, $parent.shape, this.style, $parent.textColor, $parent.tileColor, null), this.key);
    },
    $signature: typesOffset + 13
  };
  A.MaterialStateMixin_updateMaterialState_closure.prototype = {
    call$1(value) {
      var t1 = this.$this,
        t2 = this.key;
      if (t1.MaterialStateMixin_materialStates.contains$1(0, t2) === value)
        return;
      if (value)
        t1.addMaterialState$1(t2);
      else
        t1.removeMaterialState$1(t2);
    },
    $signature: 20
  };
  A.MaterialStateMixin_addMaterialState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.MaterialStateMixin_removeMaterialState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.ScaffoldMessengerState_hideCurrentSnackBar_closure.prototype = {
    call$1(value) {
      var t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$1(0, this.reason);
    },
    $signature: 16
  };
  A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure.prototype = {
    call$0() {
      if (this.status === G.AnimationStatus_0)
        this.$this._widget.toString;
    },
    $signature: 0
  };
  A.ScaffoldState__drawerOpenedCallback_closure.prototype = {
    call$0() {
      this.$this._drawerOpened.super$RestorableValue$value(0, this.isOpened);
    },
    $signature: 0
  };
  A.ScaffoldState__updateSnackBar_closure.prototype = {
    call$0() {
      this.$this._messengerSnackBar = this.messengerSnackBar;
    },
    $signature: 0
  };
  A.ScaffoldState__updateMaterialBanner_closure.prototype = {
    call$0() {
      this.$this._messengerMaterialBanner = this.messengerMaterialBanner;
    },
    $signature: 0
  };
  A.ScaffoldState_build_closure.prototype = {
    call$2(context, child) {
      var t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = C.LinkedHashMap_LinkedHashMap$_literal([H.Type_DismissIntent_Fb0, new A._DismissDrawerAction(context, new D.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent))], type$.Type, type$.Action_Intent),
        t2 = _this.$this;
      t2._widget.toString;
      t3 = t2._floatingActionButtonLocation;
      t3.toString;
      t4 = t2.__ScaffoldState__floatingActionButtonMoveController_A;
      t4 === $ && C.throwUnnamedLateFieldNI();
      t4 = t4.__AnimationController__value_A;
      t4 === $ && C.throwUnnamedLateFieldNI();
      t5 = t2.__ScaffoldState__floatingActionButtonAnimator_A;
      t5 === $ && C.throwUnnamedLateFieldNI();
      t6 = t2.__ScaffoldState__geometryNotifier_A;
      t6 === $ && C.throwUnnamedLateFieldNI();
      t2 = t2._previousFloatingActionButtonLocation;
      t2.toString;
      t7 = _this._box_0;
      t8 = t7.isSnackBarFloating;
      t9 = t7.extendBodyBehindMaterialBanner;
      return F.Actions$(t1, new A.CustomMultiChildLayout(new A._ScaffoldLayout(_this.extendBody, false, _this.minInsets, _this.minViewPadding, _this.textDirection, t6, t2, t3, t4, t5, t8, t7.snackBarWidth, t9), _this.children, null));
    },
    $signature: typesOffset + 15
  };
  A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._restoration0$_disposed)
        property.removeListener$1(0, listener);
    },
    $signature: typesOffset + 5
  };
  A._SelectableTextState__onControllerChanged_closure.prototype = {
    call$0() {
      this.$this._showSelectionHandles = this.showSelectionHandles;
    },
    $signature: 0
  };
  A._SelectableTextState__handleSelectionChanged_closure.prototype = {
    call$0() {
      this.$this._showSelectionHandles = this.willShowSelectionHandles;
    },
    $signature: 0
  };
  A._SelectableTextState_build_closure.prototype = {
    call$0() {
      this.$this.get$_effectiveFocusNode().requestFocus$0();
    },
    $signature: 0
  };
  A._AnimatedThemeState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.ThemeDataTween(type$.ThemeData._as(value), null);
    },
    $signature: typesOffset + 22
  };
  A.ThemeData__lerpThemeExtensions_closure.prototype = {
    call$2(id, extensionA) {
      return new C.MapEntry(id, extensionA.lerp$2(this.b.extensions.$index(0, id), this.t), type$.MapEntry_of_Object_and_ThemeExtension_dynamic);
    },
    $signature: typesOffset + 23
  };
  A.ThemeData__lerpThemeExtensions_closure0.prototype = {
    call$1(entry) {
      return !this.a.extensions.containsKey$1(0, entry.get$key(entry));
    },
    $signature: typesOffset + 24
  };
  A._ShapeDecorationPainter__precache_closure.prototype = {
    call$1(shadow) {
      return shadow.toPaint$0();
    },
    $signature: typesOffset + 25
  };
  A._ShapeDecorationPainter__precache_closure0.prototype = {
    call$1(shadow) {
      return this.$this._shape_decoration$_decoration.shape.getOuterPath$2$textDirection(this.rect.shift$1(shadow.offset).inflate$1(shadow.spreadRadius), this.textDirection);
    },
    $signature: typesOffset + 26
  };
  A._WidgetsAppState__onGenerateRoute_closure.prototype = {
    call$1(context) {
      var t1 = this.$this._widget.home;
      t1.toString;
      return t1;
    },
    $signature: 40
  };
  A._WidgetsAppState_didChangeLocales_closure.prototype = {
    call$0() {
      this.$this._app$_locale = this.newLocale;
    },
    $signature: 0
  };
  A._WidgetsAppState_build_closure.prototype = {
    call$1(context) {
      return this.$this._widget.builder.call$2(context, this._box_0.routing);
    },
    $signature: 40
  };
  A._FutureBuilderState__subscribe_closure.prototype = {
    call$1(data) {
      var t1 = this.$this;
      if (t1._activeCallbackIdentity === this.callbackIdentity)
        t1.setState$1(new A._FutureBuilderState__subscribe__closure0(t1, data));
    },
    $signature() {
      return this.$this.$ti._eval$1("Null(1)");
    }
  };
  A._FutureBuilderState__subscribe__closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.___FutureBuilderState__snapshot_A = new A.AsyncSnapshot(B.ConnectionState_3, this.data, null, null, t1.$ti._eval$1("AsyncSnapshot<1>"));
    },
    $signature: 0
  };
  A._FutureBuilderState__subscribe_closure0.prototype = {
    call$2(error, stackTrace) {
      var t1 = this.$this;
      if (t1._activeCallbackIdentity === this.callbackIdentity)
        t1.setState$1(new A._FutureBuilderState__subscribe__closure(t1, error, stackTrace));
    },
    $signature: 49
  };
  A._FutureBuilderState__subscribe__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.___FutureBuilderState__snapshot_A = new A.AsyncSnapshot(B.ConnectionState_3, null, this.error, this.stackTrace, t1.$ti._eval$1("AsyncSnapshot<1>"));
    },
    $signature: 0
  };
  A._getAncestor_closure.prototype = {
    call$1(ancestor) {
      var t1 = this._box_0;
      if (--t1.count === 0) {
        t1.target = ancestor;
        return false;
      }
      return true;
    },
    $signature: 31
  };
  A.FocusTraversalPolicy__sortAllDescendants_visitGroups.prototype = {
    call$1(info) {
      var t1, t2, t3, t4, _i, node, t5;
      for (t1 = info.members, t2 = t1.length, t3 = this.sortedDescendants, t4 = this.groups, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (t4.containsKey$1(0, node)) {
          t5 = t4.$index(0, node);
          t5.toString;
          this.call$1(t5);
        } else
          t3.push(node);
      }
    },
    $signature: typesOffset + 29
  };
  A.FocusTraversalPolicy__sortAllDescendants_closure.prototype = {
    call$1(node) {
      return !node.get$canRequestFocus() || node.get$skipTraversal();
    },
    $signature: 12
  };
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure.prototype = {
    call$1(entry) {
      return entry.node === this.node;
    },
    $signature: typesOffset + 30
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure.prototype = {
    call$2(a, b) {
      if (this.vertical)
        if (this.first)
          return E.JSNumber_methods.compareTo$1(a.get$rect(a).top, b.get$rect(b).top);
        else
          return E.JSNumber_methods.compareTo$1(b.get$rect(b).bottom, a.get$rect(a).bottom);
      else if (this.first)
        return E.JSNumber_methods.compareTo$1(a.get$rect(a).left, b.get$rect(b).left);
      else
        return E.JSNumber_methods.compareTo$1(b.get$rect(b).right, a.get$rect(a).right);
    },
    $signature: 27
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure.prototype = {
    call$2(a, b) {
      return E.JSNumber_methods.compareTo$1(a.get$rect(a).get$center()._dx, b.get$rect(b).get$center()._dx);
    },
    $signature: 27
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dx <= t1.left;
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dx >= t1.right;
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure.prototype = {
    call$2(a, b) {
      return E.JSNumber_methods.compareTo$1(a.get$rect(a).get$center()._dy, b.get$rect(b).get$center()._dy);
    },
    $signature: 27
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dy <= t1.top;
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dy >= t1.bottom;
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate.prototype = {
    call$1(direction) {
      var t2, alignmentPolicy,
        lastNode = this.policyData.history.pop().node,
        t1 = lastNode._context;
      t1.toString;
      t1 = D.Scrollable_of(t1);
      t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t2.toString;
      if (t1 != D.Scrollable_of(t2)) {
        t1 = this.$this;
        t2 = this.nearestScope;
        t1.super$FocusTraversalPolicy$invalidateScopeData(t2);
        t1.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t2);
        return false;
      }
      switch (direction.index) {
        case 0:
        case 3:
          alignmentPolicy = G.ScrollPositionAlignmentPolicy_2;
          break;
        case 1:
        case 2:
          alignmentPolicy = G.ScrollPositionAlignmentPolicy_1;
          break;
        default:
          alignmentPolicy = null;
      }
      A._focusAndEnsureVisible(lastNode, alignmentPolicy);
      return true;
    },
    $signature: 239
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure.prototype = {
    call$1(node) {
      var t1 = node._context;
      t1.toString;
      return D.Scrollable_of(t1) === this.focusedScrollable;
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0.prototype = {
    call$1(node) {
      var t1 = node.get$rect(node).intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure1.prototype = {
    call$2(a, b) {
      var t1 = this.focusedChild;
      return E.JSNumber_methods.compareTo$1(Math.abs(a.get$rect(a).get$center()._dx - t1.get$rect(t1).get$center()._dx), Math.abs(b.get$rect(b).get$center()._dx - t1.get$rect(t1).get$center()._dx));
    },
    $signature: 27
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure2.prototype = {
    call$1(node) {
      var t1 = node._context;
      t1.toString;
      return D.Scrollable_of(t1) === this.focusedScrollable;
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure3.prototype = {
    call$1(node) {
      var t1 = node.get$rect(node).intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    },
    $signature: 12
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure4.prototype = {
    call$2(a, b) {
      var t1 = this.focusedChild;
      return E.JSNumber_methods.compareTo$1(Math.abs(a.get$rect(a).get$center()._dy - t1.get$rect(t1).get$center()._dy), Math.abs(b.get$rect(b).get$center()._dy - t1.get$rect(t1).get$center()._dy));
    },
    $signature: 27
  };
  A._ReadingOrderSortData_commonDirectionalityOf_closure.prototype = {
    call$1(member) {
      var t1 = member.get$directionalAncestors();
      return C.LinkedHashSet_LinkedHashSet$from(t1, C._arrayInstanceType(t1)._precomputed1);
    },
    $signature: typesOffset + 31
  };
  A._ReadingOrderSortData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      switch (this.directionality.index) {
        case 1:
          return E.JSNumber_methods.compareTo$1(a.rect.left, b.rect.left);
        case 0:
          return E.JSNumber_methods.compareTo$1(b.rect.right, a.rect.right);
      }
    },
    $signature: typesOffset + 10
  };
  A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors.prototype = {
    call$1(context) {
      var t2, ancestor,
        result = C._setArrayType([], type$.JSArray_Directionality),
        t1 = type$.Directionality,
        directionalityElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; directionalityElement != null;) {
        t2 = directionalityElement._widget;
        t2.toString;
        result.push(t1._as(t2));
        t2 = A._getAncestor(directionalityElement, 1);
        if (t2 == null)
          directionalityElement = null;
        else {
          t2 = t2._inheritedWidgets;
          ancestor = t2 == null ? null : t2.$index(0, C.createRuntimeType(t1));
          directionalityElement = ancestor;
        }
      }
      return result;
    },
    $signature: typesOffset + 33
  };
  A._ReadingOrderDirectionalGroupData_rect_closure.prototype = {
    call$1(data) {
      return data.rect;
    },
    $signature: typesOffset + 34
  };
  A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      switch (this.directionality.index) {
        case 1:
          return E.JSNumber_methods.compareTo$1(a.get$rect(a).left, b.get$rect(b).left);
        case 0:
          return E.JSNumber_methods.compareTo$1(b.get$rect(b).right, a.get$rect(a).right);
      }
    },
    $signature: typesOffset + 35
  };
  A.ReadingOrderTraversalPolicy__pickNext_closure.prototype = {
    call$2(a, b) {
      return E.JSNumber_methods.compareTo$1(a.rect.top, b.rect.top);
    },
    $signature: typesOffset + 10
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand.prototype = {
    call$2(current, candidates) {
      var t1 = current.rect,
        t2 = C._arrayInstanceType(candidates)._eval$1("WhereIterable<1>");
      return C.List_List$of(new C.WhereIterable(candidates, new A.ReadingOrderTraversalPolicy__pickNext_inBand_closure(new C.Rect(-1 / 0, t1.top, 1 / 0, t1.bottom)), t2), true, t2._eval$1("Iterable.E"));
    },
    $signature: typesOffset + 36
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand_closure.prototype = {
    call$1(item) {
      var t1 = item.rect.intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    },
    $signature: typesOffset + 37
  };
  A.Hero__allHeroesFor_inviteHero.prototype = {
    call$2(hero, tag) {
      var t1 = hero._widget;
      t1.toString;
      type$.Hero._as(t1);
      t1 = hero._framework$_state;
      t1.toString;
      type$._HeroState._as(t1);
      if (!this.isUserGestureTransition || false)
        this.result.$indexSet(0, tag, t1);
      else
        t1.endFlight$0();
    },
    $signature: 240
  };
  A.Hero__allHeroesFor_visitor.prototype = {
    call$1(element) {
      var tag, heroRoute, _this = this,
        t1 = element._widget;
      t1.toString;
      if (t1 instanceof A.Hero) {
        type$.StatefulElement._as(element);
        tag = t1.tag;
        if (F.Navigator_of(element, false) === _this.navigator)
          _this.inviteHero.call$2(element, tag);
        else {
          heroRoute = F.ModalRoute_of(element, type$.nullable_Object);
          if (heroRoute != null && heroRoute instanceof A.PageRoute && heroRoute.get$isCurrent())
            _this.inviteHero.call$2(element, tag);
        }
      }
      element.visitChildren$1(_this);
    },
    $signature: 5
  };
  A._HeroState_startFlight_closure.prototype = {
    call$0() {
      var t1 = this.box._size;
      t1.toString;
      this.$this._placeholderSize = t1;
    },
    $signature: 0
  };
  A._HeroState_endFlight_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._HeroFlight__buildOverlay_closure.prototype = {
    call$2(context, child) {
      var t3, _null = null,
        t1 = this.$this,
        t2 = t1.___HeroFlight_heroRectTween_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t3 = t1.___HeroFlight__proxyAnimation_A;
      t3 === $ && C.throwUnnamedLateFieldNI();
      t3 = t2.transform$1(0, t3.get$value(t3));
      t3.toString;
      t2 = t1.___HeroFlight_manifest_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t2 = t2.navigatorSize;
      return D.Positioned$(t2._dy - t3.bottom, new D.IgnorePointer(true, _null, D.FadeTransition$(false, child, t1._heroOpacity), _null), _null, _null, t3.left, t2._dx - t3.right, t3.top, _null);
    },
    $signature: typesOffset + 38
  };
  A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._scheduledPerformAnimationUpdate = false;
      this.navigator.userGestureInProgressNotifier.removeListener$1(0, this);
      t2 = t1.___HeroFlight__proxyAnimation_A;
      t2 === $ && C.throwUnnamedLateFieldNI();
      t1._performAnimationUpdate$1(t2.get$status(t2));
    },
    $signature: 0
  };
  A.HeroController_didStopUserGesture_isInvalidFlight.prototype = {
    call$1(flight) {
      var t1 = flight.___HeroFlight_manifest_A;
      t1 === $ && C.throwUnnamedLateFieldNI();
      if (t1.isUserGestureTransition)
        if (t1.type === B.HeroFlightDirection_1) {
          t1 = flight.___HeroFlight__proxyAnimation_A;
          t1 === $ && C.throwUnnamedLateFieldNI();
          t1 = t1.get$status(t1) === G.AnimationStatus_0;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $signature: typesOffset + 62
  };
  A.HeroController__maybeStartHeroTransition_closure.prototype = {
    call$1(value) {
      var _this = this;
      _this.$this._startHeroTransition$4(_this.from, _this.to, _this.flightType, _this.isUserGestureTransition);
    },
    $signature: 2
  };
  A.HeroController__defaultHeroFlightShuttleBuilder_closure.prototype = {
    call$2(context, child) {
      var _this = this,
        t1 = _this.fromHeroPadding,
        t2 = _this.toHeroPadding,
        t3 = _this.animation;
      t1 = _this.flightDirection === B.HeroFlightDirection_0 ? new A.EdgeInsetsTween(t1, t2).transform$1(0, t3.get$value(t3)) : new A.EdgeInsetsTween(t2, t1).transform$1(0, t3.get$value(t3));
      return new D.MediaQuery(_this.toMediaQueryData.copyWith$1$padding(t1), _this.toHero.child, null);
    },
    $signature: typesOffset + 42
  };
  A._loadAll_closure.prototype = {
    call$1(value) {
      return this._box_0.completedValue = value;
    },
    $signature: 34
  };
  A._loadAll_closure0.prototype = {
    call$1(p) {
      return p.futureValue;
    },
    $signature: typesOffset + 43
  };
  A._loadAll_closure1.prototype = {
    call$1(values) {
      var t1, t2, t3, i;
      for (t1 = J.getInterceptor$asx(values), t2 = this._box_1, t3 = this.output, i = 0; i < t1.get$length(values); ++i)
        t3.$indexSet(0, C.createRuntimeType(C._instanceType(t2.pendingList[i].delegate)._eval$1("LocalizationsDelegate.T")), t1.$index(values, i));
      return t3;
    },
    $signature: 241
  };
  A._LocalizationsState_load_closure.prototype = {
    call$1(value) {
      return this._box_0.typeToResources = value;
    },
    $signature: 242
  };
  A._LocalizationsState_load_closure0.prototype = {
    call$1(value) {
      var t1 = this.$this;
      if (t1._framework$_element != null)
        t1.setState$1(new A._LocalizationsState_load__closure(t1, value, this.locale));
      $.RendererBinding__instance.allowFirstFrame$0();
    },
    $signature: 243
  };
  A._LocalizationsState_load__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._typeToResources = this.value;
      t1._localizations$_locale = this.locale;
    },
    $signature: 0
  };
  A.MediaQueryData_removeDisplayFeatures_closure.prototype = {
    call$1(displayFeature) {
      return this.subScreen.overlaps$1(displayFeature.get$bounds(displayFeature));
    },
    $signature: 89
  };
  A._MediaQueryFromWindowState_didChangeMetrics_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._MediaQueryFromWindowState_didChangeTextScaleFactor_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._MediaQueryFromWindowState_didChangePlatformBrightness_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.Navigator_defaultGenerateInitialRoutes_closure.prototype = {
    call$1(route) {
      return route == null;
    },
    $signature: typesOffset + 44
  };
  A._RouteEntry_handlePush_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.currentState === B._RouteLifecycle_5) {
        t1.currentState = B._RouteLifecycle_7;
        this.navigator._flushHistoryUpdates$0();
      }
    },
    $signature: 0
  };
  A._RouteEntry_dispose_closure.prototype = {
    call$1(e) {
      return e._overlayStateMounted._change_notifier$_value;
    },
    $signature: typesOffset + 45
  };
  A._RouteEntry_dispose_closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this._box_0;
      --t1.mounted;
      _this.entry._overlayStateMounted.removeListener$1(0, _this.listener._readLocal$0());
      if (t1.mounted === 0)
        _this.$this.route.dispose$0();
    },
    $signature: 0
  };
  A.NavigatorState_restoreState_closure.prototype = {
    call$1(route) {
      var t2, t3,
        t1 = route._settings.name;
      if (t1 != null) {
        t2 = this.$this._rawNextPagelessRestorationScopeId;
        t3 = t2._restoration_properties$_value;
        if (t3 == null)
          t3 = t2.$ti._eval$1("RestorableValue.T")._as(t3);
        t2.super$RestorableValue$value(0, t3 + 1);
        t1 = new A._NamedRestorationInformation(t3, t1, null, B._RouteRestorationType_0);
      } else
        t1 = null;
      return A._RouteEntry$(route, B._RouteLifecycle_1, t1);
    },
    $signature: typesOffset + 49
  };
  A.NavigatorState__flushHistoryUpdates_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: typesOffset + 4
  };
  A.NavigatorState__flushHistoryUpdates_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 4
  };
  A.NavigatorState__afterNavigation_closure.prototype = {
    call$1(object) {
      return C.S(object);
    },
    $signature: 245
  };
  A.NavigatorState_maybePop_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: typesOffset + 4
  };
  A.NavigatorState_maybePop_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 4
  };
  A.NavigatorState_maybePop_closure1.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: typesOffset + 4
  };
  A.NavigatorState_maybePop_closure2.prototype = {
    call$0() {
      return null;
    },
    $signature: 4
  };
  A.NavigatorState_removeRoute_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: typesOffset + 4
  };
  A.NavigatorState_removeRoute_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 4
  };
  A.NavigatorState__cancelActivePointers_closure.prototype = {
    call$0() {
      var t1 = this.absorber;
      if (t1 != null)
        t1.set$absorbing(true);
    },
    $signature: 0
  };
  A._HistoryProperty_fromPrimitives_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asStringQ(key), C.List_List$from(type$.List_dynamic._as(value), true, type$.Object), type$.MapEntry_of_nullable_String_and_List_Object);
    },
    $signature: 246
  };
  A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._restoration0$_disposed)
        property.removeListener$1(0, listener);
    },
    $signature: typesOffset + 5
  };
  A._OverlayEntryWidgetState__markNeedsBuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.OverlayState_insert_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      E.JSArray_methods.insert$2(t1._overlay$_entries, t1._insertionIndex$2(_this.below, _this.above), _this.entry);
    },
    $signature: 0
  };
  A.OverlayState_insertAll_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      E.JSArray_methods.insertAll$2(t1._overlay$_entries, t1._insertionIndex$2(_this.below, _this.above), _this.entries);
    },
    $signature: 0
  };
  A.OverlayState_rearrange_closure.prototype = {
    call$0() {
      var t3, t4, _this = this,
        t1 = _this.$this,
        t2 = t1._overlay$_entries;
      E.JSArray_methods.clear$0(t2);
      t3 = _this.newEntriesList;
      E.JSArray_methods.addAll$1(t2, t3);
      t4 = _this.old;
      t4.removeAll$1(t3);
      E.JSArray_methods.insertAll$2(t2, t1._insertionIndex$2(_this.below, _this.above), t4);
    },
    $signature: 0
  };
  A.OverlayState__markDirty_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.OverlayState__didChangeEntryOpacity_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RenderTheatre_computeMinIntrinsicWidth_closure.prototype = {
    call$1(child) {
      return child._computeIntrinsicDimension$3(E._IntrinsicDimension_0, this.height, child.get$computeMinIntrinsicWidth());
    },
    $signature: 15
  };
  A._RenderTheatre_computeMaxIntrinsicWidth_closure.prototype = {
    call$1(child) {
      return child._computeIntrinsicDimension$3(E._IntrinsicDimension_1, this.height, child.get$computeMaxIntrinsicWidth());
    },
    $signature: 15
  };
  A._RenderTheatre_computeMinIntrinsicHeight_closure.prototype = {
    call$1(child) {
      return child._computeIntrinsicDimension$3(E._IntrinsicDimension_2, this.width, child.get$computeMinIntrinsicHeight());
    },
    $signature: 15
  };
  A._RenderTheatre_computeMaxIntrinsicHeight_closure.prototype = {
    call$1(child) {
      return child._computeIntrinsicDimension$3(E._IntrinsicDimension_3, this.width, child.get$computeMaxIntrinsicHeight());
    },
    $signature: 15
  };
  A._RenderTheatre_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: 7
  };
  A._RootRestorationScopeState__loadRootBucketIfNecessary_closure.prototype = {
    call$1(bucket) {
      var t2,
        t1 = this.$this;
      t1._isLoadingRootBucket = false;
      if (t1._framework$_element != null) {
        t2 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
        t2 === $ && C.throwUnnamedLateFieldNI();
        t2.addListener$1(0, t1.get$_replaceRootBucket());
        t1.setState$1(new A._RootRestorationScopeState__loadRootBucketIfNecessary__closure(t1, bucket));
      }
      $.RendererBinding__instance.allowFirstFrame$0();
    },
    $signature: 247
  };
  A._RootRestorationScopeState__loadRootBucketIfNecessary__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._restoration0$_rootBucket = this.bucket;
      t1._rootBucketValid = true;
      t1._okToRenderBlankContainer = false;
    },
    $signature: 0
  };
  A.__RouterState_State_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._restoration0$_disposed)
        property.removeListener$1(0, listener);
    },
    $signature: typesOffset + 5
  };
  A._RouterState_restoreState_closure.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setRestoredRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState_restoreState_closure0.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setInitialRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState_didChangeDependencies_closure.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setNewRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState__processParsedRouteInformation_closure.prototype = {
    call$1(data) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.transaction;
              if (t1._currentRouterTransaction != t2) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return C._asyncAwait($async$self.delegateRouteSetter.call$0().call$1(data), $async$call$1);
            case 3:
              // returning from await.
              if (t1._currentRouterTransaction == t2)
                t1._router$_rebuild$0();
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)");
    }
  };
  A._RouterState__handleRouteInformationProviderNotification_closure.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setNewRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState__handleRoutePopped_closure.prototype = {
    call$1(data) {
      var t1 = this.$this;
      if (this.transaction != t1._currentRouterTransaction)
        return new C.SynchronousFuture(true, type$.SynchronousFuture_bool);
      t1._router$_rebuild$0();
      return new C.SynchronousFuture(data, type$.SynchronousFuture_bool);
    },
    $signature: 248
  };
  A._RouterState__rebuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RouterState__handleRouterDelegateNotification_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.ScrollNotificationObserverState__notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return C._setArrayType([C.DiagnosticsProperty$("The " + C.getRuntimeType(t1).toString$0(0) + " sending notification was", t1, true, E.C__NoDefaultValue, _null, false, _null, _null, E.DiagnosticLevel_3, _null, false, true, true, E.DiagnosticsTreeStyle_9, _null, type$.ScrollNotificationObserverState)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 10
  };
  A.ScrollNotificationObserverState_build_closure.prototype = {
    call$1(notification) {
      var t1 = new A._ConvertedScrollMetricsNotification(null, null, notification.metrics, notification.context, 0);
      t1.ViewportNotificationMixin__depth = notification.ViewportNotificationMixin__depth;
      this.$this._notifyListeners$1(t1);
      return false;
    },
    $signature: typesOffset + 54
  };
  A.ScrollNotificationObserverState_build_closure0.prototype = {
    call$1(notification) {
      this.$this._notifyListeners$1(notification);
      return false;
    },
    $signature: typesOffset + 55
  };
  A.Scrollable_ensureVisible_closure.prototype = {
    call$1(_) {
      return null;
    },
    $signature: 249
  };
  A._XidianDirState__com_win_closure.prototype = {
    call$2(context, snapshot) {
      var t1, _null = null;
      if (snapshot.connectionState === B.ConnectionState_3) {
        t1 = snapshot.error;
        if (t1 != null)
          return D.Text$("Error: " + C.S(t1), _null, _null, _null, _null, _null, _null, _null, _null);
        C.checkDeferredIsLoaded("com");
        return N.ComprehensiveWindow$();
      }
      return $.$get$loading();
    },
    $signature: typesOffset + 6
  };
  A._XidianDirState__din_win_closure.prototype = {
    call$2(context, snapshot) {
      var t1, _null = null;
      if (snapshot.connectionState === B.ConnectionState_3) {
        t1 = snapshot.error;
        if (t1 != null)
          return D.Text$("Error: " + C.S(t1), _null, _null, _null, _null, _null, _null, _null, _null);
        C.checkDeferredIsLoaded("din");
        return O.DiningHallWindow$();
      }
      return $.$get$loading();
    },
    $signature: typesOffset + 6
  };
  A._XidianDirState__tel_win_closure.prototype = {
    call$2(context, snapshot) {
      var t1, _null = null;
      if (snapshot.connectionState === B.ConnectionState_3) {
        t1 = snapshot.error;
        if (t1 != null)
          return D.Text$("Error: " + C.S(t1), _null, _null, _null, _null, _null, _null, _null, _null);
        C.checkDeferredIsLoaded("tel");
        return P.TeleBookWindow$();
      }
      return $.$get$loading();
    },
    $signature: typesOffset + 6
  };
  A._XidianDirState_changePage_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._home$_current = this.current;
      if (t2 === "\u7efc\u5408\u697c")
        t1.___XidianDirState__toShow_A = t1._com_win;
      if (t2 === "\u98df\u5802")
        t1.___XidianDirState__toShow_A = t1._din_win;
      if (t2 === "\u7535\u8bdd\u672c")
        t1.___XidianDirState__toShow_A = t1._tel_win;
      if (!(t1._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.size._dx > 900)) {
        t1 = t1._framework$_element;
        t1.toString;
        F.Navigator_of(t1, false).pop$0();
      }
    },
    $signature: 0
  };
  A._XidianDirState_buttons_closure.prototype = {
    call$0() {
      return A.launchUrl(C.Uri_parse("https://legacy.superbart.top", 0, null));
    },
    $signature: 0
  };
  A._XidianDirState_buttons_closure0.prototype = {
    call$0() {
      return A.launchUrl(C.Uri_parse("https://github.com/BenderBlog/xidian_directory", 0, null));
    },
    $signature: 0
  };
  A._XidianDirState_buttons_closure1.prototype = {
    call$0() {
      return A.launchUrl(C.Uri_parse("https://ncov.hawa130.com/about", 0, null));
    },
    $signature: 0
  };
  A.ListDrawer_build_closure.prototype = {
    call$0() {
      this.$this.mainPageCallback.call$1("\u7efc\u5408\u697c");
    },
    $signature: 0
  };
  A.ListDrawer_build_closure0.prototype = {
    call$0() {
      this.$this.mainPageCallback.call$1("\u98df\u5802");
    },
    $signature: 0
  };
  A.ListDrawer_build_closure1.prototype = {
    call$0() {
      this.$this.mainPageCallback.call$1("\u7535\u8bdd\u672c");
    },
    $signature: 0
  };
  (function aliases() {
    var _ = A._DrawerControllerState_State_SingleTickerProviderStateMixin.prototype;
    _.super$_DrawerControllerState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype;
    _.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A.FocusTraversalPolicy.prototype;
    _.super$FocusTraversalPolicy$invalidateScopeData = _.invalidateScopeData$1;
    _.super$FocusTraversalPolicy$changedScope = _.changedScope$2$node$oldScope;
    _ = A._RestorationInformation.prototype;
    _.super$_RestorationInformation$computeSerializableData = _.computeSerializableData$0;
    _ = A._NavigatorState_State_TickerProviderStateMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin$activate = _.activate$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A.__RouterState_State_RestorationMixin.prototype;
    _.super$__RouterState_State_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$__RouterState_State_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$__RouterState_State_RestorationMixin$dispose = _.dispose$0;
  })();
  (function installTearOffs() {
    var _instance_1_u = hunkHelpers._instance_1u,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance = hunkHelpers.installInstanceTearOff,
      _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _static = hunkHelpers.installStaticTearOff;
    var _;
    _instance_1_u(_ = A.CompoundAnimation.prototype, "get$_maybeNotifyStatusListeners", "_maybeNotifyStatusListeners$1", 2);
    _instance_0_u(_, "get$_maybeNotifyListeners", "_maybeNotifyListeners$0", 1);
    _instance_2_u(_ = A._MaterialAppState.prototype, "get$_inspectorSelectButtonBuilder", "_inspectorSelectButtonBuilder$2", 12);
    _instance_2_u(_, "get$_materialBuilder", "_materialBuilder$2", 16);
    _instance_0_u(_ = A._AppBarState.prototype, "get$_handleDrawerButton", "_handleDrawerButton$0", 1);
    _instance_1_u(_, "get$_app_bar$_handleScrollNotification", "_app_bar$_handleScrollNotification$1", 21);
    _instance_1_u(_ = A._RenderInputPadding0.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
    _instance_0_u(_ = A.DrawerControllerState.prototype, "get$_animationChanged", "_animationChanged$0", 1);
    _instance_1_u(_, "get$_animationStatusChanged", "_animationStatusChanged$1", 2);
    _instance_0_u(_, "get$_handleHistoryEntryRemoved", "_handleHistoryEntryRemoved$0", 1);
    _instance_1_u(_, "get$_handleDragDown", "_handleDragDown$1", 50);
    _instance_0_u(_, "get$_handleDragCancel", "_handleDragCancel$0", 1);
    _instance_1_u(_, "get$_move", "_move$1", 57);
    _instance_1_u(_, "get$_settle", "_settle$1", 59);
    _instance_0_i(_, "get$close", "close$0", 1);
    _instance_1_u(_ = A._RenderChildOverflowBox.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_0_u(_ = A._InkState.prototype, "get$_handleRemoved", "_handleRemoved$0", 1);
    _instance_1_u(_, "get$_build", "_build$1", 8);
    _instance_0_u(A.InkDecoration.prototype, "get$_handleChanged", "_handleChanged$0", 1);
    _instance_1_u(_ = A._RenderListTile.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
    _instance_1_u(_ = A._FloatingActionButtonTransitionState.prototype, "get$_handlePreviousAnimationStatusChanged", "_handlePreviousAnimationStatusChanged$1", 2);
    _instance_0_u(_, "get$_onProgressChanged", "_onProgressChanged$0", 1);
    _instance_1_u(_ = A.ScaffoldState.prototype, "get$_drawerOpenedCallback", "_drawerOpenedCallback$1", 14);
    _instance_0_u(_, "get$_handleStatusBarTap", "_handleStatusBarTap$0", 1);
    _instance_1_u(_ = A._SelectableTextSelectionGestureDetectorBuilder.prototype, "get$onForcePressStart", "onForcePressStart$1", 9);
    _instance_1_u(_, "get$onForcePressEnd", "onForcePressEnd$1", 9);
    _instance_1_u(_, "get$onSingleLongTapMoveUpdate", "onSingleLongTapMoveUpdate$1", 18);
    _instance_1_u(_, "get$onSingleTapUp", "onSingleTapUp$1", 19);
    _instance_1_u(_, "get$onSingleLongTapStart", "onSingleLongTapStart$1", 20);
    _instance_0_u(_ = A._SelectableTextState.prototype, "get$_onControllerChanged", "_onControllerChanged$0", 1);
    _instance_2_u(_, "get$_selectable_text$_handleSelectionChanged", "_selectable_text$_handleSelectionChanged$2", 11);
    _instance_0_u(_, "get$_handleSelectionHandleTapped", "_handleSelectionHandleTapped$0", 1);
    _instance_1_u(_ = A.RenderCustomMultiChildLayoutBox.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
    _instance_1_u(_ = A.RenderPerformanceOverlay.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
    _instance_1_u(_ = A._WidgetsAppState.prototype, "get$_onGenerateRoute", "_onGenerateRoute$1", 27);
    _instance_1_u(_, "get$_onUnknownRoute", "_onUnknownRoute$1", 28);
    _instance_1_u(_ = A._HeroFlight.prototype, "get$_buildOverlay", "_buildOverlay$1", 8);
    _instance_1_u(_, "get$_handleAnimationUpdate", "_handleAnimationUpdate$1", 2);
    _instance_0_u(_, "get$onTick", "onTick$0", 1);
    _instance_1_u(_ = A.HeroController.prototype, "get$_handleFlightEnded", "_handleFlightEnded$1", 39);
    _instance(_, "get$_defaultHeroFlightShuttleBuilder", 0, 5, null, ["call$5"], ["_defaultHeroFlightShuttleBuilder$5"], 40, 0, 0);
    _static_2(A, "navigator_Navigator_defaultGenerateInitialRoutes$closure", "Navigator_defaultGenerateInitialRoutes", 58);
    _static_1(A, "navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure", "_RouteEntry_suitableForTransitionAnimationPredicate", 7);
    _static_1(A, "navigator__RouteEntry_willBePresentPredicate$closure", "_RouteEntry_willBePresentPredicate", 7);
    _instance_1_u(A._NavigatorPushObservation.prototype, "get$notify", "notify$1", 3);
    _instance_1_u(A._NavigatorPopObservation.prototype, "get$notify", "notify$1", 3);
    _instance_1_u(A._NavigatorRemoveObservation.prototype, "get$notify", "notify$1", 3);
    _instance_1_u(A._NavigatorReplaceObservation.prototype, "get$notify", "notify$1", 3);
    _instance_1_u(_ = A.NavigatorState.prototype, "get$_navigator$_handlePointerDown", "_navigator$_handlePointerDown$1", 47);
    _instance_1_u(_, "get$_handlePointerUpOrCancel", "_handlePointerUpOrCancel$1", 48);
    _instance_1_u(_ = A._RenderTheatre.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
    _instance_2_u(_, "get$paintStack", "paintStack$2", 51);
    _instance_0_u(A._RootRestorationScopeState.prototype, "get$_replaceRootBucket", "_replaceRootBucket$0", 1);
    _instance_1_u(_ = A._RouterState.prototype, "get$_reportRouteInformation", "_reportRouteInformation$1", 52);
    _instance_0_u(_, "get$_handleRouteInformationProviderNotification", "_handleRouteInformationProviderNotification$0", 1);
    _instance_0_u(_, "get$_handleBackButtonDispatcherNotification", "_handleBackButtonDispatcherNotification$0", 53);
    _instance_0_u(_, "get$_handleRouterDelegateNotification", "_handleRouterDelegateNotification$0", 1);
    _instance_0_u(A._ShortcutRegistrarState.prototype, "get$_shortcutsChanged", "_shortcutsChanged$0", 1);
    _instance_1_u(A._XidianDirState.prototype, "get$changePage", "changePage$1", 56);
    _static(A, "scrollbar_theme___lerpBool$closure", 3, null, ["call$3"], ["_lerpBool"], 60, 0);
    _static(A, "borders_OutlinedBorder_lerp$closure", 3, null, ["call$3"], ["OutlinedBorder_lerp"], 61, 0);
    _static(A, "icon_theme_data_IconThemeData_lerp$closure", 3, null, ["call$3"], ["IconThemeData_lerp"], 41, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.LinkedList, C.Iterable);
    _inheritMany(C.Object, [A._LinkedListIterator, A.LinkedListEntry, A.CallbackHandle, A.LocalizationsDelegate, A.DefaultCupertinoLocalizations, A.DeviceGestureSettings, A._Diagonal, A._LerpProperties, A._LerpSides, A._DefaultHeroTag, A.FloatingActionButtonLocation, A.FabFloatOffsetY, A.FabEndOffsetX, A.FloatingActionButtonAnimator, A.DefaultMaterialLocalizations, A._LerpProperties0, A.MaterialStateMixin, A.MaterialRouteTransitionMixin, A.ScaffoldPrelayoutGeometry, A.ScaffoldGeometry, A.MultiChildLayoutDelegate, A._LerpColors, A.AnnotationEntry, A.ApplicationSwitcherDescription, A.AsyncSnapshot, A._FocusTraversalGroupInfo, A._FocusTraversalPolicy_Object_Diagnosticable, A._DirectionalPolicyDataEntry, A._DirectionalPolicyData, A.DirectionalFocusTraversalPolicyMixin, A.__ReadingOrderSortData_Object_Diagnosticable, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A._HeroFlightManifest, A._HeroFlight, A.NavigatorObserver, A._Pending, A.DefaultWidgetsLocalizations, A.MediaQueryData, A.RouteTransitionRecord, A.TransitionDelegate, A._NavigatorObservation, A._RestorationInformation, A.LocalHistoryEntry, A._ShortcutRegistry_Object_ChangeNotifier, A.WebViewConfiguration]);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin, D.Animation0);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.CompoundAnimation, A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(A.CompoundAnimation, [A.AnimationMin, A._AnimationSwap]);
    _inheritMany(D.Tween, [A.ReverseTween, A.RectTween, A.MaterialPointArcTween, A.ThemeDataTween, A.EdgeInsetsTween]);
    _inherit(A._CupertinoIconThemeData_IconThemeData_Diagnosticable, D.IconThemeData);
    _inherit(A.CupertinoIconThemeData, A._CupertinoIconThemeData_IconThemeData_Diagnosticable);
    _inheritMany(A.LocalizationsDelegate, [A._CupertinoLocalizationsDelegate, A._MaterialLocalizationsDelegate, A._WidgetsLocalizationsDelegate]);
    _inheritMany(D.StatelessWidget, [A.CupertinoTheme, A.BackButtonIcon, A.BackButton, A.VerticalDivider, A.Drawer, A.FloatingActionButton, A.ListTile, A._BodyBuilder, A.Theme, A.DefaultTextEditingShortcuts, A.NavigationToolbar, A.Title, A.ListDrawer]);
    _inheritMany(D.InheritedWidget, [A._InheritedCupertinoTheme, A.FlexibleSpaceBarSettings, A._ScaffoldMessengerScope, A._ScaffoldScope, A._FocusTraversalGroupMarker, A.InheritedModel, A._LocalizationsScope, A.HeroControllerScope, A._RouterScope, A._ScrollNotificationObserverScope, A._ShortcutRegistrarMarker, A._EffectiveTickerMode]);
    _inheritMany(C._Enum, [A.ThemeMode, A._CornerId, A.DrawerAlignment, A._FloatingActionButtonType, A.ListTileStyle, A._ListTileSlot, A._ScaffoldSlot, A.SnackBarClosedReason, A.ConnectionState, A.HeroFlightDirection, A._ToolbarSlot, A._RouteLifecycle, A._RouteRestorationType, A.RouteInformationReportingType, A.LaunchMode]);
    _inheritMany(D.StatefulWidget, [A.MaterialApp, A.AppBar, A.RawMaterialButton, A.DrawerController, A.Ink, A.ScaffoldMessenger, A._FloatingActionButtonTransition, A.Scaffold, A.SelectableText, A.WidgetsApp, A.FutureBuilder, A.FocusTraversalGroup, A.Hero, A.Localizations, A._MediaQueryFromWindow, A.Navigator, A._OverlayEntryWidget, A.Overlay, A.RootRestorationScope, A.Router, A.ScrollNotificationObserver, A.SharedAppData, A.ShortcutRegistrar, A.TickerMode, A.XidianDir]);
    _inheritMany(C.Closure2Args, [A.MaterialApp_createMaterialHeroController_closure, A._MaterialAppState_build_closure, A._RenderInputPadding_hitTest_closure0, A._RenderListTile_hitTestChildren_closure, A.ScaffoldState_build_closure, A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, A.ThemeData__lerpThemeExtensions_closure, A._FutureBuilderState__subscribe_closure0, A.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure1, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure4, A._ReadingOrderSortData_sortWithDirectionality_closure, A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure, A.ReadingOrderTraversalPolicy__pickNext_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand, A.Hero__allHeroesFor_inviteHero, A._HeroFlight__buildOverlay_closure, A.HeroController__defaultHeroFlightShuttleBuilder_closure, A._HistoryProperty_fromPrimitives_closure, A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, A._RenderTheatre_hitTestChildren_closure, A.__RouterState_State_RestorationMixin_dispose_closure, A._XidianDirState__com_win_closure, A._XidianDirState__din_win_closure, A._XidianDirState__tel_win_closure]);
    _inherit(A.MaterialScrollBehavior, D.ScrollBehavior);
    _inheritMany(D.State, [A._MaterialAppState, A._AppBarState, A.__RawMaterialButtonState_State_MaterialStateMixin, A._DrawerControllerState_State_SingleTickerProviderStateMixin, A._InkState, A._ScaffoldMessengerState_State_TickerProviderStateMixin, A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, A._ScaffoldState_State_TickerProviderStateMixin, A._SelectableTextState, A.__WidgetsAppState_State_WidgetsBindingObserver, A._FutureBuilderState, A._FocusTraversalGroupState, A._HeroState, A._LocalizationsState, A.__MediaQueryFromWindowState_State_WidgetsBindingObserver, A._NavigatorState_State_TickerProviderStateMixin, A._OverlayEntryWidgetState, A._OverlayState_State_TickerProviderStateMixin, A._RootRestorationScopeState, A.__RouterState_State_RestorationMixin, A.ScrollNotificationObserverState, A._SharedAppDataState, A._ShortcutRegistrarState, A._TickerModeState, A._XidianDirState]);
    _inheritMany(C.Closure, [A._MaterialAppState__buildWidgetApp_closure, A.MaterialRectArcTween__initialize_closure, A._RenderListTile_paint_doPaint, A.ListTileTheme_merge_closure, A.MaterialStateMixin_updateMaterialState_closure, A.ScaffoldMessengerState_hideCurrentSnackBar_closure, A._AnimatedThemeState_forEachTween_closure, A.ThemeData__lerpThemeExtensions_closure0, A._ShapeDecorationPainter__precache_closure, A._ShapeDecorationPainter__precache_closure0, A._WidgetsAppState__onGenerateRoute_closure, A._WidgetsAppState_build_closure, A._FutureBuilderState__subscribe_closure, A._getAncestor_closure, A.FocusTraversalPolicy__sortAllDescendants_visitGroups, A.FocusTraversalPolicy__sortAllDescendants_closure, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1, A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure2, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure3, A._ReadingOrderSortData_commonDirectionalityOf_closure, A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors, A._ReadingOrderDirectionalGroupData_rect_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand_closure, A.Hero__allHeroesFor_visitor, A.HeroController_didStopUserGesture_isInvalidFlight, A.HeroController__maybeStartHeroTransition_closure, A._loadAll_closure, A._loadAll_closure0, A._loadAll_closure1, A._LocalizationsState_load_closure, A._LocalizationsState_load_closure0, A.MediaQueryData_removeDisplayFeatures_closure, A.Navigator_defaultGenerateInitialRoutes_closure, A._RouteEntry_dispose_closure, A.NavigatorState_restoreState_closure, A.NavigatorState__flushHistoryUpdates_closure, A.NavigatorState__afterNavigation_closure, A.NavigatorState_maybePop_closure, A.NavigatorState_maybePop_closure1, A.NavigatorState_removeRoute_closure, A._RenderTheatre_computeMinIntrinsicWidth_closure, A._RenderTheatre_computeMaxIntrinsicWidth_closure, A._RenderTheatre_computeMinIntrinsicHeight_closure, A._RenderTheatre_computeMaxIntrinsicHeight_closure, A._RootRestorationScopeState__loadRootBucketIfNecessary_closure, A._RouterState__processParsedRouteInformation_closure, A._RouterState__handleRoutePopped_closure, A.ScrollNotificationObserverState_build_closure, A.ScrollNotificationObserverState_build_closure0, A.Scrollable_ensureVisible_closure]);
    _inherit(A._ToolbarContainerLayout, F.SingleChildLayoutDelegate);
    _inherit(A._PreferredAppBarSize, C.Size);
    _inheritMany(C.Closure0Args, [A.AppBar__getEffectiveCenterTitle_platformCenter, A._AppBarState__handleScrollNotification_closure, A.MaterialPointArcTween__initialize_sweepAngle, A.BackButton_build_closure, A.DrawerControllerState__animationChanged_closure, A.MaterialStateMixin_addMaterialState_closure, A.MaterialStateMixin_removeMaterialState_closure, A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure, A.ScaffoldState__drawerOpenedCallback_closure, A.ScaffoldState__updateSnackBar_closure, A.ScaffoldState__updateMaterialBanner_closure, A._SelectableTextState__onControllerChanged_closure, A._SelectableTextState__handleSelectionChanged_closure, A._SelectableTextState_build_closure, A._WidgetsAppState_didChangeLocales_closure, A._FutureBuilderState__subscribe__closure0, A._FutureBuilderState__subscribe__closure, A._HeroState_startFlight_closure, A._HeroState_endFlight_closure, A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate, A._LocalizationsState_load__closure, A._MediaQueryFromWindowState_didChangeMetrics_closure, A._MediaQueryFromWindowState_didChangeTextScaleFactor_closure, A._MediaQueryFromWindowState_didChangePlatformBrightness_closure, A._RouteEntry_handlePush_closure, A._RouteEntry_dispose_closure0, A.NavigatorState__flushHistoryUpdates_closure0, A.NavigatorState_maybePop_closure0, A.NavigatorState_maybePop_closure2, A.NavigatorState_removeRoute_closure0, A.NavigatorState__cancelActivePointers_closure, A._OverlayEntryWidgetState__markNeedsBuild_closure, A.OverlayState_insert_closure, A.OverlayState_insertAll_closure, A.OverlayState_rearrange_closure, A.OverlayState__markDirty_closure, A.OverlayState__didChangeEntryOpacity_closure, A._RootRestorationScopeState__loadRootBucketIfNecessary__closure, A._RouterState_restoreState_closure, A._RouterState_restoreState_closure0, A._RouterState_didChangeDependencies_closure, A._RouterState__handleRouteInformationProviderNotification_closure, A._RouterState__rebuild_closure, A._RouterState__handleRouterDelegateNotification_closure, A.ScrollNotificationObserverState__notifyListeners_closure, A._XidianDirState_changePage_closure, A._XidianDirState_buttons_closure, A._XidianDirState_buttons_closure0, A._XidianDirState_buttons_closure1, A.ListDrawer_build_closure, A.ListDrawer_build_closure0, A.ListDrawer_build_closure1]);
    _inheritMany(D.SingleChildRenderObjectWidget, [A._AppBarTitleBox, A._InputPadding0, A._ChildOverflowBox, A.AnnotatedRegion, A.AbsorbPointer, A.MergeSemantics]);
    _inheritMany(D.RenderAligningShiftedBox, [A._RenderAppBarTitleBox, A._RenderChildOverflowBox]);
    _inherit(A._AppBarDefaultsM2, D.AppBarTheme);
    _inherit(A.MaterialRectArcTween, A.RectTween);
    _inherit(A._RawMaterialButtonState, A.__RawMaterialButtonState_State_MaterialStateMixin);
    _inherit(A._RenderInputPadding0, D.RenderShiftedBox);
    _inherit(A.DrawerControllerState, A._DrawerControllerState_State_SingleTickerProviderStateMixin);
    _inherit(A._FABDefaultsM2, D.FloatingActionButtonThemeData);
    _inherit(A.StandardFabLocation, A.FloatingActionButtonLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.StandardFabLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX);
    _inherit(A._EndFloatFabLocation, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY);
    _inherit(A._ScalingFabMotionAnimator, A.FloatingActionButtonAnimator);
    _inherit(A.InkDecoration, D.InkFeature);
    _inherit(A.__ListTile_RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin, C.RenderObjectWidget);
    _inherit(A._ListTile, A.__ListTile_RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin);
    _inheritMany(C.RenderBox, [A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, A.RenderPerformanceOverlay, A.__RenderTheatre_RenderBox_ContainerRenderObjectMixin]);
    _inherit(A._RenderListTile, A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin);
    _inheritMany(D.InheritedTheme, [A.ListTileTheme, A._InheritedTheme]);
    _inherit(A.PageRoute, F.ModalRoute);
    _inherit(A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, A.PageRoute);
    _inherit(A.MaterialPageRoute, A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin);
    _inherit(A.ScaffoldMessengerState, A._ScaffoldMessengerState_State_TickerProviderStateMixin);
    _inherit(A._ScaffoldGeometryNotifier, C.ChangeNotifier);
    _inherit(A._BodyBoxConstraints, C.BoxConstraints);
    _inheritMany(A.MultiChildLayoutDelegate, [A._ScaffoldLayout, A._ToolbarLayout]);
    _inherit(A._FloatingActionButtonTransitionState, A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin);
    _inherit(A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin, A._ScaffoldState_State_TickerProviderStateMixin);
    _inherit(A.ScaffoldState, A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin);
    _inherit(A._DismissDrawerAction, F.DismissAction);
    _inherit(A._TextSpanEditingController, F.TextEditingController);
    _inherit(A._SelectableTextSelectionGestureDetectorBuilder, F.TextSelectionGestureDetectorBuilder);
    _inherit(A.AnimatedTheme, D.ImplicitlyAnimatedWidget);
    _inherit(A._AnimatedThemeState, D.AnimatedWidgetBaseState);
    _inherit(A.MaterialBasedCupertinoThemeData, F.CupertinoThemeData);
    _inherit(A.ShapeDecoration, D.Decoration);
    _inherit(A._ShapeDecorationPainter, D.BoxPainter);
    _inherit(A.MultiChildLayoutParentData, D.ContainerBoxParentData);
    _inherit(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderCustomMultiChildLayoutBox, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.PerformanceOverlayLayer, C.Layer0);
    _inherit(A.AnnotatedRegionLayer, C.ContainerLayer0);
    _inheritMany(D.RenderProxyBox, [A.RenderAbsorbPointer, A.RenderMergeSemantics, A.RenderAnnotatedRegion]);
    _inheritMany(F.Action, [A.VoidCallbackAction, A.PrioritizedAction, A.RequestFocusAction, A.NextFocusAction, A.PreviousFocusAction, A.ScrollAction]);
    _inheritMany(F.Intent, [A.ActivateIntent, A.ButtonActivateIntent, A.DismissIntent, A.PrioritizedIntents, A.NextFocusIntent, A.PreviousFocusIntent, A.ScrollIntent, A.DoNothingAndStopPropagationTextIntent, A.DirectionalTextEditingIntent, A.SelectAllTextIntent, A.CopySelectionTextIntent, A.PasteTextIntent, A.RedoTextIntent, A.UndoTextIntent, A.TransposeCharactersIntent]);
    _inherit(A._WidgetsAppState, A.__WidgetsAppState_State_WidgetsBindingObserver);
    _inherit(A.LayoutId, D.ParentDataWidget);
    _inheritMany(D.MultiChildRenderObjectWidget, [A.CustomMultiChildLayout, A._Theatre]);
    _inherit(A.FocusTraversalPolicy, A._FocusTraversalPolicy_Object_Diagnosticable);
    _inherit(A._ReadingOrderSortData, A.__ReadingOrderSortData_Object_Diagnosticable);
    _inherit(A._ReadingOrderDirectionalGroupData, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable);
    _inherit(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.FocusTraversalPolicy);
    _inherit(A.ReadingOrderTraversalPolicy, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin);
    _inherit(A.HeroController, A.NavigatorObserver);
    _inherit(A.InheritedModelElement, D.InheritedElement);
    _inherit(A._MediaQueryFromWindowState, A.__MediaQueryFromWindowState_State_WidgetsBindingObserver);
    _inherit(A.DefaultTransitionDelegate, A.TransitionDelegate);
    _inherit(A._NotAnnounced, F.Route);
    _inherit(A._RouteEntry, A.RouteTransitionRecord);
    _inheritMany(A._NavigatorObservation, [A._NavigatorPushObservation, A._NavigatorPopObservation, A._NavigatorRemoveObservation, A._NavigatorReplaceObservation]);
    _inherit(A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, A._NavigatorState_State_TickerProviderStateMixin);
    _inherit(A.NavigatorState, A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin);
    _inheritMany(A._RestorationInformation, [A._NamedRestorationInformation, A._AnonymousRestorationInformation]);
    _inherit(A._HistoryProperty, D.RestorableProperty);
    _inherit(A.OverlayState, A._OverlayState_State_TickerProviderStateMixin);
    _inherit(A._TheatreElement, D.MultiChildRenderObjectElement);
    _inherit(A._RenderTheatre, A.__RenderTheatre_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.PerformanceOverlay, C.LeafRenderObjectWidget);
    _inherit(A.RestorableNum, I._RestorablePrimitiveValue);
    _inherit(A._RouterState, A.__RouterState_State_RestorationMixin);
    _inherit(A._RestorableRouteInformation, D.RestorableValue);
    _inherit(A._ListenerEntry, A.LinkedListEntry);
    _inherit(A._ConvertedScrollMetricsNotification, D.ScrollUpdateNotification);
    _inherit(A._SharedAppModel, A.InheritedModel);
    _inherit(A.ShortcutRegistry, A._ShortcutRegistry_Object_ChangeNotifier);
    _inheritMany(A.DirectionalTextEditingIntent, [A.DeleteCharacterIntent, A.DeleteToNextWordBoundaryIntent, A.DeleteToLineBreakIntent, A.DirectionalCaretMovementIntent, A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent, A.ExpandSelectionToDocumentBoundaryIntent, A.ExpandSelectionToLineBreakIntent, A.ScrollToDocumentBoundaryIntent]);
    _inheritMany(A.DirectionalCaretMovementIntent, [A.ExtendSelectionByCharacterIntent, A.ExtendSelectionToNextWordBoundaryIntent, A.ExtendSelectionToLineBreakIntent, A.ExtendSelectionVerticallyToAdjacentLineIntent, A.ExtendSelectionToDocumentBoundaryIntent]);
    _inherit(A.RotationTransition, D.AnimatedWidget);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin, D.AnimationLazyListenerMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, D.AnimationLocalListenersMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, D.AnimationLocalStatusListenersMixin);
    _mixin(A._CupertinoIconThemeData_IconThemeData_Diagnosticable, C.Diagnosticable);
    _mixin(A.__RawMaterialButtonState_State_MaterialStateMixin, A.MaterialStateMixin);
    _mixinHard(A._DrawerControllerState_State_SingleTickerProviderStateMixin, D.SingleTickerProviderStateMixin);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.FabEndOffsetX);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.FabFloatOffsetY);
    _mixinHard(A.__ListTile_RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin, F.SlottedMultiChildRenderObjectWidgetMixin);
    _mixinHard(A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin, F.SlottedContainerRenderObjectMixin);
    _mixin(A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, A.MaterialRouteTransitionMixin);
    _mixinHard(A._ScaffoldMessengerState_State_TickerProviderStateMixin, D.TickerProviderStateMixin);
    _mixinHard(A._ScaffoldState_State_TickerProviderStateMixin, D.TickerProviderStateMixin);
    _mixinHard(A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin, D.RestorationMixin);
    _mixinHard(A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, D.TickerProviderStateMixin);
    _mixinHard(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, D.ContainerRenderObjectMixin);
    _mixin(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, D.RenderBoxContainerDefaultsMixin);
    _mixin(A.__WidgetsAppState_State_WidgetsBindingObserver, F.WidgetsBindingObserver);
    _mixin(A._FocusTraversalPolicy_Object_Diagnosticable, C.Diagnosticable);
    _mixinHard(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.DirectionalFocusTraversalPolicyMixin);
    _mixin(A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, C.Diagnosticable);
    _mixin(A.__ReadingOrderSortData_Object_Diagnosticable, C.Diagnosticable);
    _mixin(A.__MediaQueryFromWindowState_State_WidgetsBindingObserver, F.WidgetsBindingObserver);
    _mixinHard(A._NavigatorState_State_TickerProviderStateMixin, D.TickerProviderStateMixin);
    _mixinHard(A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, D.RestorationMixin);
    _mixinHard(A._OverlayState_State_TickerProviderStateMixin, D.TickerProviderStateMixin);
    _mixinHard(A.__RenderTheatre_RenderBox_ContainerRenderObjectMixin, D.ContainerRenderObjectMixin);
    _mixinHard(A.__RouterState_State_RestorationMixin, D.RestorationMixin);
    _mixin(A._ShortcutRegistry_Object_ChangeNotifier, C.ChangeNotifier);
  })();
  C._Universe_addRules(init.typeUniverse, JSON.parse('{"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"CompoundAnimation":{"Animation0":["1"],"Listenable":[]},"AnimationMin":{"Animation0":["1"],"Listenable":[]},"ReverseTween":{"Tween":["1"],"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"RectTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Tween.T":"Rect?","Animatable.T":"Rect?"},"CupertinoIconThemeData":{"IconThemeData":[]},"_CupertinoLocalizationsDelegate":{"LocalizationsDelegate":["CupertinoLocalizations"],"LocalizationsDelegate.T":"CupertinoLocalizations"},"DefaultCupertinoLocalizations":{"CupertinoLocalizations":[]},"CupertinoTheme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InheritedCupertinoTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"MaterialApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ThemeMode":{"Enum":[]},"_MaterialAppState":{"State":["MaterialApp"]},"AppBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PreferredAppBarSize":{"Size":[]},"_AppBarState":{"State":["AppBar"]},"_AppBarTitleBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderAppBarTitleBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"MaterialRectArcTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Tween.T":"Rect?","Animatable.T":"Rect?"},"MaterialPointArcTween":{"Tween":["Offset"],"Animatable":["Offset"],"Tween.T":"Offset","Animatable.T":"Offset"},"_CornerId":{"Enum":[]},"BackButtonIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BackButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"RawMaterialButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RawMaterialButtonState":{"State":["RawMaterialButton"]},"_InputPadding0":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderInputPadding0":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"_LerpProperties":{"MaterialStateProperty":["1?"]},"_LerpSides":{"MaterialStateProperty":["BorderSide?"]},"VerticalDivider":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerController":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerControllerState":{"State":["DrawerController"]},"DrawerAlignment":{"Enum":[]},"Drawer":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FlexibleSpaceBarSettings":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FloatingActionButtonType":{"Enum":[]},"FloatingActionButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ChildOverflowBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderChildOverflowBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"_AnimationSwap":{"Animation0":["1"],"Listenable":[]},"Ink":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InkState":{"State":["Ink"]},"InkDecoration":{"InkFeature":[]},"_ListTileSlot":{"Enum":[]},"ListTileStyle":{"Enum":[]},"ListTile":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ListTile":{"SlottedMultiChildRenderObjectWidgetMixin":["_ListTileSlot"],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"SlottedMultiChildRenderObjectWidgetMixin.S":"_ListTileSlot"},"_RenderListTile":{"SlottedContainerRenderObjectMixin":["_ListTileSlot"],"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"SlottedContainerRenderObjectMixin.S":"_ListTileSlot"},"ListTileTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialLocalizationsDelegate":{"LocalizationsDelegate":["MaterialLocalizations"],"LocalizationsDelegate.T":"MaterialLocalizations"},"DefaultMaterialLocalizations":{"MaterialLocalizations":[]},"_LerpProperties0":{"MaterialStateProperty":["1?"]},"MaterialPageRoute":{"MaterialRouteTransitionMixin":["1"],"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"],"ModalRoute.T":"1"},"ScaffoldMessenger":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScaffoldMessengerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FloatingActionButtonTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Scaffold":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScaffoldState":{"State":["Scaffold"]},"_StandardBottomSheet":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScaffoldSlot":{"Enum":[]},"ScaffoldMessengerState":{"State":["ScaffoldMessenger"]},"_ScaffoldGeometryNotifier":{"Listenable":[]},"_BodyBoxConstraints":{"BoxConstraints":[]},"_BodyBuilder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FloatingActionButtonTransitionState":{"State":["_FloatingActionButtonTransition"]},"_DismissDrawerAction":{"Action":["DismissIntent"],"Action.T":"DismissIntent"},"_ScaffoldScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"SelectableText":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TextSpanEditingController":{"Listenable":[]},"_SelectableTextState":{"State":["SelectableText"]},"SnackBarClosedReason":{"Enum":[]},"SnackBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LerpColors":{"MaterialStateProperty":["Color?"]},"ThemeDataTween":{"Tween":["ThemeData"],"Animatable":["ThemeData"],"Tween.T":"ThemeData","Animatable.T":"ThemeData"},"AnimatedTheme":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Theme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InheritedTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedThemeState":{"State":["AnimatedTheme"]},"ShapeDecoration":{"Decoration":[]},"MultiChildLayoutParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"RenderCustomMultiChildLayoutBox":{"RenderBoxContainerDefaultsMixin":["RenderBox","MultiChildLayoutParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","MultiChildLayoutParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"MultiChildLayoutParentData","RenderBoxContainerDefaultsMixin.1":"MultiChildLayoutParentData","ContainerRenderObjectMixin.0":"RenderBox"},"PerformanceOverlayLayer":{"DiagnosticableTree":[],"AbstractNode":[]},"AnnotatedRegionLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderPerformanceOverlay":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAbsorbPointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderMergeSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAnnotatedRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"VoidCallbackIntent":{"Intent":[]},"DoNothingIntent":{"Intent":[]},"DoNothingAndStopPropagationIntent":{"Intent":[]},"PrioritizedIntents":{"Intent":[]},"VoidCallbackAction":{"Action":["VoidCallbackIntent"],"Action.T":"VoidCallbackIntent"},"ActivateIntent":{"Intent":[]},"ButtonActivateIntent":{"Intent":[]},"DismissIntent":{"Intent":[]},"PrioritizedAction":{"Action":["PrioritizedIntents"],"Action.T":"PrioritizedIntents"},"AnnotatedRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"WidgetsApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetsAppState":{"State":["WidgetsApp"],"WidgetsBindingObserver":[]},"FutureBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ConnectionState":{"Enum":[]},"_FutureBuilderState":{"State":["FutureBuilder<1>"]},"LayoutId":{"ParentDataWidget":["MultiChildLayoutParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"MultiChildLayoutParentData"},"CustomMultiChildLayout":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"AbsorbPointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"MergeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"DefaultTextEditingShortcuts":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FocusTraversalGroup":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"RequestFocusIntent":{"Intent":[]},"NextFocusIntent":{"Intent":[]},"PreviousFocusIntent":{"Intent":[]},"_FocusTraversalGroupState":{"State":["FocusTraversalGroup"]},"_FocusTraversalGroupMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RequestFocusAction":{"Action":["RequestFocusIntent"],"Action.T":"RequestFocusIntent"},"NextFocusAction":{"Action":["NextFocusIntent"],"Action.T":"NextFocusIntent"},"PreviousFocusAction":{"Action":["PreviousFocusIntent"],"Action.T":"PreviousFocusIntent"},"HeroFlightDirection":{"Enum":[]},"Hero":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_HeroState":{"State":["Hero"]},"HeroController":{"NavigatorObserver":[]},"EdgeInsetsTween":{"Tween":["EdgeInsets"],"Animatable":["EdgeInsets"],"Tween.T":"EdgeInsets","Animatable.T":"EdgeInsets"},"InheritedModel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"InheritedModelElement":{"InheritedElement":[],"Element0":[],"DiagnosticableTree":[],"BuildContext":[]},"Localizations":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetsLocalizationsDelegate":{"LocalizationsDelegate":["WidgetsLocalizations"],"LocalizationsDelegate.T":"WidgetsLocalizations"},"DefaultWidgetsLocalizations":{"WidgetsLocalizations":[]},"_LocalizationsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LocalizationsState":{"State":["Localizations"]},"_MediaQueryFromWindow":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MediaQueryFromWindowState":{"State":["_MediaQueryFromWindow"],"WidgetsBindingObserver":[]},"NavigationToolbar":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ToolbarSlot":{"Enum":[]},"Page":{"RouteSettings":[]},"HeroControllerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Navigator":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RouteRestorationType":{"Enum":[]},"_RouteLifecycle":{"Enum":[]},"_NotAnnounced":{"Route":["~"]},"_NavigatorPushObservation":{"_NavigatorObservation":[]},"_NavigatorPopObservation":{"_NavigatorObservation":[]},"_NavigatorRemoveObservation":{"_NavigatorObservation":[]},"_NavigatorReplaceObservation":{"_NavigatorObservation":[]},"NavigatorState":{"State":["Navigator"]},"_HistoryProperty":{"RestorableProperty":["Map<String?,List<Object>>?"],"Listenable":[]},"_OverlayEntryWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Overlay":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OverlayEntryWidgetState":{"State":["_OverlayEntryWidget"]},"OverlayState":{"State":["Overlay"]},"_Theatre":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TheatreElement":{"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"BuildContext":[]},"_RenderTheatre":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData","ContainerRenderObjectMixin.0":"RenderBox"},"PageRoute":{"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"PerformanceOverlay":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RootRestorationScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RootRestorationScopeState":{"State":["RootRestorationScope"]},"RestorableNum":{"_RestorablePrimitiveValueN":["1"],"RestorableProperty":["1"],"Listenable":[],"_RestorablePrimitiveValueN.T":"1","RestorableValue.T":"1"},"Router":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ChildBackButtonDispatcher":{"_CallbackHookProvider":["Future<bool>"]},"RouteInformationReportingType":{"Enum":[]},"_RouterState":{"State":["Router<1>"]},"_RouterScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RestorableRouteInformation":{"RestorableProperty":["RouteInformation?"],"Listenable":[],"RestorableValue.T":"RouteInformation?"},"_ScrollNotificationObserverScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ListenerEntry":{"LinkedListEntry":["_ListenerEntry"],"LinkedListEntry.E":"_ListenerEntry"},"ScrollNotificationObserver":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollNotificationObserverState":{"State":["ScrollNotificationObserver"]},"_ConvertedScrollMetricsNotification":{"ScrollUpdateNotification":[],"ScrollNotification":[],"LayoutChangedNotification":[],"ViewportNotificationMixin":[]},"ScrollIntent":{"Intent":[]},"ScrollAction":{"Action":["ScrollIntent"],"Action.T":"ScrollIntent"},"SharedAppData":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SharedAppDataState":{"State":["SharedAppData"]},"_SharedAppModel":{"InheritedModel":["Object"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"InheritedModel.T":"Object"},"ShortcutRegistrar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ShortcutRegistry":{"Listenable":[]},"_ShortcutRegistrarState":{"State":["ShortcutRegistrar"]},"_ShortcutRegistrarMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DoNothingAndStopPropagationTextIntent":{"Intent":[]},"DirectionalTextEditingIntent":{"Intent":[]},"DeleteCharacterIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"DeleteToNextWordBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"DeleteToLineBreakIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"DirectionalCaretMovementIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExtendSelectionByCharacterIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExtendSelectionToNextWordBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExtendSelectionToNextWordBoundaryOrCaretLocationIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExpandSelectionToDocumentBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExpandSelectionToLineBreakIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExtendSelectionToLineBreakIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExtendSelectionVerticallyToAdjacentLineIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ExtendSelectionToDocumentBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"ScrollToDocumentBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[]},"SelectAllTextIntent":{"Intent":[]},"CopySelectionTextIntent":{"Intent":[]},"PasteTextIntent":{"Intent":[]},"RedoTextIntent":{"Intent":[]},"UndoTextIntent":{"Intent":[]},"TransposeCharactersIntent":{"Intent":[]},"TickerMode":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TickerModeState":{"State":["TickerMode"]},"_EffectiveTickerMode":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Title":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"RotationTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"LaunchMode":{"Enum":[]},"XidianDir":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_XidianDirState":{"State":["XidianDir"]},"ListDrawer":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"MaterialBannerClosedReason":{"Enum":[]},"MaterialBanner":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"MaterialBannerTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  C._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"_LinkedListIterator":1,"CompoundAnimation":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":1,"MaterialStateMixin":1,"_MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin":1,"Page":1,"TransitionDelegate":1,"DefaultTransitionDelegate":1,"PageRoute":1,"__RouterState_State_RestorationMixin":1}'));
  var type$ = (function rtii() {
    var findType = C.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      Animation_double: findType("Animation0<double>"),
      AnnotatedRegion_SystemUiOverlayStyle: findType("AnnotatedRegion<SystemUiOverlayStyle>"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      CastList_of_nullable_Route_dynamic_and_Route_dynamic: findType("CastList<Route<@>?,Route<@>>"),
      Color: findType("Color"),
      CurveTween: findType("CurveTween"),
      DefaultSelectionStyle: findType("DefaultSelectionStyle"),
      DefaultTextStyle: findType("DefaultTextStyle"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      Directionality: findType("Directionality"),
      DrawerTheme: findType("DrawerTheme"),
      Element: findType("Element0"),
      FlexibleSpaceBarSettings: findType("FlexibleSpaceBarSettings"),
      FocusNode: findType("FocusNode"),
      FocusScopeNode: findType("FocusScopeNode"),
      GlobalObjectKey_NavigatorState: findType("GlobalObjectKey<NavigatorState>"),
      GlobalObjectKey_State_StatefulWidget: findType("GlobalObjectKey<State<StatefulWidget>>"),
      Hero: findType("Hero"),
      HeroControllerScope: findType("HeroControllerScope"),
      Intent: findType("Intent"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Directionality: findType("JSArray<Directionality>"),
      JSArray_FocusNode: findType("JSArray<FocusNode>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_IconButton: findType("JSArray<IconButton>"),
      JSArray_LayoutId: findType("JSArray<LayoutId>"),
      JSArray_LocalizationsDelegate_dynamic: findType("JSArray<LocalizationsDelegate<@>>"),
      JSArray_NavigatorObserver: findType("JSArray<NavigatorObserver>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_RenderBox: findType("JSArray<RenderBox>"),
      JSArray_Shadow: findType("JSArray<Shadow>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_TextSpan: findType("JSArray<TextSpan>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray__DirectionalPolicyDataEntry: findType("JSArray<_DirectionalPolicyDataEntry>"),
      JSArray__Pending: findType("JSArray<_Pending>"),
      JSArray__ReadingOrderDirectionalGroupData: findType("JSArray<_ReadingOrderDirectionalGroupData>"),
      JSArray__ReadingOrderSortData: findType("JSArray<_ReadingOrderSortData>"),
      JSArray__RouteEntry: findType("JSArray<_RouteEntry>"),
      JSArray__StandardBottomSheet: findType("JSArray<_StandardBottomSheet>"),
      JSArray_nullable_Route_dynamic: findType("JSArray<Route<@>?>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_AnimationStatus: findType("JSArray<~(AnimationStatus)>"),
      LabeledGlobalKey_DrawerControllerState: findType("LabeledGlobalKey<DrawerControllerState>"),
      LabeledGlobalKey_EditableTextState: findType("LabeledGlobalKey<EditableTextState>"),
      LabeledGlobalKey_OverlayState: findType("LabeledGlobalKey<OverlayState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LabeledGlobalKey__OverlayEntryWidgetState: findType("LabeledGlobalKey<_OverlayEntryWidgetState>"),
      LinkedList__ListenerEntry: findType("LinkedList<_ListenerEntry>"),
      ListTileTheme: findType("ListTileTheme"),
      List_Object: findType("List<Object>"),
      List_OverlayEntry: findType("List<OverlayEntry>"),
      List_dynamic: findType("List<@>"),
      List_nullable_Object: findType("List<Object?>"),
      Locale: findType("Locale"),
      MapEntry_of_Object_and_ThemeExtension_dynamic: findType("MapEntry<Object,ThemeExtension<@>>"),
      MapEntry_of_nullable_String_and_List_Object: findType("MapEntry<String?,List<Object>>"),
      Map_ShortcutActivator_Intent: findType("Map<ShortcutActivator,Intent>"),
      Map_Type_dynamic: findType("Map<Type,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      MaterialBannerTheme: findType("MaterialBannerTheme"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MaterialRouteTransitionMixin_dynamic: findType("MaterialRouteTransitionMixin<@>"),
      MaterialState: findType("MaterialState"),
      MediaQuery: findType("MediaQuery"),
      MultiChildLayoutParentData: findType("MultiChildLayoutParentData"),
      NotificationListener_ScrollMetricsNotification: findType("NotificationListener<ScrollMetricsNotification>"),
      NotificationListener_ScrollNotification: findType("NotificationListener<ScrollNotification>"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserverList_of_void_Function: findType("ObserverList<~()>"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      ObserverList_of_void_Function_AnimationStatus: findType("ObserverList<~(AnimationStatus)>"),
      Offset: findType("Offset"),
      OverlayEntry: findType("OverlayEntry"),
      Paint: findType("Paint"),
      Path: findType("Path"),
      RenderAbsorbPointer: findType("RenderAbsorbPointer"),
      RenderBox: findType("RenderBox"),
      RenderEditable: findType("RenderEditable"),
      RestorableNum_int: findType("RestorableNum<int>"),
      RestorableProperty_nullable_Object: findType("RestorableProperty<Object?>"),
      ReverseTween_nullable_Rect: findType("ReverseTween<Rect?>"),
      ReversedListIterable_Widget: findType("ReversedListIterable<Widget>"),
      Route_dynamic_Function_2_BuildContext_and_nullable_Object: findType("Route<@>(BuildContext,Object?)"),
      ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason: findType("ScaffoldFeatureController<MaterialBanner,MaterialBannerClosedReason>"),
      ScaffoldFeatureController_SnackBar_SnackBarClosedReason: findType("ScaffoldFeatureController<SnackBar,SnackBarClosedReason>"),
      ScaffoldState: findType("ScaffoldState"),
      ScrollNotificationObserverState: findType("ScrollNotificationObserverState"),
      ShortcutActivator: findType("ShortcutActivator"),
      ShortcutRegistryEntry: findType("ShortcutRegistryEntry"),
      StackParentData: findType("StackParentData"),
      StatefulElement: findType("StatefulElement"),
      String: findType("String"),
      SynchronousFuture_CupertinoLocalizations: findType("SynchronousFuture<CupertinoLocalizations>"),
      SynchronousFuture_Map_Type_dynamic: findType("SynchronousFuture<Map<Type,@>>"),
      SynchronousFuture_MaterialLocalizations: findType("SynchronousFuture<MaterialLocalizations>"),
      SynchronousFuture_WidgetsLocalizations: findType("SynchronousFuture<WidgetsLocalizations>"),
      SynchronousFuture_bool: findType("SynchronousFuture<bool>"),
      SynchronousFuture_void: findType("SynchronousFuture<~>"),
      ThemeData: findType("ThemeData"),
      ThemeDataTween: findType("ThemeDataTween"),
      ThemeExtension_dynamic: findType("ThemeExtension<@>"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      ValueKey_Object: findType("ValueKey<Object>"),
      Widget: findType("Widget"),
      WidgetsLocalizations: findType("WidgetsLocalizations"),
      _DirectionalPolicyData: findType("_DirectionalPolicyData"),
      _FocusTraversalGroupInfo: findType("_FocusTraversalGroupInfo"),
      _FocusTraversalGroupMarker: findType("_FocusTraversalGroupMarker"),
      _HeroFlight: findType("_HeroFlight"),
      _HeroState: findType("_HeroState"),
      _ListTileSlot: findType("_ListTileSlot"),
      _ListenerEntry: findType("_ListenerEntry"),
      _NavigatorObservation: findType("_NavigatorObservation"),
      _ReadingOrderDirectionalGroupData: findType("_ReadingOrderDirectionalGroupData"),
      _ReadingOrderSortData: findType("_ReadingOrderSortData"),
      _RenderInkFeatures: findType("_RenderInkFeatures"),
      _RenderTheatre: findType("_RenderTheatre"),
      _RouteEntry: findType("_RouteEntry"),
      _ScaffoldMessengerScope: findType("_ScaffoldMessengerScope"),
      _ScrollNotificationObserverScope: findType("_ScrollNotificationObserverScope"),
      _ScrollableScope: findType("_ScrollableScope"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      int: findType("int"),
      nullable_Color: findType("Color?"),
      nullable_Directionality: findType("Directionality?"),
      nullable_EdgeInsetsGeometry: findType("EdgeInsetsGeometry?"),
      nullable_FocusNode: findType("FocusNode?"),
      nullable_HeroControllerScope: findType("HeroControllerScope?"),
      nullable_IconThemeData: findType("IconThemeData?"),
      nullable_MouseCursor: findType("MouseCursor0?"),
      nullable_Object: findType("Object?"),
      nullable_OutlinedBorder: findType("OutlinedBorder?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_ShapeBorder: findType("ShapeBorder?"),
      nullable_ShapeDecoration: findType("ShapeDecoration?"),
      nullable_Size: findType("Size?"),
      nullable_String: findType("String?"),
      nullable_TextStyle: findType("TextStyle?"),
      nullable__FocusTraversalGroupMarker: findType("_FocusTraversalGroupMarker?"),
      nullable_bool: findType("bool?"),
      nullable_double: findType("double?"),
      void: findType("~"),
      void_Function: findType("~()")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Alignment_0_1 = new D.Alignment(0, 1);
    B.Alignment_1_0 = new D.Alignment(1, 0);
    B.BackButtonIcon_null = new A.BackButtonIcon(null);
    B.BackButton_null = new A.BackButton(null);
    B.Border_yXb = new D.Border(G.BorderSide_aLd, G.BorderSide_aLd, G.BorderSide_aLd, G.BorderSide_aLd);
    B.BoxConstraints_40_40_40_40 = new C.BoxConstraints(40, 40, 40, 40);
    B.BoxConstraints_56_56_56_56 = new C.BoxConstraints(56, 56, 56, 56);
    B.BoxConstraints_96_96_96_96 = new C.BoxConstraints(96, 96, 96, 96);
    B.BoxConstraints_CWG = new C.BoxConstraints(0, 1 / 0, 48, 48);
    B.C_DefaultCupertinoLocalizations = new A.DefaultCupertinoLocalizations();
    B.C_DefaultMaterialLocalizations = new A.DefaultMaterialLocalizations();
    B.C_DefaultTransitionDelegate = new A.DefaultTransitionDelegate();
    B.C_DefaultWidgetsLocalizations = new A.DefaultWidgetsLocalizations();
    B.C_DoNothingAndStopPropagationTextIntent = new A.DoNothingAndStopPropagationTextIntent();
    B.C_MaterialScrollBehavior = new A.MaterialScrollBehavior();
    B.C_PasteTextIntent = new A.PasteTextIntent();
    B.C_RedoTextIntent = new A.RedoTextIntent();
    B.C_SelectAllTextIntent = new A.SelectAllTextIntent();
    B.C_TransposeCharactersIntent = new A.TransposeCharactersIntent();
    B.C_UndoTextIntent = new A.UndoTextIntent();
    B.C_WebViewConfiguration = new A.WebViewConfiguration();
    B.C__CupertinoLocalizationsDelegate = new A._CupertinoLocalizationsDelegate();
    B.C__DefaultHeroTag = new A._DefaultHeroTag();
    B.C__EndFloatFabLocation = new A._EndFloatFabLocation();
    B.C__MaterialLocalizationsDelegate = new A._MaterialLocalizationsDelegate();
    B.C__ScalingFabMotionAnimator = new A._ScalingFabMotionAnimator();
    B.C__WidgetsLocalizationsDelegate = new A._WidgetsLocalizationsDelegate();
    B.ConnectionState_0 = new A.ConnectionState(0, "none");
    B.ConnectionState_1 = new A.ConnectionState(1, "waiting");
    B.ConnectionState_3 = new A.ConnectionState(3, "done");
    B.CopySelectionTextIntent_false = new A.CopySelectionTextIntent(false);
    B.CopySelectionTextIntent_true = new A.CopySelectionTextIntent(true);
    B.Cubic_JUR0 = new C.Cubic(0.42, 0, 1, 1);
    B.Cubic_YAz = new C.Cubic(0.075, 0.82, 0.165, 1);
    B.DeleteCharacterIntent_false = new A.DeleteCharacterIntent(false);
    B.DeleteCharacterIntent_true = new A.DeleteCharacterIntent(true);
    B.DeleteToLineBreakIntent_false = new A.DeleteToLineBreakIntent(false);
    B.DeleteToLineBreakIntent_true = new A.DeleteToLineBreakIntent(true);
    B.DeleteToNextWordBoundaryIntent_false = new A.DeleteToNextWordBoundaryIntent(false);
    B.DeleteToNextWordBoundaryIntent_true = new A.DeleteToNextWordBoundaryIntent(true);
    B.DrawerAlignment_0 = new A.DrawerAlignment(0, "start");
    B.Duration_246000 = new C.Duration(246000);
    B.ExpandSelectionToDocumentBoundaryIntent_false = new A.ExpandSelectionToDocumentBoundaryIntent(false);
    B.ExpandSelectionToDocumentBoundaryIntent_true = new A.ExpandSelectionToDocumentBoundaryIntent(true);
    B.ExpandSelectionToLineBreakIntent_false = new A.ExpandSelectionToLineBreakIntent(false);
    B.ExpandSelectionToLineBreakIntent_true = new A.ExpandSelectionToLineBreakIntent(true);
    B.ExtendSelectionByCharacterIntent_false_false_false_false = new A.ExtendSelectionByCharacterIntent(false, false, false, false);
    B.ExtendSelectionByCharacterIntent_false_false_false_true = new A.ExtendSelectionByCharacterIntent(false, false, false, true);
    B.ExtendSelectionByCharacterIntent_true_false_false_false = new A.ExtendSelectionByCharacterIntent(true, false, false, false);
    B.ExtendSelectionByCharacterIntent_true_false_false_true = new A.ExtendSelectionByCharacterIntent(true, false, false, true);
    B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_false = new A.ExtendSelectionToDocumentBoundaryIntent(false, false, false, false);
    B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_true = new A.ExtendSelectionToDocumentBoundaryIntent(false, false, false, true);
    B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_false = new A.ExtendSelectionToDocumentBoundaryIntent(true, false, false, false);
    B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_true = new A.ExtendSelectionToDocumentBoundaryIntent(true, false, false, true);
    B.ExtendSelectionToLineBreakIntent_false_false_false_false = new A.ExtendSelectionToLineBreakIntent(false, false, false, false);
    B.ExtendSelectionToLineBreakIntent_false_false_false_true = new A.ExtendSelectionToLineBreakIntent(false, false, false, true);
    B.ExtendSelectionToLineBreakIntent_false_false_true_false = new A.ExtendSelectionToLineBreakIntent(false, false, true, false);
    B.ExtendSelectionToLineBreakIntent_false_false_true_true = new A.ExtendSelectionToLineBreakIntent(false, false, true, true);
    B.ExtendSelectionToLineBreakIntent_false_true_false_false = new A.ExtendSelectionToLineBreakIntent(false, true, false, false);
    B.ExtendSelectionToLineBreakIntent_false_true_false_true = new A.ExtendSelectionToLineBreakIntent(false, true, false, true);
    B.ExtendSelectionToLineBreakIntent_true_false_false_false = new A.ExtendSelectionToLineBreakIntent(true, false, false, false);
    B.ExtendSelectionToLineBreakIntent_true_false_false_true = new A.ExtendSelectionToLineBreakIntent(true, false, false, true);
    B.ExtendSelectionToLineBreakIntent_true_false_true_false = new A.ExtendSelectionToLineBreakIntent(true, false, true, false);
    B.ExtendSelectionToLineBreakIntent_true_false_true_true = new A.ExtendSelectionToLineBreakIntent(true, false, true, true);
    B.ExtendSelectionToNextWordBoundaryIntent_false_false_false_false = new A.ExtendSelectionToNextWordBoundaryIntent(false, false, false, false);
    B.ExtendSelectionToNextWordBoundaryIntent_false_false_false_true = new A.ExtendSelectionToNextWordBoundaryIntent(false, false, false, true);
    B.ExtendSelectionToNextWordBoundaryIntent_true_false_false_false = new A.ExtendSelectionToNextWordBoundaryIntent(true, false, false, false);
    B.ExtendSelectionToNextWordBoundaryIntent_true_false_false_true = new A.ExtendSelectionToNextWordBoundaryIntent(true, false, false, true);
    B.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent_false = new A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent(false);
    B.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent_true = new A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent(true);
    B.ExtendSelectionVerticallyToAdjacentLineIntent_false_false_false_false = new A.ExtendSelectionVerticallyToAdjacentLineIntent(false, false, false, false);
    B.ExtendSelectionVerticallyToAdjacentLineIntent_false_false_false_true = new A.ExtendSelectionVerticallyToAdjacentLineIntent(false, false, false, true);
    B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_false = new A.ExtendSelectionVerticallyToAdjacentLineIntent(true, false, false, false);
    B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_true = new A.ExtendSelectionVerticallyToAdjacentLineIntent(true, false, false, true);
    B.HeroFlightDirection_0 = new A.HeroFlightDirection(0, "push");
    B.HeroFlightDirection_1 = new A.HeroFlightDirection(1, "pop");
    B.IconData_57491_true = new D.IconData(57491, true);
    B.IconData_57718_false = new D.IconData(57718, false);
    B.Icon_IconData_57718_false_null = new D.Icon(B.IconData_57718_false, null);
    B.IconData_58136_false = new D.IconData(58136, false);
    B.Icon_IconData_58136_false_null = new D.Icon(B.IconData_58136_false, null);
    B.IconData_58332_false = new D.IconData(58332, false);
    B.Icon_IconData_58332_false_null = new D.Icon(B.IconData_58332_false, null);
    B.IconData_58891_false = new D.IconData(58891, false);
    B.Icon_IconData_58891_false_null = new D.Icon(B.IconData_58891_false, null);
    B.Interval_75R = new D.Interval(0, 0.1, G.C__Linear);
    B.Interval_E4y = new D.Interval(0.5, 1, E.Cubic_JUR);
    B.LaunchMode_0 = new A.LaunchMode(0, "platformDefault");
    B.ListTileStyle_0 = new A.ListTileStyle(0, "list");
    B.ListTileStyle_1 = new A.ListTileStyle(1, "drawer");
    B.TextStyle_SVP = new D.TextStyle(true, null, null, null, null, null, 20, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.SelectableText_null = new A.SelectableText(null);
    B.ListTile_E0K = new A.ListTile(null, B.SelectableText_null, null, null);
    B.C_ActivateIntent = new A.ActivateIntent();
    B.ScrollIntent_KrF = new A.ScrollIntent(G.AxisDirection_2, G.ScrollIncrementType_1);
    B.List_2WE = C._setArrayType(makeConstList([B.C_ActivateIntent, B.ScrollIntent_KrF]), C.findType("JSArray<Intent>"));
    B._RouteRestorationType_0 = new A._RouteRestorationType(0, "named");
    B._RouteRestorationType_1 = new A._RouteRestorationType(1, "anonymous");
    B.List_MYz = C._setArrayType(makeConstList([B._RouteRestorationType_0, B._RouteRestorationType_1]), C.findType("JSArray<_RouteRestorationType>"));
    B.List_empty14 = C._setArrayType(makeConstList([]), type$.JSArray_NavigatorObserver);
    B.List_empty13 = C._setArrayType(makeConstList([]), type$.JSArray_Object);
    B.List_empty16 = C._setArrayType(makeConstList([]), C.findType("JSArray<Page<@>>"));
    B._ListTileSlot_0 = new A._ListTileSlot(0, "leading");
    B._ListTileSlot_1 = new A._ListTileSlot(1, "title");
    B._ListTileSlot_2 = new A._ListTileSlot(2, "subtitle");
    B._ListTileSlot_3 = new A._ListTileSlot(3, "trailing");
    B.List_ml5 = C._setArrayType(makeConstList([B._ListTileSlot_0, B._ListTileSlot_1, B._ListTileSlot_2, B._ListTileSlot_3]), C.findType("JSArray<_ListTileSlot>"));
    B._CornerId_0 = new A._CornerId(0, "topLeft");
    B._CornerId_3 = new A._CornerId(3, "bottomRight");
    B._Diagonal__CornerId_0__CornerId_3 = new A._Diagonal(B._CornerId_0, B._CornerId_3);
    B._Diagonal__CornerId_3__CornerId_0 = new A._Diagonal(B._CornerId_3, B._CornerId_0);
    B._CornerId_1 = new A._CornerId(1, "topRight");
    B._CornerId_2 = new A._CornerId(2, "bottomLeft");
    B._Diagonal__CornerId_1__CornerId_2 = new A._Diagonal(B._CornerId_1, B._CornerId_2);
    B._Diagonal__CornerId_2__CornerId_1 = new A._Diagonal(B._CornerId_2, B._CornerId_1);
    B.List_oyU = C._setArrayType(makeConstList([B._Diagonal__CornerId_0__CornerId_3, B._Diagonal__CornerId_3__CornerId_0, B._Diagonal__CornerId_1__CornerId_2, B._Diagonal__CornerId_2__CornerId_1]), C.findType("JSArray<_Diagonal>"));
    B.List_true_false = C._setArrayType(makeConstList([true, false]), C.findType("JSArray<bool>"));
    B.Text_B8J = new D.Text("\u7ec4\u4ef6\u6b63\u5728\u52a0\u8f7d", null, null, null, null, null, null, null, null, null, null);
    B.List_uHn = C._setArrayType(makeConstList([H.CircularProgressIndicator_null, B.Text_B8J]), type$.JSArray_Widget);
    B.Map_empty6 = new C.ConstantStringMap(0, {}, B.List_empty13, C.findType("ConstantStringMap<Object,_HeroState>"));
    B.Map_empty7 = new C.ConstantStringMap(0, {}, E.List_empty1, C.findType("ConstantStringMap<String,Widget(BuildContext)>"));
    B.SingleActivator_mmH5 = new F.SingleActivator(E.LogicalKeyboardKey_32, false, false, false, false);
    B.SingleActivator_gc6 = new F.SingleActivator(E.LogicalKeyboardKey_4294967309, false, false, false, false);
    B.SingleActivator_soA = new F.SingleActivator(E.LogicalKeyboardKey_8589935117, false, false, false, false);
    B.SingleActivator_Qwp = new F.SingleActivator(E.LogicalKeyboardKey_4294967323, false, false, false, false);
    B.SingleActivator_gc60 = new F.SingleActivator(E.LogicalKeyboardKey_4294967305, false, false, false, false);
    B.SingleActivator_gc61 = new F.SingleActivator(E.LogicalKeyboardKey_4294967305, false, true, false, false);
    B.SingleActivator_j8H7 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, false, false, false, false);
    B.SingleActivator_j8H8 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, false, false, false, false);
    B.SingleActivator_4MF = new F.SingleActivator(E.LogicalKeyboardKey_4294968072, false, false, false, false);
    B.SingleActivator_j8H35 = new F.SingleActivator(E.LogicalKeyboardKey_4294968071, false, false, false, false);
    B.C_PrioritizedIntents = new A.PrioritizedIntents();
    B.C_ButtonActivateIntent = new A.ButtonActivateIntent();
    B.C_DismissIntent = new A.DismissIntent();
    B.C_NextFocusIntent = new A.NextFocusIntent();
    B.C_PreviousFocusIntent = new A.PreviousFocusIntent();
    B.ScrollIncrementType_0 = new D.ScrollIncrementType(0, "line");
    B.ScrollIntent_ssH = new A.ScrollIntent(G.AxisDirection_0, B.ScrollIncrementType_0);
    B.ScrollIntent_cKo = new A.ScrollIntent(G.AxisDirection_2, B.ScrollIncrementType_0);
    B.ScrollIntent_qNW = new A.ScrollIntent(G.AxisDirection_3, B.ScrollIncrementType_0);
    B.ScrollIntent_wij = new A.ScrollIntent(G.AxisDirection_1, B.ScrollIncrementType_0);
    B.ScrollIntent_qxw = new A.ScrollIntent(G.AxisDirection_0, G.ScrollIncrementType_1);
    B.Map_zPybB = new C.GeneralConstantMap([B.SingleActivator_mmH5, B.C_PrioritizedIntents, B.SingleActivator_gc6, B.C_ButtonActivateIntent, B.SingleActivator_soA, B.C_ButtonActivateIntent, B.SingleActivator_Qwp, B.C_DismissIntent, B.SingleActivator_gc60, B.C_NextFocusIntent, B.SingleActivator_gc61, B.C_PreviousFocusIntent, H.SingleActivator_j8H9, B.ScrollIntent_ssH, H.SingleActivator_j8H10, B.ScrollIntent_cKo, B.SingleActivator_j8H7, B.ScrollIntent_qNW, B.SingleActivator_j8H8, B.ScrollIntent_wij, B.SingleActivator_4MF, B.ScrollIntent_qxw, B.SingleActivator_j8H35, B.ScrollIntent_KrF], C.findType("GeneralConstantMap<ShortcutActivator,Intent>"));
    B.MaterialState_5 = new F.MaterialState(5, "scrolledUnder");
    B.PreferredLaunchMode_2 = new C.PreferredLaunchMode(2, "externalApplication");
    B.RouteInformationReportingType_0 = new A.RouteInformationReportingType(0, "none");
    B.RouteInformationReportingType_1 = new A.RouteInformationReportingType(1, "neglect");
    B.ScaffoldGeometry_null_null = new A.ScaffoldGeometry(null, null);
    B.ScrollToDocumentBoundaryIntent_false = new A.ScrollToDocumentBoundaryIntent(false);
    B.ScrollToDocumentBoundaryIntent_true = new A.ScrollToDocumentBoundaryIntent(true);
    B.SingleActivator_j8H0 = new F.SingleActivator(E.LogicalKeyboardKey_4294968069, false, false, false, false);
    B.SingleActivator_j8H = new F.SingleActivator(E.LogicalKeyboardKey_4294968070, false, false, false, false);
    B.SingleActivator_j8H14 = new F.SingleActivator(E.LogicalKeyboardKey_4294968065, false, true, false, false);
    B.SingleActivator_j8H11 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, false, true, false, false);
    B.SingleActivator_j8H12 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, false, true, false, false);
    B.SingleActivator_j8H13 = new F.SingleActivator(E.LogicalKeyboardKey_4294968068, false, true, false, false);
    B.SingleActivator_j8H2 = new F.SingleActivator(E.LogicalKeyboardKey_4294968069, false, true, false, false);
    B.SingleActivator_j8H1 = new F.SingleActivator(E.LogicalKeyboardKey_4294968070, false, true, false, false);
    B.SingleActivator_j8H30 = new F.SingleActivator(E.LogicalKeyboardKey_4294968065, false, false, false, true);
    B.SingleActivator_j8H27 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, false, false, false, true);
    B.SingleActivator_j8H28 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, false, false, false, true);
    B.SingleActivator_j8H29 = new F.SingleActivator(E.LogicalKeyboardKey_4294968068, false, false, false, true);
    B.SingleActivator_j8H34 = new F.SingleActivator(E.LogicalKeyboardKey_4294968065, false, true, false, true);
    B.SingleActivator_j8H31 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, false, true, false, true);
    B.SingleActivator_j8H32 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, false, true, false, true);
    B.SingleActivator_j8H33 = new F.SingleActivator(E.LogicalKeyboardKey_4294968068, false, true, false, true);
    B.SingleActivator_j8H23 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, true, false, false, false);
    B.SingleActivator_j8H24 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, true, false, false, false);
    B.SingleActivator_j8H4 = new F.SingleActivator(E.LogicalKeyboardKey_4294968069, true, false, false, false);
    B.SingleActivator_j8H3 = new F.SingleActivator(E.LogicalKeyboardKey_4294968070, true, false, false, false);
    B.SingleActivator_j8H25 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, true, true, false, false);
    B.SingleActivator_j8H26 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, true, true, false, false);
    B.SingleActivator_j8H6 = new F.SingleActivator(E.LogicalKeyboardKey_4294968069, true, true, false, false);
    B.SingleActivator_j8H5 = new F.SingleActivator(E.LogicalKeyboardKey_4294968070, true, true, false, false);
    B.SingleActivator_j8H18 = new F.SingleActivator(E.LogicalKeyboardKey_4294968065, false, false, true, false);
    B.SingleActivator_j8H15 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, false, false, true, false);
    B.SingleActivator_j8H16 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, false, false, true, false);
    B.SingleActivator_j8H17 = new F.SingleActivator(E.LogicalKeyboardKey_4294968068, false, false, true, false);
    B.SingleActivator_j8H22 = new F.SingleActivator(E.LogicalKeyboardKey_4294968065, false, true, true, false);
    B.SingleActivator_j8H19 = new F.SingleActivator(E.LogicalKeyboardKey_4294968066, false, true, true, false);
    B.SingleActivator_j8H20 = new F.SingleActivator(E.LogicalKeyboardKey_4294968067, false, true, true, false);
    B.SingleActivator_j8H21 = new F.SingleActivator(E.LogicalKeyboardKey_4294968068, false, true, true, false);
    B.SingleActivator_mmH10 = new F.SingleActivator(E.LogicalKeyboardKey_97, false, false, false, true);
    B.SingleActivator_mmH8 = new F.SingleActivator(E.LogicalKeyboardKey_99, false, false, false, true);
    B.SingleActivator_mmH9 = new F.SingleActivator(E.LogicalKeyboardKey_118, false, false, false, true);
    B.SingleActivator_mmH7 = new F.SingleActivator(E.LogicalKeyboardKey_120, false, false, false, true);
    B.SingleActivator_mmH11 = new F.SingleActivator(E.LogicalKeyboardKey_122, false, false, false, true);
    B.SingleActivator_mmH12 = new F.SingleActivator(E.LogicalKeyboardKey_122, false, true, false, true);
    B.SingleActivator_mmH2 = new F.SingleActivator(E.LogicalKeyboardKey_97, true, false, false, false);
    B.SingleActivator_mmH15 = new F.SingleActivator(E.LogicalKeyboardKey_98, true, false, false, false);
    B.SingleActivator_mmH0 = new F.SingleActivator(E.LogicalKeyboardKey_99, true, false, false, false);
    B.SingleActivator_mmH13 = new F.SingleActivator(E.LogicalKeyboardKey_101, true, false, false, false);
    B.SingleActivator_mmH14 = new F.SingleActivator(E.LogicalKeyboardKey_102, true, false, false, false);
    B.SingleActivator_mmH16 = new F.SingleActivator(E.LogicalKeyboardKey_110, true, false, false, false);
    B.SingleActivator_mmH17 = new F.SingleActivator(E.LogicalKeyboardKey_112, true, false, false, false);
    B.SingleActivator_mmH6 = new F.SingleActivator(E.LogicalKeyboardKey_116, true, false, false, false);
    B.SingleActivator_mmH1 = new F.SingleActivator(E.LogicalKeyboardKey_118, true, false, false, false);
    B.SingleActivator_mmH = new F.SingleActivator(E.LogicalKeyboardKey_120, true, false, false, false);
    B.SingleActivator_mmH3 = new F.SingleActivator(E.LogicalKeyboardKey_122, true, false, false, false);
    B.SingleActivator_mmH4 = new F.SingleActivator(E.LogicalKeyboardKey_122, true, true, false, false);
    B.SnackBarClosedReason_3 = new A.SnackBarClosedReason(3, "hide");
    B.SnackBarClosedReason_5 = new A.SnackBarClosedReason(5, "timeout");
    B.StrutStyle_yfz = new F.StrutStyle(null, null, null, null, null, null, null, null, null);
    B.SystemUiOverlayStyle_6UD = new C.SystemUiOverlayStyle(E.Color_4278190080, null, E.Brightness_1, null, null, E.Brightness_0, E.Brightness_1, null);
    B.SystemUiOverlayStyle_qsc = new C.SystemUiOverlayStyle(E.Color_4278190080, null, E.Brightness_1, null, null, E.Brightness_1, E.Brightness_0, null);
    B.Color_3506372608 = new C.Color(3506372608);
    B.TextStyle_86y = new D.TextStyle(true, B.Color_3506372608, null, "monospace", null, null, 48, G.FontWeight_8, null, null, null, null, null, null, null, null, null, E.TextDecoration_1, G.Color_4294967040, E.TextDecorationStyle_1, null, "fallback style; consider putting your text in a Material", null, null, null, null);
    B.Text_66y = new D.Text("\u7535\u8bdd\u672c", null, null, null, null, null, null, null, null, null, null);
    B.Text_aWd = new D.Text("\u98df\u5802", null, null, null, null, null, null, null, null, null, null);
    B.Text_yHZ = new D.Text("\u7efc\u5408\u697c", null, null, null, null, null, null, null, null, null, null);
    B.ThemeMode_0 = new A.ThemeMode(0, "system");
    B.Threshold_znv = new F.Threshold(0.5);
    B.TraversalDirection_3 = new F.TraversalDirection(3, "left");
    B.Type_DoNothingIntent_IQR = C.typeLiteral("DoNothingIntent");
    B.Type_NextFocusIntent_6xB = C.typeLiteral("NextFocusIntent");
    B.Type_PreviousFocusIntent_wsa = C.typeLiteral("PreviousFocusIntent");
    B.Type_PrioritizedIntents_fLu = C.typeLiteral("PrioritizedIntents");
    B.Type_RequestFocusIntent_OPB = C.typeLiteral("RequestFocusIntent");
    B.Type_ScrollIntent_mpH = C.typeLiteral("ScrollIntent");
    B.Type_VoidCallbackIntent_sEX = C.typeLiteral("VoidCallbackIntent");
    B.Type_WidgetsLocalizations_43h = C.typeLiteral("WidgetsLocalizations");
    B.Type_s8I = C.typeLiteral("DoNothingAndStopPropagationIntent");
    B.VerticalDivider_null = new A.VerticalDivider(null);
    B.XidianDir_null = new A.XidianDir(null);
    B._FloatingActionButtonType_1 = new A._FloatingActionButtonType(1, "small");
    B._FloatingActionButtonType_2 = new A._FloatingActionButtonType(2, "large");
    B._FloatingActionButtonType_3 = new A._FloatingActionButtonType(3, "extended");
    B._RouteLifecycle_1 = new A._RouteLifecycle(1, "add");
    B._RouteLifecycle_10 = new A._RouteLifecycle(10, "remove");
    B._RouteLifecycle_11 = new A._RouteLifecycle(11, "popping");
    B._RouteLifecycle_12 = new A._RouteLifecycle(12, "removing");
    B._RouteLifecycle_13 = new A._RouteLifecycle(13, "dispose");
    B._RouteLifecycle_14 = new A._RouteLifecycle(14, "disposed");
    B._RouteLifecycle_2 = new A._RouteLifecycle(2, "adding");
    B._RouteLifecycle_3 = new A._RouteLifecycle(3, "push");
    B._RouteLifecycle_4 = new A._RouteLifecycle(4, "pushReplace");
    B._RouteLifecycle_5 = new A._RouteLifecycle(5, "pushing");
    B._RouteLifecycle_6 = new A._RouteLifecycle(6, "replace");
    B._RouteLifecycle_7 = new A._RouteLifecycle(7, "idle");
    B._RouteLifecycle_8 = new A._RouteLifecycle(8, "pop");
    B._ScaffoldSlot_0 = new A._ScaffoldSlot(0, "body");
    B._ScaffoldSlot_1 = new A._ScaffoldSlot(1, "appBar");
    B._ScaffoldSlot_10 = new A._ScaffoldSlot(10, "endDrawer");
    B._ScaffoldSlot_11 = new A._ScaffoldSlot(11, "statusBar");
    B._ScaffoldSlot_2 = new A._ScaffoldSlot(2, "bodyScrim");
    B._ScaffoldSlot_3 = new A._ScaffoldSlot(3, "bottomSheet");
    B._ScaffoldSlot_4 = new A._ScaffoldSlot(4, "snackBar");
    B._ScaffoldSlot_5 = new A._ScaffoldSlot(5, "materialBanner");
    B._ScaffoldSlot_6 = new A._ScaffoldSlot(6, "persistentFooter");
    B._ScaffoldSlot_7 = new A._ScaffoldSlot(7, "bottomNavigationBar");
    B._ScaffoldSlot_8 = new A._ScaffoldSlot(8, "floatingActionButton");
    B._ScaffoldSlot_9 = new A._ScaffoldSlot(9, "drawer");
    B._ToolbarSlot_0 = new A._ToolbarSlot(0, "leading");
    B._ToolbarSlot_1 = new A._ToolbarSlot(1, "middle");
    B._ToolbarSlot_2 = new A._ToolbarSlot(2, "trailing");
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "_ScalingFabMotionAnimator__rotationTween", "$get$_ScalingFabMotionAnimator__rotationTween", () => D.Tween$(0.75, 1, type$.double));
    _lazyFinal($, "_ScalingFabMotionAnimator__thresholdCenterTween", "$get$_ScalingFabMotionAnimator__thresholdCenterTween", () => D.CurveTween$(B.Threshold_znv));
    _lazyFinal($, "_FloatingActionButtonTransitionState__entranceTurnTween", "$get$_FloatingActionButtonTransitionState__entranceTurnTween", () => D.Tween$(0.875, 1, type$.double).chain$1(D.CurveTween$(B.Cubic_JUR0)));
    _lazy($, "WidgetsApp_defaultActions", "$get$WidgetsApp_defaultActions", () => {
      var t1 = C.findType("~(Action<Intent>)");
      return C.LinkedHashMap_LinkedHashMap$_literal([B.Type_DoNothingIntent_IQR, F.DoNothingAction$(true), B.Type_s8I, F.DoNothingAction$(false), B.Type_RequestFocusIntent_OPB, new A.RequestFocusAction(D.ObserverList$(t1)), B.Type_NextFocusIntent_6xB, new A.NextFocusAction(D.ObserverList$(t1)), B.Type_PreviousFocusIntent_wsa, new A.PreviousFocusAction(D.ObserverList$(t1)), H.Type_DirectionalFocusIntent_evN, new F.DirectionalFocusAction(false, D.ObserverList$(t1)), B.Type_ScrollIntent_mpH, new A.ScrollAction(D.ObserverList$(t1)), B.Type_PrioritizedIntents_fLu, new A.PrioritizedAction(D.ObserverList$(t1)), B.Type_VoidCallbackIntent_sEX, new A.VoidCallbackAction(D.ObserverList$(t1))], type$.Type, type$.Action_Intent);
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__commonShortcuts", "$get$DefaultTextEditingShortcuts__commonShortcuts", () => {
      var t3, _i, pressShift,
        t1 = type$.Intent,
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = C.findType("SingleActivator"), _i = 0; _i < 2; ++_i) {
        pressShift = B.List_true_false[_i];
        t2.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, false, false, pressShift), B.DeleteCharacterIntent_false, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, true, false, pressShift), B.DeleteToNextWordBoundaryIntent_false, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, true, false, false, pressShift), B.DeleteToLineBreakIntent_false, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, false, false, pressShift), B.DeleteCharacterIntent_true, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, true, false, pressShift), B.DeleteToNextWordBoundaryIntent_true, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, true, false, false, pressShift), B.DeleteToLineBreakIntent_true], t3, t1));
      }
      t2.$indexSet(0, B.SingleActivator_j8H7, B.ExtendSelectionByCharacterIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H8, B.ExtendSelectionByCharacterIntent_true_false_false_true);
      t2.$indexSet(0, H.SingleActivator_j8H9, B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_false);
      t2.$indexSet(0, H.SingleActivator_j8H10, B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H11, B.ExtendSelectionByCharacterIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H12, B.ExtendSelectionByCharacterIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H13, B.ExtendSelectionVerticallyToAdjacentLineIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H14, B.ExtendSelectionVerticallyToAdjacentLineIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H15, B.ExtendSelectionToLineBreakIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H16, B.ExtendSelectionToLineBreakIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H17, B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H18, B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H19, B.ExtendSelectionToLineBreakIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H20, B.ExtendSelectionToLineBreakIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H21, B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H22, B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H23, B.ExtendSelectionToNextWordBoundaryIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H24, B.ExtendSelectionToNextWordBoundaryIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H25, B.ExtendSelectionToNextWordBoundaryIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H26, B.ExtendSelectionToNextWordBoundaryIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_mmH, B.CopySelectionTextIntent_true);
      t2.$indexSet(0, B.SingleActivator_mmH0, B.CopySelectionTextIntent_false);
      t2.$indexSet(0, B.SingleActivator_mmH1, B.C_PasteTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH2, B.C_SelectAllTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH3, B.C_UndoTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH4, B.C_RedoTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH5, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_gc6, B.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__androidShortcuts", "$get$DefaultTextEditingShortcuts__androidShortcuts", () => $.$get$DefaultTextEditingShortcuts__commonShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__fuchsiaShortcuts", "$get$DefaultTextEditingShortcuts__fuchsiaShortcuts", () => $.$get$DefaultTextEditingShortcuts__androidShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__linuxShortcuts", "$get$DefaultTextEditingShortcuts__linuxShortcuts", () => {
      var t1 = C.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__commonShortcuts(), type$.ShortcutActivator, type$.Intent);
      t1.$indexSet(0, B.SingleActivator_j8H, B.ExtendSelectionToLineBreakIntent_true_false_false_false);
      t1.$indexSet(0, B.SingleActivator_j8H0, B.ExtendSelectionToLineBreakIntent_true_false_false_true);
      t1.$indexSet(0, B.SingleActivator_j8H1, B.ExtendSelectionToLineBreakIntent_false_false_false_false);
      t1.$indexSet(0, B.SingleActivator_j8H2, B.ExtendSelectionToLineBreakIntent_false_false_false_true);
      return t1;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__macShortcuts", "$get$DefaultTextEditingShortcuts__macShortcuts", () => {
      var t3, _i, pressShift,
        t1 = type$.Intent,
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = C.findType("SingleActivator"), _i = 0; _i < 2; ++_i) {
        pressShift = B.List_true_false[_i];
        t2.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, false, false, pressShift), B.DeleteCharacterIntent_false, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, true, false, false, pressShift), B.DeleteToNextWordBoundaryIntent_false, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, false, true, pressShift), B.DeleteToLineBreakIntent_false, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, false, false, pressShift), B.DeleteCharacterIntent_true, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, true, false, false, pressShift), B.DeleteToNextWordBoundaryIntent_true, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, false, true, pressShift), B.DeleteToLineBreakIntent_true], t3, t1));
      }
      t2.$indexSet(0, B.SingleActivator_j8H7, B.ExtendSelectionByCharacterIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H8, B.ExtendSelectionByCharacterIntent_true_false_false_true);
      t2.$indexSet(0, H.SingleActivator_j8H9, B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_false);
      t2.$indexSet(0, H.SingleActivator_j8H10, B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H11, B.ExtendSelectionByCharacterIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H12, B.ExtendSelectionByCharacterIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H13, B.ExtendSelectionVerticallyToAdjacentLineIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H14, B.ExtendSelectionVerticallyToAdjacentLineIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H15, B.ExtendSelectionToNextWordBoundaryIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H16, B.ExtendSelectionToNextWordBoundaryIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H17, B.ExtendSelectionToLineBreakIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H18, B.ExtendSelectionToLineBreakIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H19, B.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent_false);
      t2.$indexSet(0, B.SingleActivator_j8H20, B.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent_true);
      t2.$indexSet(0, B.SingleActivator_j8H21, B.ExtendSelectionToLineBreakIntent_false_true_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H22, B.ExtendSelectionToLineBreakIntent_false_true_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H27, B.ExtendSelectionToLineBreakIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H28, B.ExtendSelectionToLineBreakIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H29, B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H30, B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_j8H31, B.ExpandSelectionToLineBreakIntent_false);
      t2.$indexSet(0, B.SingleActivator_j8H32, B.ExpandSelectionToLineBreakIntent_true);
      t2.$indexSet(0, B.SingleActivator_j8H33, B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_false);
      t2.$indexSet(0, B.SingleActivator_j8H34, B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_true);
      t2.$indexSet(0, B.SingleActivator_mmH6, B.C_TransposeCharactersIntent);
      t2.$indexSet(0, B.SingleActivator_j8H, B.ScrollToDocumentBoundaryIntent_false);
      t2.$indexSet(0, B.SingleActivator_j8H0, B.ScrollToDocumentBoundaryIntent_true);
      t2.$indexSet(0, B.SingleActivator_j8H1, B.ExpandSelectionToDocumentBoundaryIntent_false);
      t2.$indexSet(0, B.SingleActivator_j8H2, B.ExpandSelectionToDocumentBoundaryIntent_true);
      t2.$indexSet(0, B.SingleActivator_mmH7, B.CopySelectionTextIntent_true);
      t2.$indexSet(0, B.SingleActivator_mmH8, B.CopySelectionTextIntent_false);
      t2.$indexSet(0, B.SingleActivator_mmH9, B.C_PasteTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH10, B.C_SelectAllTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH11, B.C_UndoTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH12, B.C_RedoTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH13, B.ExtendSelectionToLineBreakIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_mmH2, B.ExtendSelectionToLineBreakIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_mmH14, B.ExtendSelectionByCharacterIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_mmH15, B.ExtendSelectionByCharacterIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_mmH16, B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_true);
      t2.$indexSet(0, B.SingleActivator_mmH17, B.ExtendSelectionVerticallyToAdjacentLineIntent_true_false_false_false);
      t2.$indexSet(0, B.SingleActivator_mmH5, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_gc6, B.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__iOSShortcuts", "$get$DefaultTextEditingShortcuts__iOSShortcuts", () => $.$get$DefaultTextEditingShortcuts__macShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__windowsShortcuts", "$get$DefaultTextEditingShortcuts__windowsShortcuts", () => {
      var t1 = C.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__commonShortcuts(), type$.ShortcutActivator, type$.Intent);
      t1.$indexSet(0, B.SingleActivator_j8H, B.ExtendSelectionToLineBreakIntent_true_false_true_false);
      t1.$indexSet(0, B.SingleActivator_j8H0, B.ExtendSelectionToLineBreakIntent_true_false_true_true);
      t1.$indexSet(0, B.SingleActivator_j8H1, B.ExtendSelectionToLineBreakIntent_false_false_true_false);
      t1.$indexSet(0, B.SingleActivator_j8H2, B.ExtendSelectionToLineBreakIntent_false_false_true_true);
      t1.$indexSet(0, B.SingleActivator_j8H3, B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_false);
      t1.$indexSet(0, B.SingleActivator_j8H4, B.ExtendSelectionToDocumentBoundaryIntent_true_false_false_true);
      t1.$indexSet(0, B.SingleActivator_j8H5, B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_false);
      t1.$indexSet(0, B.SingleActivator_j8H6, B.ExtendSelectionToDocumentBoundaryIntent_false_false_false_true);
      return t1;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__webDisablingTextShortcuts", "$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts", () => {
      var t3, _i, pressShift,
        t1 = type$.Intent,
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = C.findType("SingleActivator"), _i = 0; _i < 2; ++_i) {
        pressShift = B.List_true_false[_i];
        t2.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, true, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, true, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, true, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, true, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967304, false, false, true, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(E.LogicalKeyboardKey_4294967423, false, false, true, pressShift), B.C_DoNothingAndStopPropagationTextIntent], t3, t1));
      }
      t2.$indexSet(0, B.SingleActivator_j8H18, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H15, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H16, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H17, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H22, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H19, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H20, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H21, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, H.SingleActivator_j8H10, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H7, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H8, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, H.SingleActivator_j8H9, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H23, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H24, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H25, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H26, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H0, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H30, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H27, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H28, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H29, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H34, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H31, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H32, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H33, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H14, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H11, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H12, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H13, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H2, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H1, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H4, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_j8H3, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH5, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_gc6, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH7, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH0, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH8, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH1, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH9, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH2, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_mmH10, B.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "_HeroFlight__reverseTween", "$get$_HeroFlight__reverseTween", () => D.Tween$(1, 0, type$.double));
    _lazy($, "_RouteEntry_notAnnounced", "$get$_RouteEntry_notAnnounced", () => {
      var t1 = D.ValueNotifier$(null),
        t2 = C.Completer_Completer(type$.void);
      return new A._NotAnnounced(H.RouteSettings_null_null, t1, t2);
    });
    _lazy($, "app", "$get$app", () => new A.MaterialApp(B.XidianDir_null, "\u897f\u7535\u76ee\u5f55", D.ThemeData_ThemeData(null, Q.MaterialColor_Map_JNEyN_4284955319, null), null));
    _lazy($, "loading", "$get$loading", () => D.Center$(D.Column$(B.List_uHn, G.CrossAxisAlignment_2, G.MainAxisAlignment_2, G.MainAxisSize_1), null, null));
  })();
};

$__dart_deferred_initializers__["BGCFh/jUS+va5X29GdVPWad6Y2E="] = $__dart_deferred_initializers__.current
